// Copyright 2022 The GPflow Contributors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Definition of the Lark grammar of the domain specific language for specifying tensors.

?argument_or_note_spec: argument_spec
                      | note_spec

argument_spec: argument_ref ":" shape_spec ("if" bool_spec)? note_spec?

?bool_spec: bool_spec_1
          | bool_spec_or

?bool_spec_1: bool_spec_2
            | bool_spec_and

?bool_spec_2: "(" bool_spec ")"
            | bool_spec_not
            | bool_spec_argument_ref_is_none
            | bool_spec_argument_ref_is_not_none
            | bool_spec_argument_ref

bool_spec_or: bool_spec "or" bool_spec_1
bool_spec_and: bool_spec_1 "and" bool_spec_2
bool_spec_not: "not" bool_spec_2
bool_spec_argument_ref_is_none: argument_ref "is" "None"
bool_spec_argument_ref_is_not_none: argument_ref "is" "not" "None"
bool_spec_argument_ref: argument_ref

?argument_ref: argument_ref_root
             | argument_ref_attribute
             | argument_ref_index
             | argument_ref_all
             | argument_ref_keys
             | argument_ref_values

argument_ref_root: CNAME
argument_ref_attribute: argument_ref "." CNAME
argument_ref_index: argument_ref "[" INT "]"
argument_ref_all: argument_ref "[" "all" "]"
argument_ref_keys: argument_ref "." "keys" "(" ")"
argument_ref_values: argument_ref "." "values" "(" ")"

tensor_spec: shape_spec note_spec?

shape_spec: "[" dimension_specs "]"

dimension_specs: [dimension_spec ("," dimension_spec)* ","?]
?dimension_spec: dimension_spec_broadcast
               | dimension_spec_broadcastable

dimension_spec_broadcast: BROADCAST dimension_spec_broadcastable

?dimension_spec_broadcastable: dimension_spec_constant
                             | dimension_spec_variable
                             | dimension_spec_anonymous
                             | dimension_spec_variable_rank
                             | dimension_spec_anonymous_variable_rank

dimension_spec_constant: INT
dimension_spec_variable: CNAME
dimension_spec_anonymous: DOT | NONE
dimension_spec_variable_rank: (STAR CNAME) | (CNAME ELLIPSIS)
dimension_spec_anonymous_variable_rank: STAR | ELLIPSIS

note_spec: HASH NOTE_TEXT*

BROADCAST: "broadcast"
HASH: "#"
DOT: "."
NONE: "None"
STAR: "*"
ELLIPSIS: "..."

NOTE_TEXT: /.+/

%import common.CNAME
%import common.INT
%import common.WS

%ignore WS
