Search.setIndex({"docnames": ["api/gpflow/base/index", "api/gpflow/conditionals/index", "api/gpflow/conditionals/util/index", "api/gpflow/config/index", "api/gpflow/covariances/index", "api/gpflow/expectations/index", "api/gpflow/expectations/quadratures/index", "api/gpflow/experimental/check_shapes/accessors/index", "api/gpflow/experimental/check_shapes/argument_ref/index", "api/gpflow/experimental/check_shapes/bool_specs/index", "api/gpflow/experimental/check_shapes/checker_context/index", "api/gpflow/experimental/check_shapes/decorator/index", "api/gpflow/experimental/check_shapes/error_contexts/index", "api/gpflow/experimental/check_shapes/exceptions/index", "api/gpflow/experimental/check_shapes/index", "api/gpflow/experimental/check_shapes/parser/index", "api/gpflow/experimental/check_shapes/shapes/index", "api/gpflow/experimental/check_shapes/specs/index", "api/gpflow/experimental/index", "api/gpflow/experimental/utils/index", "api/gpflow/functions/index", "api/gpflow/index", "api/gpflow/inducing_variables/index", "api/gpflow/inducing_variables/inducing_variables/index", "api/gpflow/kernels/base/index", "api/gpflow/kernels/index", "api/gpflow/kullback_leiblers/index", "api/gpflow/likelihoods/index", "api/gpflow/likelihoods/utils/index", "api/gpflow/logdensities/index", "api/gpflow/models/cglb/index", "api/gpflow/models/gpr/index", "api/gpflow/models/index", "api/gpflow/models/sgpr/index", "api/gpflow/models/svgp/index", "api/gpflow/models/util/index", "api/gpflow/models/vgp/index", "api/gpflow/monitor/index", "api/gpflow/optimizers/index", "api/gpflow/optimizers/natgrad/index", "api/gpflow/posteriors/index", "api/gpflow/probability_distributions/index", "api/gpflow/quadrature/gauss_hermite/index", "api/gpflow/quadrature/index", "api/gpflow/type_flags/index", "api/gpflow/utilities/index", "api/gpflow/utilities/ops/index", "api/gpflow/utilities/parameter_or_function/index", "benchmarks", "bibliography", "getting_started", "index", "installation", "notebooks/advanced/GPLVM", "notebooks/advanced/changepoints", "notebooks/advanced/convolutional", "notebooks/advanced/coregionalisation", "notebooks/advanced/fast_predictions", "notebooks/advanced/gps_for_big_data", "notebooks/advanced/heteroskedastic", "notebooks/advanced/mcmc", "notebooks/advanced/multiclass_classification", "notebooks/advanced/multioutput", "notebooks/advanced/natural_gradients", "notebooks/advanced/ordinal_regression", "notebooks/advanced/variational_fourier_features", "notebooks/advanced/varying_noise", "notebooks/getting_started/basic_usage", "notebooks/getting_started/classification_and_other_data_distributions", "notebooks/getting_started/kernels", "notebooks/getting_started/large_data", "notebooks/getting_started/mean_functions", "notebooks/getting_started/monitoring", "notebooks/getting_started/parameters_and_their_optimisation", "notebooks/getting_started/saving_and_loading", "notebooks/tailor/external-mean-function", "notebooks/tailor/gp_nn", "notebooks/tailor/kernel_design", "notebooks/tailor/mixture_density_network", "notebooks/theory/FITCvsVFE", "notebooks/theory/SGPR_notes", "notebooks/theory/Sanity_check", "notebooks/theory/cglb", "notebooks/theory/upper_bound", "notebooks/theory/vgp_notes", "user_guide"], "filenames": ["api/gpflow/base/index.rst", "api/gpflow/conditionals/index.rst", "api/gpflow/conditionals/util/index.rst", "api/gpflow/config/index.rst", "api/gpflow/covariances/index.rst", "api/gpflow/expectations/index.rst", "api/gpflow/expectations/quadratures/index.rst", "api/gpflow/experimental/check_shapes/accessors/index.rst", "api/gpflow/experimental/check_shapes/argument_ref/index.rst", "api/gpflow/experimental/check_shapes/bool_specs/index.rst", "api/gpflow/experimental/check_shapes/checker_context/index.rst", "api/gpflow/experimental/check_shapes/decorator/index.rst", "api/gpflow/experimental/check_shapes/error_contexts/index.rst", "api/gpflow/experimental/check_shapes/exceptions/index.rst", "api/gpflow/experimental/check_shapes/index.rst", "api/gpflow/experimental/check_shapes/parser/index.rst", "api/gpflow/experimental/check_shapes/shapes/index.rst", "api/gpflow/experimental/check_shapes/specs/index.rst", "api/gpflow/experimental/index.rst", "api/gpflow/experimental/utils/index.rst", "api/gpflow/functions/index.rst", "api/gpflow/index.rst", "api/gpflow/inducing_variables/index.rst", "api/gpflow/inducing_variables/inducing_variables/index.rst", "api/gpflow/kernels/base/index.rst", "api/gpflow/kernels/index.rst", "api/gpflow/kullback_leiblers/index.rst", "api/gpflow/likelihoods/index.rst", "api/gpflow/likelihoods/utils/index.rst", "api/gpflow/logdensities/index.rst", "api/gpflow/models/cglb/index.rst", "api/gpflow/models/gpr/index.rst", "api/gpflow/models/index.rst", "api/gpflow/models/sgpr/index.rst", "api/gpflow/models/svgp/index.rst", "api/gpflow/models/util/index.rst", "api/gpflow/models/vgp/index.rst", "api/gpflow/monitor/index.rst", "api/gpflow/optimizers/index.rst", "api/gpflow/optimizers/natgrad/index.rst", "api/gpflow/posteriors/index.rst", "api/gpflow/probability_distributions/index.rst", "api/gpflow/quadrature/gauss_hermite/index.rst", "api/gpflow/quadrature/index.rst", "api/gpflow/type_flags/index.rst", "api/gpflow/utilities/index.rst", "api/gpflow/utilities/ops/index.rst", "api/gpflow/utilities/parameter_or_function/index.rst", "benchmarks.rst", "bibliography.rst", "getting_started.rst", "index.rst", "installation.rst", "notebooks/advanced/GPLVM.ipynb", "notebooks/advanced/changepoints.ipynb", "notebooks/advanced/convolutional.ipynb", "notebooks/advanced/coregionalisation.ipynb", "notebooks/advanced/fast_predictions.ipynb", "notebooks/advanced/gps_for_big_data.ipynb", "notebooks/advanced/heteroskedastic.ipynb", "notebooks/advanced/mcmc.ipynb", "notebooks/advanced/multiclass_classification.ipynb", "notebooks/advanced/multioutput.ipynb", "notebooks/advanced/natural_gradients.ipynb", "notebooks/advanced/ordinal_regression.ipynb", "notebooks/advanced/variational_fourier_features.ipynb", "notebooks/advanced/varying_noise.ipynb", "notebooks/getting_started/basic_usage.ipynb", "notebooks/getting_started/classification_and_other_data_distributions.ipynb", "notebooks/getting_started/kernels.ipynb", "notebooks/getting_started/large_data.ipynb", "notebooks/getting_started/mean_functions.ipynb", "notebooks/getting_started/monitoring.ipynb", "notebooks/getting_started/parameters_and_their_optimisation.ipynb", "notebooks/getting_started/saving_and_loading.ipynb", "notebooks/tailor/external-mean-function.ipynb", "notebooks/tailor/gp_nn.ipynb", "notebooks/tailor/kernel_design.ipynb", "notebooks/tailor/mixture_density_network.ipynb", "notebooks/theory/FITCvsVFE.ipynb", "notebooks/theory/SGPR_notes.ipynb", "notebooks/theory/Sanity_check.ipynb", "notebooks/theory/cglb.ipynb", "notebooks/theory/upper_bound.ipynb", "notebooks/theory/vgp_notes.ipynb", "user_guide.rst"], "titles": ["gpflow.base", "gpflow.conditionals", "gpflow.conditionals.util", "gpflow.config", "gpflow.covariances", "gpflow.expectations", "gpflow.expectations.quadratures", "gpflow.experimental.check_shapes.accessors", "gpflow.experimental.check_shapes.argument_ref", "gpflow.experimental.check_shapes.bool_specs", "gpflow.experimental.check_shapes.checker_context", "gpflow.experimental.check_shapes.decorator", "gpflow.experimental.check_shapes.error_contexts", "gpflow.experimental.check_shapes.exceptions", "gpflow.experimental.check_shapes", "gpflow.experimental.check_shapes.parser", "gpflow.experimental.check_shapes.shapes", "gpflow.experimental.check_shapes.specs", "gpflow.experimental", "gpflow.experimental.utils", "gpflow.functions", "gpflow", "gpflow.inducing_variables", "gpflow.inducing_variables.inducing_variables", "gpflow.kernels.base", "gpflow.kernels", "gpflow.kullback_leiblers", "gpflow.likelihoods", "gpflow.likelihoods.utils", "gpflow.logdensities", "gpflow.models.cglb", "gpflow.models.gpr", "gpflow.models", "gpflow.models.sgpr", "gpflow.models.svgp", "gpflow.models.util", "gpflow.models.vgp", "gpflow.monitor", "gpflow.optimizers", "gpflow.optimizers.natgrad", "gpflow.posteriors", "gpflow.probability_distributions", "gpflow.quadrature.gauss_hermite", "gpflow.quadrature", "gpflow.type_flags", "gpflow.utilities", "gpflow.utilities.ops", "gpflow.utilities.parameter_or_function", "Benchmarks", "Bibliography", "Getting Started", "GPflow", "Installation", "Fake GPLVM.ipynb", "Fake changepoints.ipynb", "Fake convolutional.ipynb", "Fake coregionalisation.ipynb", "Fake fast_predictions.ipynb", "Fake gps_for_big_data.ipynb", "Fake heteroskedastic.ipynb", "Fake mcmc.ipynb", "Fake multiclass_classification.ipynb", "Fake multioutput.ipynb", "Fake natural_gradients.ipynb", "Fake ordinal_regression.ipynb", "Fake variational_fourier_features.ipynb", "Fake varying_noise.ipynb", "Basic Usage", "Classification and other data distributions", "Kernels", "Large Data", "Mean Functions", "Monitoring", "Parameters and Their Optimisation", "Saving and Loading Models", "Fake external-mean-function.ipynb", "Fake gp_nn.ipynb", "Fake kernel_design.ipynb", "Fake mixture_density_network.ipynb", "Fake FITCvsVFE.ipynb", "Fake SGPR_notes.ipynb", "Fake Sanity_check.ipynb", "Fake cglb.ipynb", "Fake upper_bound.ipynb", "Fake vgp_notes.ipynb", "User Guide"], "terms": {"valu": [0, 1, 2, 3, 8, 9, 12, 14, 20, 21, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 43, 45, 46, 47, 67, 68, 69, 70, 72, 85], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 67], "enum": [0, 9, 14, 40], "an": [0, 1, 2, 3, 5, 8, 9, 12, 13, 14, 19, 20, 25, 27, 31, 32, 33, 35, 36, 38, 45, 49, 51, 67, 68, 69, 70, 71, 72, 73, 74, 85], "enumer": [0, 14], "util": [1, 3, 7, 10, 12, 18, 21, 27, 32, 68, 70, 73, 74, 85], "kmn": [1, 2], "kmm": [1, 2], "knn": [1, 2], "f": [1, 2, 20, 25, 27, 31, 32, 36, 42, 43, 45, 49, 51, 68, 69, 70, 71, 74], "full_cov": [1, 2, 31, 32, 33, 34, 36, 40, 67, 68, 69, 70, 71, 72, 73, 74], "fals": [1, 2, 14, 21, 25, 26, 31, 32, 33, 34, 36, 38, 40, 43, 45, 67, 68, 69, 70, 71, 73, 74], "q_sqrt": [1, 2, 26, 32, 34, 38, 40, 68], "none": [1, 2, 3, 5, 6, 7, 10, 12, 14, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 36, 37, 38, 40, 43, 45, 46, 47, 67, 68, 69, 70, 71, 72, 73, 74], "white": [1, 2, 40], "given": [1, 2, 6, 8, 11, 12, 14, 26, 27, 31, 32, 36, 37, 40, 42, 51, 73, 85], "g1": 1, "g2": 1, "distribut": [1, 2, 21, 22, 23, 26, 27, 29, 33, 38, 41, 43, 50, 51, 67, 70, 73], "p": [1, 2, 5, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 40, 42, 43, 67, 73], "q": [1, 26, 27, 30, 32, 33, 36, 38, 46], "n": [1, 2, 5, 14, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49, 51, 67, 68, 69, 70], "0": [1, 2, 4, 14, 20, 21, 25, 26, 27, 31, 32, 33, 34, 36, 38, 40, 42, 43, 45, 46, 52, 67, 68, 69, 70, 71, 72, 73, 74], "knm": 1, "\u00b9": [1, 30, 32], "And": [1, 67, 69, 70, 71, 72, 73, 74], "q_sqrt\u1d40": [1, 38], "thi": [1, 2, 3, 4, 5, 8, 9, 11, 12, 14, 18, 20, 21, 22, 23, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 45, 50, 51, 52, 67, 68, 69, 70, 71, 72, 73, 74, 85], "method": [1, 3, 14, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 43, 45, 46, 49, 67, 71, 73, 85], "comput": [1, 5, 14, 20, 25, 26, 27, 29, 31, 32, 33, 34, 36, 38, 40, 42, 43, 45, 49, 52, 67, 73], "mean": [1, 2, 5, 6, 14, 18, 20, 25, 26, 27, 29, 32, 33, 38, 40, 42, 43, 50, 51, 67, 68, 73, 85], "co": [1, 25, 40], "varianc": [1, 2, 14, 25, 27, 31, 32, 33, 40, 43, 45, 68, 69, 70, 73, 74], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 68, 70, 71, 85], "option": [1, 2, 3, 5, 6, 7, 12, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 36, 38, 40, 41, 43, 45, 46, 47, 73, 85], "tensor": [1, 2, 4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 67, 71, 72, 73, 74], "ha": [1, 2, 3, 11, 12, 14, 20, 21, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38, 40, 42, 43, 45, 46, 51, 67, 68, 69, 70, 73, 85], "shape": [1, 2, 10, 11, 12, 13, 15, 17, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38, 40, 41, 42, 43, 45, 46, 67, 68, 69, 70, 71, 72, 73, 74], "m_r_or_r_m_m": [1, 2], "If": [1, 5, 12, 14, 21, 25, 27, 32, 38, 40, 45, 50, 51, 67, 70, 71, 85], "i": [1, 2, 3, 5, 7, 8, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 67, 68, 70, 71, 72, 73, 74, 85], "must": [1, 14, 27, 30, 32, 37, 43, 45, 71, 73], "have": [1, 13, 14, 20, 22, 25, 27, 38, 43, 50, 51, 67, 68, 69, 70, 71, 72, 73, 74, 85], "r": [1, 2, 25, 31, 32, 49], "m": [1, 2, 14, 22, 23, 25, 26, 27, 32, 33, 39, 45, 70], "lower": [1, 3, 26, 27, 30, 31, 32, 33, 34, 36, 38, 45], "triangular": [1, 26, 30, 38], "diagon": [1, 3, 21, 25, 26, 32, 45, 67], "batch": [1, 2, 14, 25, 27, 31, 32, 33, 34, 36, 40, 42, 43, 45, 46], "bool": [1, 2, 8, 9, 12, 14, 17, 21, 25, 26, 31, 32, 33, 34, 36, 38, 40, 43, 45, 69, 71], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 67, 68, 69, 71, 72, 73], "type": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 68, 73, 74, 85], "tupl": [1, 2, 5, 8, 9, 12, 14, 16, 17, 20, 22, 23, 25, 27, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 74], "1": [1, 2, 5, 13, 14, 20, 22, 23, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 51, 67, 68, 69, 70, 71, 72, 73, 74], "us": [1, 2, 3, 4, 5, 8, 11, 12, 13, 14, 20, 21, 22, 24, 25, 26, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 45, 46, 49, 50, 51, 52, 67, 68, 69, 70, 71, 72, 73, 74, 85], "multipl": [1, 4, 5, 14, 22, 24, 25, 26, 27, 31, 40, 45, 72, 73, 85], "dispatch": [1, 4, 5, 26, 40], "which": [1, 2, 4, 7, 14, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 45, 46, 51, 67, 69, 70, 71, 72, 73, 85], "depend": [1, 4, 6, 14, 20, 25, 26, 36, 40, 44, 52], "argument": [1, 4, 8, 9, 12, 13, 15, 17, 25, 26, 37, 38, 40, 43, 69, 73], "pass": [1, 4, 5, 8, 14, 21, 26, 32, 35, 37, 38, 40, 43, 45, 46, 68, 69, 72, 73], "object": [1, 3, 4, 12, 13, 14, 16, 17, 22, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 45, 68, 71, 73, 74, 85], "inducingvari": [1, 5, 6, 23, 26, 32, 34, 35, 40], "kernel": [1, 4, 5, 6, 21, 22, 26, 31, 32, 33, 34, 36, 37, 38, 40, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "_sparse_condit": 1, "xnew": [1, 4, 31, 32, 33, 34, 36, 40, 67, 72, 74], "inducing_vari": [1, 4, 5, 6, 21, 26, 32, 33, 34, 35, 40, 68, 70], "full_output_cov": [1, 2, 25, 31, 32, 33, 34, 36, 40], "singl": [1, 2, 8, 12, 14, 15, 25, 26, 27, 32, 37, 43, 46, 69, 73], "output": [1, 2, 3, 14, 22, 23, 25, 27, 32, 33, 39, 43, 46, 67, 68, 69, 72, 73, 85], "gp": [1, 2, 20, 22, 25, 27, 31, 32, 33, 34, 36, 49, 51], "The": [1, 2, 3, 7, 8, 12, 14, 19, 20, 21, 22, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 45, 49, 52, 67, 70, 71, 72, 74, 85], "covari": [1, 2, 21, 22, 25, 26, 27, 29, 32, 38, 41, 69, 85], "matric": [1, 3, 21, 25, 31, 33, 34, 36, 69], "calcul": [1, 2, 5, 25, 32, 33, 38, 43], "follow": [1, 14, 22, 27, 42, 43, 67, 69, 85], "kuu": [1, 22, 25], "kuf": [1, 22, 25], "kff": 1, "further": [1, 2, 67, 73], "refer": [1, 2, 8, 9, 14, 25, 27, 32, 33, 34, 51, 70, 85], "see": [1, 2, 3, 14, 20, 25, 32, 33, 38, 40, 45, 48, 50, 51, 68, 69, 70, 71, 73, 74, 85], "_dense_condit": 1, "below": [1, 14, 48, 51, 67, 68, 69, 73, 74], "detail": [1, 2, 48, 50, 67, 68, 73, 85], "explan": [1, 2], "case": [1, 2, 3, 20, 25, 26, 37, 38, 43, 67, 70, 71, 72, 73, 85], "multiouput": 1, "notebook": [1, 2, 3, 14, 24, 27, 32, 33, 68, 70, 73, 85], "more": [1, 2, 3, 22, 25, 27, 31, 32, 33, 34, 36, 43, 48, 51, 67, 69, 70, 71, 73, 85], "inform": [1, 2, 12, 14, 24, 49, 67], "about": [1, 2, 12, 14, 24, 27, 48, 52, 67, 68, 69, 71, 73, 74], "framework": [1, 2, 41, 49, 51, 72, 74, 85], "d": [1, 2, 5, 14, 22, 23, 24, 25, 29, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49, 67], "data": [1, 3, 14, 20, 25, 27, 31, 32, 33, 34, 36, 40, 41, 45, 46, 49, 50, 51, 67, 71, 73, 74, 85], "matrix": [1, 25, 26, 29, 30, 32, 39, 45, 67, 69], "between": [1, 2, 22, 25, 26, 27, 32, 36, 39, 41, 46, 49, 67, 68, 69, 73], "datapoint": [1, 25], "note": [1, 2, 5, 12, 15, 17, 22, 25, 26, 27, 32, 33, 38, 46, 51, 69, 70], "we": [1, 5, 7, 13, 14, 20, 22, 25, 26, 27, 29, 30, 31, 32, 37, 41, 48, 50, 51, 52, 67, 68, 69, 70, 71, 72, 73, 74, 85], "ar": [1, 2, 3, 5, 6, 12, 13, 14, 20, 22, 25, 26, 27, 31, 32, 33, 37, 38, 43, 45, 46, 48, 50, 51, 52, 67, 68, 69, 70, 71, 72, 73, 74], "repetit": [1, 2, 42], "zero": [1, 3, 14, 25, 33, 45, 46, 69, 71], "standard": [1, 3, 20, 32, 38, 68], "deviat": [1, 20], "choleski": [1, 2, 26, 29, 32, 38], "size": [1, 14, 22, 23, 25, 27, 32, 40, 43, 70], "boolean": [1, 9, 25], "whether": [1, 6, 8, 14, 25, 38, 45, 73], "whiten": [1, 2, 26, 32, 34, 36, 40], "represent": [1, 2, 36, 38], "broadcast": [1, 14, 17, 24, 26, 27, 29, 39, 43, 45], "x": [1, 5, 14, 20, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 40, 42, 43, 45, 46, 47, 67, 68, 69, 70, 71, 72, 73, 74], "repres": [1, 20, 25, 26, 27, 32, 38, 40, 41, 42, 43, 46, 70, 73], "point": [1, 2, 5, 14, 22, 25, 27, 31, 32, 33, 40, 41, 42, 43, 46, 49, 67, 68, 73, 85], "produc": [1, 25, 30, 32, 33], "addition": [1, 20], "mai": [1, 14, 20, 27, 32, 33, 46, 52, 67, 68, 69, 70, 71, 73, 85], "gaussian": [1, 20, 25, 31, 32, 33, 36, 38, 40, 42, 43, 45, 49, 50, 51, 67, 70, 85], "uncertainti": [1, 27, 51, 67, 68], "In": [1, 14, 20, 22, 24, 25, 26, 27, 30, 43, 49, 67, 68, 69, 70, 71, 72, 73, 74, 85], "squar": [1, 14, 25, 26, 32, 69, 73], "root": [1, 14, 26], "been": [1, 14, 51, 69, 73], "center": [1, 32, 70], "so": [1, 7, 11, 14, 25, 27, 32, 37, 38, 46, 52, 67, 68, 69, 70, 71, 72, 73, 74], "v": [1, 14, 30, 32, 33, 38], "\ud835\udca9": 1, "\ud835\udfce": 1, "\ud835\udc08": 1, "\ud835\udc0bv": 1, "thu": [1, 14], "\ud835\udc0b\ud835\udc0b\u1d40": 1, "\ud835\udc0a": 1, "taken": [1, 43], "can": [1, 2, 3, 7, 12, 14, 20, 22, 25, 26, 27, 30, 32, 33, 37, 38, 40, 43, 46, 51, 52, 67, 68, 69, 70, 71, 72, 73, 74, 85], "either": [1, 3, 14, 26, 35, 67, 73], "each": [1, 14, 20, 22, 25, 26, 27, 33, 37, 38, 45, 46, 67, 69], "default": [1, 3, 14, 20, 21, 27, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 45, 67, 68, 69, 71, 73, 85], "full": [1, 3, 25, 32, 38, 51, 69, 71, 85], "true": [1, 14, 21, 25, 32, 34, 38, 40, 43, 45, 67, 68, 69, 70, 71, 72, 73], "assum": [1, 20, 25, 26, 27, 30, 32, 43, 46, 50, 67, 68, 69, 73, 85], "independ": [1, 2, 20, 22, 25, 26, 31, 43, 85], "column": [1, 12, 20, 25, 26, 31, 73], "first": [1, 12, 19, 21, 26, 27, 39, 43, 45, 52, 67, 68, 69, 70, 72, 73, 74, 85], "dimens": [1, 14, 22, 23, 24, 25, 26, 27, 32, 39, 40, 41, 42, 43, 46, 67], "evalu": [1, 9, 14, 21, 24, 25, 27, 32, 38, 43], "new": [1, 3, 8, 12, 21, 22, 31, 32, 33, 45, 51, 52, 67, 69, 73, 74, 85], "describ": [1, 12, 14, 25, 27, 51, 71, 85], "abov": [1, 2, 8, 14, 38, 67, 68, 69, 70, 71, 73], "sharedindependentinducingvari": [1, 4, 40], "sharedindepend": [1, 4, 22, 40], "multioutput": [1, 2, 4, 22, 25, 49, 51], "shared_independent_condit": 1, "share": [1, 22, 25, 32], "induc": [1, 2, 6, 22, 23, 25, 33, 49, 68, 85], "same": [1, 2, 14, 22, 25, 33, 37, 38, 43, 45, 67, 69, 70, 72], "behaviour": [1, 14, 24, 25, 69, 85], "non": [1, 14, 20, 27, 32, 35, 45, 49, 73, 85], "_condit": [1, 2], "l": [1, 2, 22, 25, 26, 29, 30, 32, 33, 38, 49], "m_l_or_l_m_m": [1, 2, 26, 40], "pleas": [1, 38, 46, 50, 51, 69], "_expand_independent_output": 1, "separateindependentinducingvari": [1, 4, 40], "separateindepend": [1, 4, 22, 40], "separate_independent_condit": 1, "multioutputinducingvari": 1, "multioutputkernel": [1, 4, 40], "fallbacksharedindependentinducingvari": [1, 4, 40], "independentlat": [1, 4, 22, 40], "fallbackseparateindependentinducingvari": [1, 4, 40], "fallback_independent_latent_condit": 1, "interdomain": [1, 2, 49, 51], "latent": [1, 2, 20, 22, 24, 25, 27, 32, 33, 46, 49], "number": [1, 2, 3, 5, 14, 21, 22, 23, 25, 27, 30, 32, 33, 37, 41, 42, 43, 45, 46, 51, 67, 70, 73], "differ": [1, 5, 14, 20, 22, 24, 25, 26, 27, 67, 68, 69, 70, 73, 74], "than": [1, 14, 20, 27, 32, 67, 69, 70, 85], "inducingpoint": [1, 4, 32, 33, 35, 40], "inducing_point_condit": 1, "multi": [1, 2, 12, 22, 23, 25, 27], "fulli": [1, 2, 27, 85], "correl": [1, 2, 25, 32], "variabl": [1, 3, 4, 5, 6, 12, 13, 14, 16, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38, 40, 41, 42, 43, 45, 47, 49, 67, 70, 73, 74, 85], "wai": [1, 3, 14, 22, 51, 52, 68, 69, 72, 73, 85], "k": [1, 14, 20, 24, 25, 26, 27, 30, 31, 32, 33, 45, 49], "allow": [1, 2, 5, 12, 14, 20, 22, 24, 27, 31, 32, 33, 34, 35, 36, 38, 40, 45, 68, 69, 72, 73, 74], "scheme": 1, "variat": [1, 22, 23, 27, 31, 32, 33, 34, 36, 37, 38, 41, 43, 49], "l_1_or_1_l_l": 1, "linearcoregion": [1, 4, 22, 40], "coregionalization_condit": 1, "most": [1, 22, 32, 38, 40, 43, 51, 67, 69, 72, 85], "effici": [1, 22, 25, 31, 33, 34, 36], "routin": [1, 27], "project": [1, 14, 32, 46, 50, 51, 69], "through": [1, 21, 25, 31, 32, 33, 34, 36, 37, 38, 40, 43, 45, 51, 67, 69, 73], "mix": [1, 2, 25], "w": [1, 2, 20, 25, 31, 43], "member": 1, "_sample_condit": 1, "num_sampl": [1, 2, 32, 38, 69, 72], "sampl": [1, 2, 27, 29, 32, 43, 51, 68, 69, 71, 85], "from": [1, 2, 3, 8, 10, 12, 14, 16, 20, 22, 25, 26, 27, 30, 31, 32, 33, 34, 36, 38, 40, 42, 45, 46, 51, 67, 68, 69, 70, 71, 72, 73, 74], "sqrt": [1, 14, 67, 68, 69, 70, 71, 73, 74], "ep": [1, 51], "howev": [1, 22, 32, 69, 70, 71, 72, 73], "some": [1, 14, 20, 22, 23, 27, 32, 33, 37, 41, 50, 51, 67, 68, 70, 71, 73, 74, 85], "combin": [1, 5, 22, 24, 68, 69, 71, 72, 85], "mok": 1, "mof": 1, "exist": [1, 14, 37, 45, 69], "make": [1, 3, 14, 27, 38, 40, 45, 52, 67, 68, 69, 70, 73, 74, 85], "sure": [1, 52, 73], "effic": 1, "one": [1, 5, 12, 14, 20, 22, 25, 27, 40, 43, 68, 69, 72, 73, 74], "2": [1, 5, 14, 20, 21, 25, 26, 27, 30, 31, 32, 33, 45, 46, 52, 67, 68, 69, 70, 71, 72, 73, 74], "cov": [1, 2, 14, 25, 33, 41, 43], "maybe_r": 1, "int": [1, 2, 3, 5, 8, 12, 14, 16, 17, 19, 20, 21, 22, 23, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47], "xnew_mu": 1, "xnew_var": 1, "q_mu": [1, 26, 32, 34, 38, 40, 68], "mean_funct": [1, 31, 32, 33, 34, 36, 40, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "uncertain": 1, "input": [1, 2, 9, 12, 14, 20, 22, 23, 25, 27, 31, 32, 36, 39, 41, 42, 43, 45, 46, 49, 67, 69], "document": [1, 18, 38, 52, 69, 71, 85], "din": [1, 43], "t": [1, 14, 25, 27, 31, 35, 41, 45, 49, 51, 68, 69, 70, 71, 72], "onli": [1, 5, 14, 20, 22, 25, 27, 31, 32, 33, 34, 36, 38, 40, 41, 43, 67, 70, 71, 73, 74], "support": [1, 32, 38, 51, 69], "dout": [1, 43], "wheter": 1, "influenc": 1, "fvar": [1, 2, 27, 43], "meanfunct": [1, 5, 6, 31, 32, 33, 34, 36, 40, 71, 73], "fmean": 1, "lm": 2, "base_condit": 2, "except": [2, 14], "instead": [2, 25, 26, 45, 46, 52, 67, 68, 69, 71, 72, 73], "accept": [2, 37], "decomposit": [2, 29], "precomput": [2, 12, 14, 31, 33, 34, 36, 40], "improv": [2, 14, 38, 85], "perform": [2, 14, 27, 38, 42, 68, 69, 70], "reshap": [2, 69, 70], "correct": [2, 14, 25], "specifi": [2, 9, 14, 15, 17, 22, 25, 27, 35, 37, 38, 43, 71, 85], "handl": [2, 3, 14, 25, 38, 69], "where": [2, 12, 14, 20, 22, 23, 25, 27, 30, 31, 32, 38, 41, 43, 45, 46, 68, 69, 70, 71], "all": [2, 3, 8, 12, 14, 15, 20, 21, 22, 32, 37, 38, 39, 42, 43, 45, 67, 68, 69, 72, 73, 74, 85], "both": [2, 8, 13, 20, 26, 37, 52, 67, 73], "prior": [2, 21, 24, 31, 32, 38, 45, 50, 51, 68, 70], "posterior": [2, 21, 31, 32, 33, 34, 36, 85], "_1_l_or_1_m_m": 2, "live": 2, "g": [2, 14, 24, 25, 27, 31, 32, 33, 34, 36, 46, 49, 51, 85], "space": [2, 22, 25, 70], "g_mean": 2, "g_var": 2, "take": [2, 20, 22, 27, 38, 41, 43, 45, 68, 69, 71, 72, 73], "uncorrel": [2, 25, 32], "dimension": [2, 25, 27, 42, 46, 49, 70, 85], "f_mean": [2, 67, 69, 71], "f_var": [2, 67, 69, 71], "A": [2, 8, 9, 12, 14, 20, 25, 27, 30, 32, 33, 37, 38, 40, 46, 49, 51, 69, 70, 71, 73, 85], "num_rol": 2, "roll": 2, "backward": [2, 20, 31, 33, 34, 36], "time": [2, 19, 43, 48, 67, 69, 72, 73], "left": [2, 9, 12, 14, 27, 73], "right": [2, 9, 14, 27, 69, 73, 74], "forward": [2, 38], "multivari": [2, 27, 29, 32, 36, 42, 43], "normal": [2, 12, 27, 29, 42, 46, 68, 73], "": [2, 8, 12, 14, 20, 21, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 45, 68, 69, 70, 72, 73, 74, 85], "mvn": 2, "process": [2, 20, 22, 25, 27, 31, 32, 36, 49, 50, 51, 67, 70, 73, 85], "equal": [2, 14, 32], "privat": 3, "modul": [3, 20, 40, 68, 74], "manag": [3, 12, 14, 70, 74], "configur": [3, 38, 67, 68, 72, 73], "provid": [3, 14, 22, 27, 31, 32, 33, 34, 36, 37, 43, 68, 72, 85], "modifi": [3, 14], "set": [3, 5, 7, 10, 14, 21, 22, 25, 31, 33, 34, 36, 37, 38, 40, 44, 45, 48, 67, 69, 74], "float": [3, 4, 14, 21, 22, 23, 25, 27, 30, 31, 32, 33, 35, 37, 38, 45, 46, 47, 71, 72, 73], "precis": [3, 32], "integ": [3, 14, 20, 21, 27, 32, 42], "posit": [3, 12, 25, 26, 30, 32, 35, 46, 70, 73], "transform": [3, 21, 25, 27, 38, 45, 68, 70], "minimum": [3, 25], "shift": [3, 68, 70, 73], "format": [3, 12, 14, 73], "print_summari": [3, 68, 70, 73], "hold": [3, 25, 32, 73], "global": 3, "store": [3, 7, 14, 20, 31, 33, 34, 36, 37, 40, 45, 68, 73, 74], "environ": 3, "altern": [3, 14, 52, 70, 73], "chang": [3, 14, 18, 25, 31, 33, 34, 36, 40, 73, 74, 85], "user": [3, 12, 27, 49, 50, 51, 69, 70], "befor": [3, 67, 68, 69, 72, 73, 74], "run": [3, 14, 30, 32, 37, 46, 48, 72, 73], "python": [3, 14, 27, 38, 45, 50, 51, 72, 73, 74], "interpret": [3, 68], "avail": [3, 5, 27, 37, 48, 71, 85], "gpflow_int": 3, "int16": 3, "int32": [3, 68], "int64": 3, "gpflow_float": 3, "float16": 3, "float32": 3, "float64": [3, 67, 68, 70, 72, 73, 74], "gpflow_positive_bijector": 3, "exp": [3, 14, 25, 27, 43, 73], "softplu": [3, 21, 74], "gpflow_positive_minimum": 3, "ani": [3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 51, 68, 69, 71, 73], "gpflow_summary_fmt": 3, "other": [3, 25, 27, 32, 36, 37, 46, 50, 51, 67, 70, 73, 85], "tabul": 3, "gpflow_jitt": 3, "also": [3, 14, 25, 32, 38, 67, 68, 69, 70, 73, 85], "temporarili": [3, 14], "context": [3, 8, 9, 10, 12, 13, 14, 15, 16, 23, 40, 41, 73], "jitter": [3, 4, 21], "1e": [3, 27, 69, 71], "5": [3, 14, 21, 25, 32, 33, 37, 46, 52, 67, 68, 69, 70, 71, 72, 73, 74], "code": [3, 8, 9, 14, 16, 17, 18, 22, 25, 32, 44, 45, 52, 73], "here": [3, 22, 27, 32, 33, 52, 67, 68, 69, 70, 72, 73, 74], "factori": [3, 14], "positive_bijector": 3, "positive_minimum": 3, "summary_fmt": 3, "base": [3, 8, 9, 12, 13, 14, 17, 20, 21, 22, 23, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 45, 67, 68, 70, 71, 73, 74, 85], "immut": [3, 14], "str": [3, 8, 9, 12, 14, 15, 17, 21, 22, 23, 24, 25, 37, 38, 40, 44, 45], "mainli": 3, "badli": 3, "condit": [3, 12, 17, 21, 22, 25, 27, 33, 85], "stabl": 3, "6": [3, 27, 33, 46, 49, 51, 52, 67, 68, 69, 70, 71, 72, 73, 74], "bijector": [3, 21, 27, 45, 73, 74], "bound": [3, 7, 11, 14, 19, 27, 31, 32, 33, 34, 36, 45, 49], "summari": [3, 45, 73], "print": [3, 12, 14, 19, 45, 72, 73, 74], "temporary_config": 3, "ensur": [3, 14, 25, 32, 73], "test": [3, 14, 25, 67, 72, 74], "gener": [3, 13, 14, 20, 22, 25, 32, 45, 67, 68, 69, 70, 71, 72, 73, 74], "current": [3, 10, 12, 14, 25, 32, 37, 38, 74, 85], "activ": [3, 25], "constraint": [3, 14, 22, 73], "constant": [3, 17, 21, 25, 27, 32, 45, 69, 71, 85], "add": [3, 14, 21, 32, 46, 69, 71], "understood": 3, "special": [3, 14, 85], "dict": [3, 14, 38, 45, 73], "new_config": 3, "updat": [3, 14, 31, 32, 33, 34, 36, 40, 45, 73, 74], "value_typ": 3, "np": [3, 14, 33, 67, 68, 69, 70, 71, 72, 73, 74], "achiev": [3, 21, 25, 71], "numer": [3, 21, 27, 30, 32, 73], "stabil": [3, 21], "system": [3, 21, 49, 71], "when": [3, 5, 11, 14, 18, 21, 27, 30, 31, 32, 33, 34, 36, 38, 40, 46, 51, 67, 68, 69, 70, 73, 85], "associ": [3, 21, 27, 33], "larg": [3, 21, 25, 50, 51, 85], "therefor": [3, 21, 25, 27], "nearli": [3, 21], "singular": [3, 21], "There": [3, 25, 32, 71, 73, 85], "two": [3, 14, 25, 27, 52, 67, 69, 70, 73, 74, 85], "implement": [3, 5, 14, 20, 22, 25, 27, 31, 32, 33, 36, 37, 38, 43, 45, 46, 48, 68, 69, 71, 72], "kuf_kernel_inducingpoint": 4, "union": [4, 5, 6, 12, 14, 16, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47], "ndarrai": [4, 5, 6, 14, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 45, 47], "multiscal": 4, "squaredexponenti": [4, 25, 67, 68, 69, 70, 72, 73, 74], "kuf_sqexp_multiscal": 4, "inducingpatch": 4, "convolut": [4, 49, 85], "kuf_conv_patch": 4, "kuf_gener": 4, "kuf_shared_shar": 4, "kuf_separate_shar": 4, "kuf_shared_separ": 4, "kuf_separate_separ": 4, "kuf_fallback_separate_linear_coregion": 4, "kuf_fallback_shared_linear_coregion": 4, "kuf_shared_linear_coregion": 4, "kuf_separate_linear_coregion": 4, "kuu_kernel_inducingpoint": 4, "kuu_sqexp_multiscal": 4, "kuu_conv_patch": 4, "kuu_gener": 4, "kuu_shared_shar": 4, "kuu_fallback_shar": 4, "kuu_fallback_separate_shar": 4, "kuu_fallbace_separ": 4, "quadratur": [5, 21, 27], "obj1": 5, "obj2": 5, "nghp": 5, "_p": 5, "select": [5, 14, 32, 45, 70], "analyt": [5, 38, 68, 85], "fall": 5, "back": [5, 38, 71, 74], "_quadrature_expect": 5, "gauss": [5, 27, 42, 43], "hermit": [5, 27, 42, 43], "num_gauss_hermite_point": 5, "3": [5, 14, 20, 21, 25, 27, 33, 37, 45, 46, 67, 68, 69, 70, 71, 72, 73, 74], "contain": [5, 14, 18, 26, 27, 31, 32, 33, 34, 36, 38, 45, 68], "psi": 5, "statist": [5, 14, 27, 49], "ekdiag": 5, "psi0": 5, "ekxz": 5, "nxm": 5, "psi1": 5, "exkxz": 5, "identity_mean": 5, "nxdxm": 5, "ekzxkxz": 5, "nxmxm": 5, "psi2": 5, "ekzxmx": 5, "nxmxq": 5, "emxkxz": 5, "nxqxm": 5, "emx": 5, "nxq": 5, "em1x_m2x": 5, "mean1": 5, "mean2": 5, "nxq1xq2": 5, "1xq": 5, "row": [5, 20, 25, 67], "vector": [5, 27, 30, 32, 36, 67, 69], "occur": [5, 12, 14, 38], "instanc": [5, 12, 21, 32, 37, 38, 45, 71, 73, 74], "sum": [5, 14, 20, 26, 27, 32], "ek1zxk2xz": 5, "kern1": 5, "kern2": 5, "probabilitydistribut": 5, "approxim": [5, 22, 27, 30, 32, 33, 36, 43, 49, 51, 70, 73, 85], "integr": [5, 27, 31, 43, 73], "obj": [6, 12], "slice": [6, 25], "interest": [6, 24, 51, 67, 68, 69, 85], "callabl": [6, 7, 11, 12, 14, 19, 27, 32, 37, 38, 39, 43, 45, 46, 74], "get": [7, 8, 9, 13, 14, 38, 51, 52, 67, 68, 69, 70, 71, 74, 85], "func": [7, 11, 12, 14, 19, 43, 45], "wa": [7, 12, 13, 14, 51, 73], "appli": [7, 14, 38, 45, 46, 73], "typevar": [7, 11, 14, 19, 32, 45], "c": [7, 11, 14, 19, 20, 25, 46, 69, 70], "wrap": [7, 10, 14, 25, 32, 38, 40, 69, 72], "later": [7, 12, 38], "tell": [7, 51, 67, 69, 70], "de": [8, 49, 51], "referenc": 8, "element": [8, 12, 14, 25, 32, 33, 35, 37, 40, 45, 46], "collect": [8, 12, 14, 20, 21, 22, 37, 45, 67], "map_valu": 8, "map": [8, 9, 12, 14, 25, 27, 38, 43, 45, 68, 73], "self": [8, 14, 25, 32, 37, 38, 43, 45, 71, 73], "errorcontext": [8, 9, 12, 13, 15, 16, 23, 40, 41], "iter": [8, 10, 12, 14, 21, 27, 30, 32, 37, 43, 45, 72], "abc": [8, 9, 12, 14, 22, 27, 37, 40, 41], "abstract": [8, 9, 12, 14, 22, 25, 32, 37, 38, 41, 43], "arg_map": [8, 9], "sequenc": [8, 12, 14, 15, 16, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 38, 42, 45, 47, 68, 70], "properti": [8, 21, 22, 23, 25, 38, 41, 68, 73, 74], "is_result": 8, "function": [8, 12, 13, 24, 25, 27, 33, 37, 38, 50, 51, 67, 68, 69, 70, 72, 73, 74, 85], "result": [8, 20, 25, 27, 38, 46, 48, 67, 68, 74, 85], "root_argument_nam": 8, "name": [8, 12, 14, 20, 21, 22, 23, 24, 25, 32, 33, 37, 38, 43, 45, 68, 70, 73, 74], "eventu": 8, "start": [8, 14, 46, 51, 68, 70, 71, 73, 74, 85], "result_token": 8, "attribute_nam": 8, "attribut": [8, 12, 14, 21, 38, 45], "map_context": 8, "pre": [8, 14], "error": [8, 12, 13, 14, 30, 32, 45, 73], "messag": [8, 12, 14, 45], "deleg": 8, "index": [8, 12, 14, 25, 39, 43, 46, 68, 69], "list": [8, 14, 25, 37, 38, 42, 43, 45, 46, 51, 69, 71, 73, 74], "kei": [8, 12, 14, 25, 32, 33, 34, 45], "argument_nam": 8, "express": [9, 25], "strategi": 9, "convert": [9, 12, 14, 35, 38, 39], "argument_ref": [9, 14, 17], "bool_test": 9, "argumentref": [9, 17], "access": [10, 70, 73, 74], "shapecheck": 10, "decor": [10, 19], "checker": [10, 14], "check": [11, 13, 25, 27, 52, 73], "tf": [11, 21, 25, 32, 36, 38, 40, 45, 46, 67, 69, 70, 71, 72, 73, 74], "annot": [11, 14], "look": [11, 14, 69, 70, 71, 72, 73, 85], "like": [11, 14, 21, 27, 33, 39, 67, 69, 72, 85], "without": [11, 22, 24, 30, 31, 33, 34, 36, 38, 40, 50, 71], "actual": [11, 12, 14, 38, 43, 46, 52, 67, 69, 70, 72], "anyth": [11, 14, 67, 73, 74], "necessari": [11, 38, 50, 71], "break": [11, 18], "inherit_check_shap": [11, 71], "disabl": [11, 14, 32], "infrastructur": [12, 13, 74], "indent": 12, "nice": [12, 32, 45, 68, 73], "reusabl": [12, 73], "bit": [12, 32, 73], "why": [12, 71, 73, 85], "written": [12, 74], "compos": [12, 14, 69, 71, 73], "consist": [12, 14, 22, 68], "name_or_index": 12, "builder": [12, 14], "parsedboolspec": [12, 17], "path_and_lin": 12, "insid": [12, 38, 45], "call": [12, 13, 14, 19, 22, 27, 31, 33, 34, 36, 38, 40, 43, 45, 67, 69, 71], "should": [12, 14, 22, 23, 25, 31, 32, 33, 34, 36, 41, 43, 70, 72, 73, 85], "within": [12, 14, 26], "imposs": 12, "captur": [12, 70, 73], "stack": [12, 51, 69, 70], "relev": [12, 14, 22, 23, 25, 31, 33, 34, 36, 40, 51, 69, 70, 85], "save": [12, 38, 50, 51], "precomptu": 12, "definit": [12, 14, 22, 25, 26], "text": [12, 50], "terminal_descript": 12, "caus": [12, 32], "unexpectedinput": 12, "lark": 12, "indent_str": 12, "nest": 12, "add_columned_lin": 12, "write": [12, 14, 20, 38, 69, 70, 72, 73], "line": [12, 14, 69, 71, 73], "sever": [12, 14], "align": [12, 32], "level": 12, "add_lin": 12, "build": [12, 30, 32, 51, 73, 85], "compil": [12, 14, 31, 32, 33, 34, 36, 38, 40, 45, 74], "string": [12, 14], "try": [12, 13, 14, 50, 67, 68, 70, 71, 73, 74], "specif": [12, 13, 15, 20, 22, 27, 32, 52, 69, 85], "ad": [12, 14, 25, 27, 67, 73], "parsednotespec": 12, "children": 12, "mani": [12, 14, 22, 32, 36, 69, 73, 85], "parallel": 12, "relat": [12, 14, 25, 67, 69, 85], "parser": [12, 14], "expect": [12, 17, 18, 21, 27, 30, 32, 41, 42, 43, 67, 71, 74], "parsedshapespec": 12, "parent": 12, "child": 12, "anoth": [12, 27, 69, 70, 73, 74], "spec": [12, 14], "parsedtensorspec": [12, 14, 15], "variable_nam": [12, 17], "These": [13, 14, 32, 52, 67, 69, 85], "reli": [13, 40], "heavili": 13, "error_context": [13, 14], "py": [13, 14, 22, 74], "rais": [13, 14, 20, 45, 46], "could": [13, 20, 38], "resolv": 13, "common": [13, 32, 33, 71, 73], "super": [13, 14, 73], "pars": [13, 14, 15], "doe": [13, 14, 22, 27, 32, 38, 40, 51, 52, 67, 68, 69, 70, 71], "wrong": [13, 14], "rank": [13, 14, 25, 32, 42, 46], "librari": [14, 32, 44, 45, 49, 51], "main": [14, 22, 67], "entri": [14, 38, 46, 69], "exampl": [14, 19, 20, 21, 22, 23, 37, 38, 46, 52, 68, 69, 70, 71, 72, 73, 74, 85], "import": [14, 33, 68, 69, 70, 71, 72, 73, 74], "tensorflow": [14, 27, 32, 33, 35, 38, 39, 45, 46, 50, 51, 52, 69, 70, 71, 72, 73, 85], "featur": [14, 49, 50, 85], "n_featur": 14, "weight": [14, 25, 42, 43], "def": [14, 19, 38, 45, 68, 69, 70, 71, 72, 73, 74], "linear_model": 14, "einsum": 14, "impact": [14, 69, 70, 72], "help": [14, 27, 30, 51, 68, 69, 71, 73, 74], "allevi": 14, "three": [14, 31, 33, 34, 36, 38, 73, 74], "state": [14, 30, 38, 45], "enabl": [14, 20, 31, 33, 34, 36], "wherev": 14, "thei": [14, 25, 27, 67, 68, 69, 70, 72, 73, 74, 85], "eager_mode_onli": 14, "never": [14, 67], "you": [14, 31, 33, 34, 36, 38, 40, 46, 50, 51, 52, 67, 68, 69, 70, 71, 72, 74, 85], "smaller": [14, 67, 68, 70], "scope": 14, "performance_sensitive_funct": 14, "bewar": [14, 68, 69], "declar": [14, 70], "while": [14, 32, 67, 68], "continu": [14, 27, 51, 69], "even": [14, 22, 52, 67, 68, 69, 70, 71, 73], "otherwis": [14, 25, 27, 32, 51], "again": [14, 69, 72, 73], "appropri": [14, 20, 25, 27, 69], "experi": [14, 50, 73], "debug": 14, "your": [14, 38, 46, 51, 67, 68, 69, 70, 71, 72, 73, 74, 85], "eager": 14, "mode": [14, 38], "believ": [14, 27], "want": [14, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 46, 67, 68, 69], "fast": [14, 37], "For": [14, 20, 25, 27, 31, 32, 33, 34, 36, 38, 48, 50, 51, 52, 68, 69, 70, 71, 73, 85], "larger": [14, 67], "probabl": [14, 21, 27, 32, 38, 41, 52, 68, 73], "particular": [14, 69, 71, 85], "unit": [14, 73], "pytest": 14, "do": [14, 27, 32, 45, 50, 67, 68, 69, 70, 71, 72, 74, 85], "conftest": 14, "fixtur": 14, "autous": 14, "enable_shape_check": 14, "old_en": 14, "old_rewrite_docstr": 14, "old_function_call_precomput": 14, "sphinx": 14, "yield": [14, 45], "trace": [14, 33], "graph": [14, 31, 32, 33, 34, 36, 40], "consid": [14, 18, 46], "doesn": [14, 25, 35], "execut": [14, 37, 72], "after": [14, 27, 38, 73, 74], "basi": [14, 69], "thing": [14, 67, 72, 73], "prevent": [14, 73], "being": [14, 20, 38, 45, 67], "abl": [14, 45, 69, 73], "unknown": [14, 20, 68], "sometim": [14, 67, 69], "determin": [14, 22, 23, 25, 32, 68, 69, 71], "cannot": [14, 21, 46, 67], "infer": [14, 22, 25, 27, 49, 69], "e": [14, 22, 24, 25, 27, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 46, 85], "learn": [14, 20, 25, 27, 49, 50, 51, 67, 71, 73, 85], "neighbour": 14, "alwai": [14, 25, 73], "possibl": [14, 24, 25, 32, 38, 67, 70, 73, 85], "harder": [14, 68], "dataclass": 14, "anyndarrai": 14, "std": 14, "n_row": [14, 73], "n_column": 14, "compute_statist": 14, "axi": [14, 25, 69, 70, 73], "particularli": 14, "compute_mean_and_std": 14, "concat_row": 14, "concaten": 14, "ones": [14, 69], "4": [14, 21, 25, 33, 46, 52, 67, 68, 69, 70, 71, 72, 73, 74], "sum_key_length": 14, "len": 14, "foo": 14, "bar": 14, "up": [14, 22, 30, 32, 46, 69, 70, 85], "skip": 14, "x1": [14, 24], "n_rows_1": 14, "n_input": [14, 73], "x2": [14, 24, 25, 46], "n_rows_2": 14, "squared_exponential_kernel": 14, "syntax": 14, "requir": [14, 22, 25, 32, 36, 38, 52, 68, 71, 85], "exact": [14, 30, 32], "v1": 14, "v2": 14, "vector_2d_dist": 14, "bind": 14, "though": [14, 27, 52, 69, 70, 73], "vector_dist": 14, "exactli": [14, 73, 85], "vector_length": 14, "match": [14, 37, 38, 45], "batch_mean": 14, "scalar": [14, 27, 72], "prefix": 14, "keyword": [14, 37], "b": [14, 20, 21, 25, 30, 33, 38, 46], "mark": [14, 19, 49, 51, 73], "lead": [14, 24, 27, 33, 46], "shorter": 14, "miss": 14, "condition": 14, "apppli": 14, "valid": [14, 46, 73], "rule": 14, "construct": [14, 22, 25, 32, 33, 45, 49], "disallow": 14, "built": [14, 42, 71, 73, 74], "check_a": 14, "check_b": 14, "usual": [14, 25, 67, 68, 69, 70, 71, 72, 73, 74, 85], "against": [14, 30], "n_a": 14, "n_b": 14, "check_al": 14, "enable_check": 14, "opposit": 14, "disable_check": 14, "parenthesi": 14, "oper": [14, 21, 25, 43, 46, 69, 71], "preced": 14, "j": [14, 25], "a_vector": 14, "b_vector": 14, "multipli": [14, 25, 69, 71], "It": [14, 21, 25, 27, 32, 67, 68, 70, 71, 73, 85], "append": 14, "appear": [14, 32], "rewritten": 14, "docstr": [14, 15], "place": [14, 25], "On": [14, 49, 52, 67, 85], "itself": [14, 32, 35, 40, 71, 85], "entir": [14, 72, 73, 74], "predict": [14, 27, 31, 32, 33, 34, 36, 40, 67, 68, 69, 70, 71, 73, 74, 85], "just": [14, 33, 67, 69, 71, 73], "keep": [14, 35, 67], "intern": [14, 30, 36, 49], "refactor": 14, "hiererchi": 14, "deriv": [14, 25, 33, 40], "overridden": 14, "model": [14, 20, 21, 22, 24, 25, 27, 37, 38, 40, 45, 49, 50, 51, 69, 70, 71, 72], "abstractmethod": 14, "linearmodel": [14, 73], "__init__": [14, 33, 45, 73], "_weight": 14, "prefer": [14, 67], "over": [14, 24, 25, 31, 32, 36, 39, 41, 43, 48, 67, 73, 85], "orient": 14, "To": [14, 20, 25, 31, 32, 45, 48, 51, 67, 68, 69, 71, 72], "rememb": [14, 68, 69, 73], "check_metric_shap": 14, "n_label": 14, "rmse": 14, "mape": 14, "ab": [14, 49, 51], "previous": 14, "fake": [14, 85], "product": 14, "test_featur": 14, "test_label": 14, "evaluate_model": 14, "test_evaluate_model": 14, "fake_featur": 14, "10": [14, 52, 67, 68, 69, 70, 71, 72, 73, 74], "fake_label": 14, "fake_predict": 14, "assert": [14, 45], "fake_model": 14, "magicmock": 14, "approx": 14, "namespac": 14, "immedi": [14, 31, 33, 34, 36, 40], "surround": 14, "loss": [14, 32, 38, 45, 68, 73], "square_error": 14, "mean_square_error": 14, "root_mean_square_error": 14, "recommend": [14, 25, 50, 52, 70, 71, 73], "fact": [14, 68], "wrapper": [14, 35, 38], "around": [14, 17, 25, 38, 68, 71, 85], "directli": [14, 21, 26, 31, 33, 34, 36, 38, 67, 73], "rewrit": [14, 15], "__doc__": 14, "compat": [14, 20, 31, 33, 34, 36, 39, 52], "alreadi": [14, 27], "overrid": [14, 45], "would": [14, 32], "linear": [14, 69, 71, 73], "param": [14, 45], "wish": [14, 20], "numpi": [14, 38, 45, 50, 67, 68, 69, 70, 71, 72, 73, 74], "deferredtensor": [14, 16], "includ": [14, 15, 22, 27, 40, 45, 85], "transformedvari": [14, 21], "extract": [14, 16, 25], "extend": [14, 51, 69, 71, 73], "own": [14, 32], "get_linear_model_shap": 14, "accessor": 14, "bool_spec": 14, "checker_context": 14, "__eq__": 14, "stackcontext": 14, "parallelcontext": 14, "often": [14, 30, 67, 69, 70, 72, 85], "creat": [14, 21, 25, 31, 33, 34, 36, 37, 38, 43, 51, 67, 69, 71, 72, 73, 74], "cheap": 14, "slow": [14, 37], "rather": [14, 32, 85], "mayb": [14, 50], "think": [14, 67], "messagebuild": 14, "mechan": [14, 74], "observ": [14, 27, 31, 67, 71, 85], "across": [14, 85], "good": [14, 50, 70, 71, 73], "add_context": 14, "arbirtari": 14, "tensor_spec": [14, 15], "whose": [14, 36], "come": [14, 72, 73, 74], "conveni": [14, 32, 73], "came": 14, "better": [14, 27, 68, 69, 70, 71, 74], "inside_funct": 14, "undefin": 14, "tf_decor": 14, "flag": [14, 21], "make_decor": 14, "seem": 14, "solv": [14, 70, 73], "problem": [14, 67, 68, 69, 70, 73, 85], "kera": [14, 45], "branch": 14, "valueerror": [14, 46], "path": [14, 22, 45], "how": [14, 24, 27, 32, 52, 67, 68, 69, 72, 73, 74, 85], "noshapeerror": 14, "shape_typ": 14, "regist": [14, 45], "unaccept": 14, "becaus": [14, 22, 67, 68, 69, 70, 72], "rel": [14, 25, 45, 71], "give": [14, 25, 27, 34, 38, 50, 72, 73], "buggy_funct": 14, "docstring_format": 14, "choic": [14, 70, 73], "function_spec": 15, "argument_spec": 15, "parsedfunctionspec": 15, "variable_rank": 17, "dim": [17, 25, 42, 43, 46], "packag": [18, 51, 74], "still": [18, 67, 69, 70], "poor": [18, 33], "bug": [18, 51], "matur": 18, "move": [18, 46, 71], "out": [18, 32, 43, 52, 74], "check_shap": [18, 71, 73], "warn": [19, 52, 74], "forty_two": 19, "42": 19, "throughout": [20, 74], "fix": [20, 25, 32, 85], "flexibl": [20, 85], "parameteris": [20, 41], "\u03bc": [20, 27], "\u03b8": 20, "done": [20, 27, 85], "whilst": 20, "parametr": 20, "first_part": 20, "second_part": 20, "__call__": [20, 37, 71], "accord": [20, 37, 72], "datum": [20, 27], "y": [20, 25, 27, 31, 32, 36, 43, 68, 69, 70, 71, 72, 74], "input_dim": [20, 27], "y_i": [20, 27, 32, 67, 68, 69, 73], "x_i": [20, 32, 43, 67, 68, 69], "mixin": [20, 32], "degre": [20, 25, 71], "output_dim": [20, 25, 32, 33], "static": [20, 32, 38, 40, 74], "compute_pow": 20, "correspond": [20, 25, 27, 38, 45], "power": [20, 85], "lexicograph": 20, "order": [20, 25, 27], "length": 20, "neg": [20, 46, 73], "greater": [20, 67], "translat": 20, "term": [20, 27, 32, 33, 73], "function_list": 20, "respect": [20, 32, 45, 67], "label": [20, 27, 67, 68, 69], "extra": [20, 32, 67], "meanfunction_list": 20, "renam": 20, "config": [21, 38, 45, 73], "experiment": [21, 71, 73], "kullback_leibl": 21, "likelihood": [21, 31, 32, 33, 34, 36, 37, 38, 40, 45, 49, 68, 69, 70, 73, 74, 85], "logdens": 21, "monitor": [21, 38, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "optim": [21, 25, 27, 32, 36, 45, 67, 68, 69, 70, 71, 72, 73, 74, 85], "probability_distribut": 21, "type_flag": 21, "prior_on": 21, "trainabl": [21, 32, 38, 68, 70, 71], "dtype": [21, 35, 46, 67, 68, 70, 72, 73, 74], "unconstrained_shap": 21, "constrained_shap": 21, "prioron": 21, "assign": [21, 45, 73, 74], "use_lock": 21, "read_valu": 21, "constrain": [21, 32, 38, 73], "unconstrain": [21, 38], "tfp": [21, 38, 45, 70, 73], "lock": 21, "dure": [21, 27, 31, 33, 34, 36, 45, 69, 70, 71, 74], "someth": [21, 72], "op": [21, 39, 45], "log_prior_dens": [21, 32], "log": [21, 27, 29, 31, 32, 33, 34, 36, 37, 38, 43, 49, 72, 73], "densiti": [21, 27, 29, 32, 68], "els": 21, "inducing_variable_list": 22, "separ": [22, 25, 68], "design": [22, 51, 85], "interfac": [22, 38], "reason": [22, 25, 50, 69, 71, 73], "advantag": [22, 51], "quit": [22, 37, 70], "defin": [22, 25, 27, 32, 37, 68, 69, 71, 73, 74, 85], "inherit": [22, 25, 27, 32, 43], "independentlatentbas": 22, "sinc": [22, 25, 51, 68, 73], "acut": 22, "num_induc": [22, 23, 33], "z": [22, 23, 32, 33, 36, 42, 70], "inducingpointsbas": 22, "real": [22, 45, 68, 69, 70, 73], "group": [22, 37, 46, 72], "variou": [22, 32], "our": [22, 38, 50, 51, 67, 68, 69, 70, 71, 72, 73, 74, 85], "eg": 22, "scale": [22, 25, 27, 29, 51, 68, 69, 73], "origin": [22, 25, 35, 45, 51, 70], "propos": [22, 41], "\u00e1": [22, 49], "zaro": [22, 49], "gredilla": [22, 49], "figueira": [22, 49], "vidal": [22, 49], "lazarogfv09": [22, 49], "intend": [22, 73], "custom": [22, 38, 68], "form": [24, 25, 27, 30, 31, 32, 45, 71], "core": [24, 27], "compon": [24, 27, 45], "encod": [24, 67], "effect": [24, 67, 69, 85], "choos": [24, 70, 73], "shown": 24, "everi": [24, 32, 46, 69, 72, 73, 85], "pair": [24, 38, 46], "s1": 24, "n1": [24, 42], "s2": 24, "n2": [24, 25, 42, 46], "similarli": 24, "contrast": 24, "ident": [24, 33, 73], "lengthscal": [25, 37, 69, 73, 74], "kwarg": [25, 27, 32, 37, 43, 45], "anisotrop": 25, "k_d": 25, "pairwis": 25, "\u2113": 25, "x2\u1d40": [25, 46], "last": [25, 26, 43, 73, 74], "scaled_difference_matrix": 25, "batch2": [25, 46], "weight_vari": 25, "bias_vari": 25, "active_dim": [25, 69], "arc": 25, "famili": 25, "mimic": 25, "neural": [25, 49, 85], "network": [25, 85], "layer": [25, 45], "perceptron": 25, "mlp": 25, "close": [25, 27, 46, 70, 71], "cho": [25, 49], "saul": [25, 49], "cs09": [25, 49], "ard": 25, "alia": [25, 33], "locat": [25, 32, 33, 43, 69], "steep": [25, 69], "along": [25, 43, 69, 70, 85], "1d": [25, 27, 69, 70, 85], "govern": 25, "part": [25, 51, 72, 85], "addit": [25, 85], "sigmoid": 25, "\u03c3": [25, 27, 30], "k\u2081": 25, "k\u2082": 25, "deactiv": 25, "version": [25, 27, 38, 44, 69, 85], "found": [25, 27, 31, 33, 45, 46], "lloyd": [25, 49], "llo14": [25, 49], "logist": 25, "x\u2080": 25, "parameter": [25, 38], "on_separate_dimens": 25, "act": 25, "disjoint": 25, "subset": [25, 70], "hard": 25, "ass": 25, "overlap": [25, 71, 85], "indic": [25, 46], "base_kernel": [25, 73], "image_shap": 25, "patch_shap": 25, "colour_channel": 25, "plain": 25, "van": [25, 49, 51, 85], "der": [25, 49, 51, 85], "wilk": [25, 49, 51, 85], "et": [25, 32, 34, 38, 49, 51, 85], "al": [25, 32, 34, 38, 49, 51, 85], "vdwrh17": [25, 49], "respons": [25, 72], "individu": [25, 33, 67, 73], "patch": 25, "imag": [25, 72, 85], "sum_p": 25, "th": 25, "get_patch": 25, "colour": 25, "channel": 25, "_integers_": 25, "cast": 25, "them": [25, 31, 33, 34, 35, 36, 37, 40, 46, 51, 69, 71, 73, 85], "need": [25, 27, 32, 38, 41, 43, 50, 51, 52, 67, 68, 69, 70, 71, 72, 73, 74], "kappa": 25, "w\u1d40": 25, "diag": [25, 32], "nb": 25, "symmetri": 25, "local": 25, "avoid": [25, 30, 31, 32, 33, 34, 36, 40], "initi": [25, 30], "mcmc": [25, 27, 32, 38, 49, 70], "chain": 25, "random": [25, 46, 69], "drawn": [25, 32], "sinusoid": 25, "phase": 25, "equat": [25, 67, 68, 69, 71, 73], "\u03c3\u00b2": [25, 32, 45], "2\u03c0d": 25, "per": [25, 32, 40, 42, 69], "\u03c3\u1d62": 25, "\u1d62": 25, "equival": [25, 32, 36, 85], "doubl": 25, "block": 25, "procedur": [25, 74], "simpli": [25, 45, 69, 73], "fallback_independent_latent_": 25, "fallback": 25, "independentinducingvari": 25, "isotrop": 25, "k_r2": 25, "r2": 25, "r\u00b2": 25, "euclidean": 25, "distanc": 25, "wise": 25, "k_r": 25, "scaled_squared_euclid_dist": 25, "\u00b2": [25, 27, 46], "l\u2082": 25, "norm": 25, "basic": [25, 37, 50, 51, 69, 70, 71, 72], "on_separate_dim": 25, "tensortyp": [25, 71], "slice_cov": 25, "turn": [25, 32], "flatten": [25, 42, 72], "d_or_dd": 25, "cx": 25, "\u03c3\u00b2xy": 25, "k_diag": 25, "var": [25, 27, 29, 41, 43], "latent_kernel": 25, "underli": [25, 27, 38], "num_latent_gp": [25, 32, 33, 34, 36, 40], "matern": 25, "differenti": [25, 31, 33, 34, 36, 40, 69, 73], "anywher": 25, "onc": [25, 38, 69], "3r": 25, "twice": [25, 69], "5r": 25, "3r\u00b2": 25, "fill": 25, "until": [25, 32, 45], "reach": 25, "canon": 25, "47": 25, "mackai": 25, "introduct": [25, 27, 50], "bishop": 25, "editor": 25, "machin": [25, 49, 50, 51, 52], "page": [25, 49, 51, 67], "133": 25, "165": 25, "springer": 25, "1998": 25, "u": [25, 32, 33, 38, 51, 67, 68, 69, 70, 71, 72, 73, 74], "sin": [25, 71], "sin\u00b2": 25, "\u03c0": 25, "\u03b3": 25, "\u2113\u00b2": 25, "factor": [25, 26, 27, 38], "front": 25, "absorb": 25, "hyperparamet": [25, 31, 32, 33, 34, 36, 85], "constructor": [25, 38, 68], "offset": 25, "\u1d48": 25, "reducingcombin": 25, "alpha": [25, 29, 32, 40, 67, 68, 69, 70, 71, 73, 74], "ration": 25, "quadrat": [25, 32, 69, 71], "2\u03b1\u2113\u00b2": 25, "\u03b1": [25, 27], "small": [25, 27, 50, 51, 67, 68, 70, 72], "fluctuat": 25, "rq": 25, "becom": [25, 67, 73], "priori": 25, "comparison": [25, 70], "purpos": [25, 27, 70], "who": 25, "don": [25, 69, 70, 71], "stand": 25, "automat": [25, 32, 49, 52, 69, 73], "nois": [25, 45, 67, 71, 85], "x_n": 25, "x_m": 25, "\u03b4": 25, "kroneck": 25, "delta": 25, "k_choleski": 26, "kl": [26, 32, 36], "diverg": [26, 32, 36, 49, 69], "3d": [26, 69], "its": [26, 36, 38, 68, 72, 73, 74], "_": [26, 30, 33, 68, 69, 70, 71, 73, 74], "under": 27, "assumpt": [27, 32], "made": 27, "binari": [27, 46, 69], "count": 27, "typic": [27, 38], "introduc": [27, 69, 70, 72], "isn": 27, "illustr": [27, 70], "regress": [27, 31, 32, 33, 48, 49, 70], "classif": [27, 49, 50, 51, 70, 85], "logp": 27, "conditional_mean": 27, "conditional_vari": 27, "df": [27, 29], "variational_expect": 27, "overriden": 27, "work": [27, 38, 51, 68, 69, 70, 71, 72, 73, 74, 85], "well": [27, 32, 38, 51, 67, 70, 73], "2d": [27, 69, 70], "suitabl": 27, "higher": [27, 69, 70], "invlink": [27, 68], "inv_probit": 27, "scale_lower_bound": 27, "06": 27, "reparameteris": 27, "familiar": [27, 50, 73, 85], "\u03b2": 27, "shape_lower_bound": 27, "invers": 27, "rate": 27, "variance_lower_bound": 27, "veri": [27, 32, 46, 52, 67, 68, 73], "instabl": 27, "impos": 27, "arg": [27, 32, 43], "stochast": [27, 49, 68], "demonstr": [27, 67, 69, 72, 73, 74, 85], "distribution_class": 27, "tensorflow_prob": [27, 70, 73, 74], "scale_transform": 27, "heteroskedast": [27, 85], "loc": [27, 73], "latent_dim": [27, 32, 46], "observation_dim": 27, "y\u2081": 27, "y\u2096": 27, "margin": [27, 31, 32, 33, 34, 36, 49, 85], "log_prob": 27, "pdf": [27, 49], "predict_log_dens": [27, 32], "fmu": [27, 43], "predict_mean_and_var": 27, "dy": 27, "y\u00b2": 27, "num_class": 27, "driven": 27, "account": [27, 73], "conditional_distribut": 27, "multilat": 27, "bin_edg": 27, "bin": 27, "edg": 27, "switch": [27, 69], "let": [27, 67, 68, 69, 70, 71, 72, 73, 74], "a\u2080": 27, "a\u2081": 27, "a\u2096": 27, "\u2081": 27, "\u0278": 27, "a\u2082": 27, "cumul": [27, 68], "probit": 27, "chu": [27, 49], "ghahramani": [27, 32, 49, 51], "cg05": [27, 49], "binsiz": 27, "link": 27, "y\u1d62": 27, "f\u1d62": 27, "cox": 27, "doubli": 27, "inhomogen": 27, "intract": 27, "via": [27, 32, 33, 46], "riemann": 27, "gaussianquadratur": 27, "epsilon": [27, 43], "001": [27, 32], "f_1": 27, "f_2": 27, "f_k": 27, "y_1": 27, "y_k": 27, "begin": [27, 32, 67, 68, 69], "arrai": [27, 35, 38, 42, 43, 46, 67, 68, 69, 70, 71, 72, 73, 74], "ll": [27, 67, 85], "varepsilon": [27, 67], "textrm": [27, 32, 33], "argmax": 27, "end": [27, 32, 67, 68, 69], "\u03d5": 27, "those": [27, 32, 69, 72, 73, 85], "univari": 27, "overwritten": 27, "soft": [27, 73], "max": [27, 72], "mont": [27, 43, 85], "carlo": [27, 43, 85], "estim": [27, 31, 32, 33, 34, 36], "tend": 27, "compar": [27, 74], "due": [27, 32, 46, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "mini": 27, "svgp": [27, 33, 36, 68, 70, 85], "likelihood_list": 27, "mu": [29, 33, 36, 39, 41], "sigma": [29, 33, 36, 67, 68, 69], "lam": 29, "lb": [30, 33], "sigma_sq": [30, 33], "precondition": 30, "q_ff": 30, "\u03c3\u00b2i": [30, 32, 33], "math": [30, 67, 68, 69, 73], "ll\u1d40": 30, "k\u1d64\u1d64": 30, "\u00b2l": 30, "\u00b9k\u1d64\u2093": 30, "aa\u1d40": 30, "l\u1d66l\u1d66\u1d40": 30, "cg_toler": [30, 32], "max_step": 30, "restart_cg_step": 30, "conjug": [30, 32, 49], "gradient": [30, 32, 38, 45, 49], "algorithm": 30, "hesten": 30, "stiefel": 30, "1952": 30, "v_0": 30, "v_1": 30, "v_2": 30, "v_n": 30, "arithmet": 30, "kv_n": 30, "practic": [30, 32, 49, 69, 70], "v_i": 30, "converg": [30, 71], "quickli": 30, "stop": [30, 73], "satisfi": [30, 43], "r_i": 30, "kv_i": 30, "r\u1d62\u1d40": 30, "\u00b9r": [30, 32], "r\u1d62\u1d40q": 30, "\u00b9r\u1d62": 30, "\u03f5": [30, 32], "backsolv": 30, "psd": 30, "solut": [30, 38, 41], "maximum": [30, 31, 32, 33, 34, 36, 45, 85], "decis": 30, "boundari": 30, "criteria": 30, "cg": [30, 32], "restart": [30, 32], "step": [30, 32, 37, 38, 73], "reset": [30, 45], "currect": 30, "kv": [30, 32], "noise_vari": [31, 32, 33, 69, 71], "gpmodel": [31, 33, 34, 36, 68, 70, 71, 72, 73], "internaldatatraininglossmixin": [31, 33, 36, 68], "vanilla": 31, "treat": 31, "mathbf": [31, 32, 36], "mathcal": [31, 32, 67, 68, 69], "sigma_n": 31, "train": [31, 32, 33, 34, 36, 45, 67, 68, 69, 70, 71, 72, 74, 85], "maximis": 31, "_marginal_": 31, "theta": [31, 32], "log_marginal_likelihood": [31, 37], "maximum_log_likelihood_object": [31, 33, 34, 36], "maxim": [31, 32, 33, 34, 36], "elbo": [31, 32, 33, 34, 36], "spars": [31, 32, 33, 34, 36, 49, 70, 85], "predict_f": [31, 32, 33, 34, 36, 40, 67, 68, 69, 71, 74], "noisi": [31, 67], "cach": [31, 32, 33, 34, 36, 40, 45, 85], "faster": [31, 33, 34, 36, 40, 67], "subsequ": [31, 33, 34, 36], "precompute_cach": [31, 33, 34, 36, 40], "precomputecachetyp": [31, 33, 34, 36], "quantiti": [31, 33, 34, 36, 40], "aot": [31, 33, 34, 36, 40], "nocach": [31, 33, 34, 36, 40], "extran": [31, 33, 34, 36, 40], "fused_predict_f": [31, 33, 34, 36, 40], "gprposterior": 31, "fuse": [31, 33, 34, 36], "x_data_mean": 32, "x_data_var": 32, "num_inducing_vari": 32, "x_prior_mean": 32, "x_prior_var": 32, "similar": [32, 67], "bayesian": [32, 49, 85], "log_posterior_dens": [32, 38], "sensibli": 32, "max_cg_it": 32, "100": [32, 67, 69, 72, 73], "restart_cg_it": 32, "40": [32, 49, 51], "v_grad_optim": 32, "artemev": [32, 49, 51], "abvdw21": [32, 49], "accuraci": 32, "increas": 32, "frequent": [32, 37], "auxilari": 32, "track": [32, 38], "jointli": [32, 85], "logdet_term": [32, 33], "low": [32, 49, 51, 70], "tr": [32, 33], "\u03c3\u00b2n": [32, 33], "least": 32, "tight": 32, "commontensor": [32, 33], "residu": 32, "agre": 32, "recov": [32, 67, 69, 73], "r\u1d40q": 32, "predict_i": [32, 67, 68, 70, 73, 74], "held": [32, 73], "quad_term": [32, 33], "auxiliari": 32, "2y\u1d40v": 32, "v\u1d40": 32, "y\u1d40k": 32, "\u00b9y": [32, 33], "v\u1d40kv": 32, "aux_vec": 32, "bia": [32, 73], "toler": 32, "uniform": 32, "api": [32, 38, 51, 68, 69, 71], "closur": [32, 38, 45], "scipi": [32, 67, 68, 69, 70, 71, 72, 73, 74], "subclass": 32, "ownediter": 32, "dataset": [32, 51, 68, 70, 85], "batch_siz": 32, "optimis": [32, 33, 37, 38, 50, 51, 69, 70, 71, 74], "log_likelihood": 32, "lv": 32, "stateless": 32, "sim": [32, 67, 68, 69], "f_i": 32, "mostli": [32, 73], "push": [32, 67], "obtain": 32, "draw": [32, 68, 69], "predict_f_sampl": [32, 68, 69, 72], "calc_num_latent_gp": 32, "awar": [32, 69, 73], "broken": 32, "futur": 32, "slightli": [32, 46, 68], "problemat": [32, 45], "re": [32, 38, 51, 67, 68, 73], "http": [32, 33, 45, 49, 51, 73], "github": [32, 33, 51, 52], "com": [32, 33, 52], "issu": [32, 46], "1343": 32, "calc_num_latent_gps_from_data": 32, "dens": [32, 70], "num_data": [32, 34, 68], "gpr_with_posterior": 32, "sgprbase_deprec": 32, "fitc": [32, 33, 85], "snelson": [32, 49], "sg06": [32, 49], "loos": 32, "gpml": 32, "matlab": 32, "although": [32, 51, 70], "obvious": 32, "fitc_log_marginal_likelihood": 32, "minim": [32, 38, 68, 69, 70, 71, 72, 73, 74], "hensman": [32, 34, 49, 51, 85], "hmfg15": [32, 49, 85], "top": [32, 69], "log_likelihood_lower_bound": 32, "sgpr_with_posterior": 32, "q_diag": [32, 34, 38], "svgp_with_posterior": 32, "vgp_with_posterior": 32, "opper": [32, 49, 85], "archambeau": [32, 49, 85], "oa09": [32, 49, 85], "idea": [32, 36, 70, 73], "minimis": [32, 36, 73], "off": [32, 69, 73], "adjust": [32, 38], "boldsymbol": [32, 36], "lambda": [32, 37, 74], "approach": [32, 70, 73], "2nd": [32, 46, 71], "convex": 32, "difficulti": 32, "q_alpha": 32, "q_lambda": 32, "e_": [32, 36], "k_": 32, "ff": 32, "closure_kwarg": 32, "gprfitc": 33, "upper_bound": [33, 85], "upper": 33, "best": 33, "tighten": 33, "especi": 33, "known": [33, 43, 67, 69], "markvdw": 33, "gp_upper": 33, "titsia": [33, 49, 85], "tit14": [33, 49], "tit09": [33, 49, 85], "aat": 33, "namedtupl": 33, "field": 33, "compute_qu": 33, "jensen": 33, "inequ": 33, "log_det": 33, "gpr": [33, 34, 36, 67, 68, 69, 70, 71, 72, 73, 74, 85], "y\u1d40": 33, "sgprposterior": 33, "externaldatatraininglossmixin": [34, 68], "hmg15": [34, 49, 85], "evid": 34, "baseposterior": 34, "structur": [35, 41, 69], "retain": 35, "forcefulli": 35, "transpar": 35, "aid": 36, "vgpposterior": 36, "new_data": 36, "As": [36, 67, 68, 69, 70, 71, 73, 74, 85], "oppos": 36, "fit": [36, 68, 69, 70, 71, 74], "were": [36, 73], "callback": [37, 38, 72], "task": [37, 72], "current_step": 37, "log_dir": [37, 72, 74], "plotting_funct": 37, "fig_kw": 37, "subplots_kw": 37, "unused_kwarg": 37, "max_siz": 37, "keywords_to_monitor": 37, "left_strip_charact": 37, "sensibl": [37, 67, 85], "tensorboard": 37, "By": 37, "bayesianmodel": 37, "task_group": [37, 72, 74], "period": [37, 71, 72, 73, 74], "model_task": [37, 72], "image_task": [37, 72], "plot_predict": [37, 74], "image_sampl": 37, "lml_task": 37, "lml": 37, "plot": [37, 68, 69, 70, 71, 72, 73, 74], "less": [37, 67, 68], "slow_task": 37, "fast_task": 37, "descend": 37, "bodi": 37, "task_or_task": 37, "frequenc": [37, 72], "natgrad": 38, "gamma": 38, "xi_transform": 38, "optimizerv2": [38, 45], "natur": [38, 49], "descent": 38, "Its": 38, "public": [38, 51], "signatur": [38, 43], "var_list": [38, 45], "furthermor": 38, "NOT": [38, 52], "cite": 38, "salimbeni": [38, 49], "seh18": [38, 49], "get_config": 38, "dictionari": [38, 45], "serializ": 38, "reinstanti": 38, "loss_fn": 38, "triplet": 38, "\u03be": 38, "q_mu1": 38, "q_sqrt1": 38, "q_mu2": 38, "q_sqrt2": 38, "target_log_prob_fn": 38, "helper": [38, 68, 69, 70, 71, 72, 73, 74], "easi": [38, 69, 71, 72, 73, 74, 85], "read": [38, 51, 72, 73, 85], "hmc_helper": 38, "trainable_paramet": [38, 73], "current_st": 38, "hmc": 38, "hamiltonianmontecarlo": 38, "adaptive_hmc": 38, "simplestepsizeadapt": 38, "run_chain_fn": 38, "sample_chain": 38, "num_burnin_step": 38, "hmc_sampl": 38, "parameter_sampl": 38, "convert_to_constrained_valu": 38, "target": [38, 45], "bfg": 38, "step_callback": [38, 72, 74], "allow_unused_vari": 38, "scipy_kwarg": 38, "pack": 38, "unpack": 38, "side": 38, "flat": 38, "trainable_vari": [38, 67, 68, 69, 70, 71, 72, 73, 74], "solver": 38, "counter": 38, "speed": [38, 70, 72, 85], "optimizeresult": 38, "descript": [38, 49], "meanvarsqrt_to_xi": 38, "varsqrt": 38, "xi1": 38, "xi2": 38, "xi": 38, "naturals_to_xi": 38, "nat1": [38, 39], "nat2": [38, 39], "\u03b8\u2081": 38, "\u03b8\u2082": 38, "xi_to_meanvarsqrt": 38, "\u03be\u2081": 38, "\u03be\u2082": 38, "meanvarsqrt": 38, "convers": 38, "wrt": [38, 43], "eta1": 39, "eta2": 39, "v_sqrt": 39, "s_sqrt": 39, "final": [39, 67, 72, 73], "x_data": 40, "qinv": 40, "_precomput": 40, "update_cach": 40, "clear": [40, 73], "recent": 40, "axis_dynam": 40, "That": [40, 73], "might": [40, 67, 68, 72, 73, 74], "wrap_alpha_qinv": 40, "m_m_or_l_m_m": 40, "sgpr": [40, 68, 70, 85], "unseen": 40, "_get_posterior_base_cas": 40, "_get_posterior_fully_correlated_mo": 40, "_get_posterior_independent_mo": 40, "_get_posterior_independentlatent_mo_fallback": 40, "_get_posterior_linearcoregionalization_mo_effici": 40, "markov": 41, "carl": [41, 49], "rasmussen": [41, 49], "x_t": 41, "x_": 41, "n_gh": [42, 43], "dz": 42, "uni": 42, "stddev\u00b2": 42, "dx": [42, 43], "sum_": [42, 43], "stddev": 42, "z_i": 42, "dz_i": 42, "nd": 42, "n_product": 42, "grid": [42, 70], "n_quad_point": [42, 43], "repeat": [42, 69, 85], "gauss_hermit": 43, "_build_x_w": 43, "logspac": 43, "fun": 43, "exponenti": [43, 69, 73], "formula": 43, "w_i": 43, "elementwis": 43, "moreov": 43, "h": 43, "xn": 43, "wn": 43, "sum_i": 43, "eval_loc": 43, "dxd": 43, "integrand": 43, "xd": 43, "leav": 43, "item": 43, "overal": 43, "determinist": [43, 67], "n_fun": 43, "thereof": 43, "hint": [44, 73], "parameter_or_funct": 45, "doc": 45, "multipledispatch": 45, "desir": 45, "autograph": 45, "overwrit": 45, "sole": 45, "simpl": [45, 67, 70, 72, 73, 74, 85], "loop": 45, "dispatch_or_rais": 45, "get_first_occurr": 45, "occurr": 45, "dispatch_it": 45, "logic": [45, 73], "inc": 45, "dec": [45, 49], "revers": 45, "_c": 45, "likelihood_vari": 45, "called_method": 45, "notimplementederror": 45, "input_modul": 45, "memo": 45, "copi": [45, 69, 73], "org": [45, 49, 51], "html": [45, 49, 51], "frozen": 45, "submodul": 45, "default_positive_minimum": 45, "default_positive_bijector": 45, "fmt": [45, 69], "recurs": [45, 73], "find": [45, 51, 70, 73, 85], "traverse_compon": 45, "tablefmt": 45, "maxit": [45, 73], "1000": [45, 73], "At": 45, "gradienttap": 45, "adam": [45, 49, 51, 73], "learnt": 45, "acc": 45, "update_cb": 45, "target_typ": 45, "travers": 45, "accumul": 45, "traverseinput": 45, "substract": 46, "a_shap": 46, "b_shape": 46, "num": 46, "perm": 46, "leading_dim": 46, "transpos": 46, "permut": 46, "ellipsi": 46, "mypi": 46, "view": [46, 72, 85], "1st": 46, "3rd": 46, "0th": 46, "sess": 46, "transposed_ani": 46, "linearli": 46, "reduc": 46, "pca": 46, "imprecis": 46, "lower_bound": 47, "regularli": [48, 74], "readm": 48, "artem": [49, 51], "david": 49, "burt": 49, "tighter": 49, "proceed": 49, "38th": 49, "confer": 49, "362": 49, "372": 49, "2021": [49, 74], "youngmin": 49, "lawrenc": 49, "deep": 49, "advanc": [49, 50, 68, 69], "22": [49, 68, 69, 73], "2009": 49, "url": [49, 51], "paper": [49, 51], "nip": 49, "cc": 49, "3628": 49, "wei": 49, "zoubin": [49, 51], "ordin": [49, 85], "journal": [49, 51], "research": [49, 51], "jul": 49, "1019": 49, "1041": 49, "2005": 49, "hfl13": [49, 85], "jame": [49, 51], "nicolo": 49, "fusi": 49, "neil": 49, "big": [49, 70], "arxiv": [49, 51], "preprint": 49, "1309": 49, "6835": 49, "2013": 49, "alexand": [49, 51], "matthew": [49, 51, 85], "maurizio": 49, "filippon": 49, "variatino": 49, "2015": [49, 73], "neurip": 49, "file": [49, 51, 72], "6b180037abbebea991d8b1232f8a8ca9": 49, "scalabl": [49, 68], "aistat": 49, "miguel": 49, "\u0131": 49, "bal": 49, "inter": 49, "domain": 49, "law03": [49, 85], "visualis": [49, 71, 85], "high": [49, 68, 70], "2003": [49, 51], "robert": 49, "languag": 49, "nonparametr": 49, "twenti": 49, "eighth": 49, "aaai": 49, "artifici": 49, "intellig": [49, 73], "2014": 49, "dl": 49, "acm": 49, "citat": 49, "cfm": 49, "id": 49, "2893873": 49, "2894066": 49, "mhtg16": [49, 85], "richard": 49, "turner": 49, "kullback": 49, "leibler": 49, "231": 49, "239": 49, "pmlr": 49, "2016": 49, "mvandwilkn": [49, 51], "17": [49, 51, 52, 68, 69, 73], "tom": [49, 51], "nickson": [49, 51], "keisuk": [49, 51], "fujii": [49, 51], "alexi": [49, 51], "boukouvala": [49, 51], "pablo": [49, 51], "le": [49, 51], "\u00f3": 49, "villagr": [49, 51], "flow": [49, 51, 85], "aussian": [49, 51], "ensor": [49, 51], "18": [49, 51, 52, 69, 70, 73], "apr": [49, 51], "2017": [49, 51], "jmlr": [49, 51], "v18": [49, 51], "16": [49, 51, 52, 69, 73, 74], "537": [49, 51], "mat17": [49, 85], "graem": 49, "gari": 49, "phd": [49, 85], "thesi": [49, 85], "univers": 49, "cambridg": 49, "manfr": 49, "cedric": 49, "revisit": 49, "786": 49, "792": 49, "hugh": 49, "stefano": 49, "eleftheriadi": 49, "2018": 49, "edward": 49, "pseudo": 49, "1257": 49, "1264": 49, "mit": 49, "press": 49, "2006": 49, "tl10": [49, 85], "michali": [49, 85], "thirteenth": 49, "844": 49, "851": 49, "workshop": 49, "2010": 49, "567": 49, "574": 49, "determinant": 49, "www2": 49, "aueb": 49, "gr": 49, "mtitsia": 49, "titsiasnipsvar14": 49, "30": [49, 67, 69, 70, 72, 73, 74], "6877": 49, "vandwilkdj": [49, 51, 85], "20": [49, 51, 68, 69, 70, 73, 85], "vincent": [49, 51], "dutordoir": [49, 51], "st": [49, 51], "john": [49, 51], "01115": [49, 51], "2020": [49, 51], "section": [50, 68, 69, 70, 71, 73, 85], "aim": 50, "knowledg": 50, "gpflow": [50, 52, 67, 68, 69, 70, 71, 72, 73, 74, 85], "medium": 50, "necessarili": 50, "go": [50, 67, 69, 71, 73], "too": [50, 69, 70, 72, 73], "much": [50, 67, 68, 69, 72], "mathemat": [50, 85], "technic": [50, 67, 69, 85], "teach": 50, "theori": [50, 85], "behind": 50, "brief": 50, "articl": [50, 51], "longer": [50, 68, 74], "book": 50, "deeper": 50, "understand": [50, 67, 69, 70], "guid": [50, 51, 69, 73], "previou": [50, 68, 71], "knowldeg": 50, "instal": [50, 51], "usag": [50, 51, 69, 70], "Their": [50, 51, 69, 71], "load": [50, 51], "kind": [51, 67, 69, 71, 73], "supervis": 51, "inher": 51, "know": [51, 67, 71, 73], "answer": 51, "limit": [51, 67], "procces": 51, "admittedli": 51, "computation": 51, "intens": 51, "todai": 51, "primarili": 51, "maintain": 51, "compani": 51, "secondmind": 51, "suggest": 51, "depth": [51, 85], "benchmark": 51, "bibliographi": 51, "open": 51, "ticket": 51, "overflow": 51, "easiest": 51, "touch": 51, "slack": 51, "workspac": 51, "feel": [51, 52, 73], "skill": 51, "contribut": 51, "contributor": 51, "bibtex": 51, "gpflow2017": 51, "author": 51, "o": [51, 70], "titl": 51, "year": [51, 73], "month": 51, "volum": 51, "softwar": [51, 85], "significantli": [51, 69], "review": [51, 85], "gpflow2020multioutput": 51, "mrc": 51, "fellowship": 51, "epsrc": 51, "grant": 51, "i036575": 51, "n014162": 51, "word": 52, "unfortun": 52, "happen": [52, 70, 71, 73], "manual": [52, 73], "explicitli": [52, 69], "12": [52, 67, 68, 69, 70, 72, 73, 74], "13": [52, 68, 69, 70, 73, 74], "14": [52, 69, 73, 74], "7": [52, 67, 68, 69, 70, 71, 72, 73, 74], "15": [52, 69, 71, 73, 74], "8": [52, 67, 68, 69, 70, 71, 72, 73, 74], "9": [52, 67, 68, 69, 70, 71, 72, 73, 74], "second": 52, "mac": 52, "maco": 52, "regular": 52, "pypi": 52, "pip": 52, "notic": [52, 67, 68, 69, 70, 71, 72, 73], "free": [52, 85], "pick": [52, 69, 71], "githib": 52, "git": 52, "clone": 52, "cd": 52, "histori": 52, "limit_notebook": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "basic_usag": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "classification_and_other_data_distribut": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "large_data": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "parameters_and_their_optimis": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "saving_and_load": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "chapter": [67, 68, 69, 70, 71, 72, 73, 74], "concept": [67, 69], "suffici": [67, 85], "matplotlib": [67, 68, 69, 70, 71, 72, 73, 74], "pyplot": [67, 68, 69, 70, 71, 72, 73, 74], "plt": [67, 68, 69, 70, 71, 72, 73, 74], "varepsilon_i": [67, 68, 69], "quad": [67, 68, 69], "perfectli": [67, 73], "amount": 67, "epistem": 67, "No": 67, "matter": 67, "aleator": 67, "865": [67, 70, 72, 74], "666": [67, 70, 72, 74], "804": [67, 70, 72, 74], "771": [67, 70, 72, 74], "147": [67, 70, 72, 74], "866": [67, 70, 72, 74], "007": [67, 70, 72, 74], "026": [67, 70, 72, 74], "171": [67, 70, 72, 74], "889": [67, 70, 72, 73, 74], "243": [67, 70, 72, 74], "028": [67, 70, 72, 74], "57": [67, 70, 72, 74], "48": [67, 70, 72, 73, 74], "91": [67, 70, 72, 74], "07": [67, 70, 72, 73, 74], "35": [67, 70, 72, 74], "80": [67, 70, 72, 74], "82": [67, 68, 70, 72, 74], "49": [67, 70, 72, 73, 74], "00": [67, 68, 70, 72, 74], "kx": [67, 68, 70, 73, 74], "mew": [67, 68, 70, 73, 74], "opt": [67, 68, 69, 70, 71, 72, 73, 74], "training_loss": [67, 68, 69, 70, 71, 72, 73, 74], "now": [67, 69, 71, 73, 74], "plu": 67, "lt": [67, 72, 73, 74], "28009566": 67, "gt": [67, 72, 73, 74], "30584767": 67, "54585965": 67, "rang": [67, 68, 73], "pretti": 67, "xplot": [67, 68, 69, 70, 71, 73, 74], "linspac": [67, 68, 69, 70, 71, 72, 73, 74], "Then": 67, "y_mean": [67, 68, 70, 73, 74], "y_var": [67, 68, 70, 73, 74], "95": [67, 74], "confid": 67, "interv": [67, 68], "f_lower": [67, 69, 71], "96": [67, 68, 69, 70, 71, 73, 74], "f_upper": [67, 69, 71], "y_lower": [67, 68, 70, 73, 74], "y_upper": [67, 68, 70, 73, 74], "color": [67, 68, 69, 70, 71, 73, 74], "c0": [67, 68, 72], "fill_between": [67, 68, 69, 70, 71, 73, 74], "legend": [67, 69], "awai": [67, 71], "certain": 67, "li": 67, "mention": [67, 68, 69, 70, 73], "smooth": [67, 69], "x_1": 67, "x_2": 67, "nearbi": 67, "did": [67, 69], "11": [67, 68, 69, 70, 73, 74], "75907766": 67, "71506022": 67, "17286964": 67, "11372553": 67, "relationship": 67, "18033224": 67, "04013752": 67, "12780391": 67, "former": 67, "gave": 67, "quick": 67, "overview": 67, "talk": [68, 71, 73, 74], "what": [68, 70, 71, 72, 74], "vgp": [68, 85], "connect": 68, "seen": [68, 85], "far": [68, 69, 73], "plot_model": [68, 70, 71], "200": [68, 70, 73, 74], "ax": [68, 69, 70, 71, 72, 73, 74], "subplot": [68, 69, 70, 71, 72, 73, 74], "nrow": [68, 69, 70, 71, 73, 74], "ncol": [68, 69, 70, 71, 73, 74], "mean_lin": [68, 69, 70, 71, 73, 74], "get_color": [68, 69, 70, 71, 73, 74], "lw": [68, 69, 70, 71, 72, 73, 74], "outlier": 68, "light": 68, "tail": 68, "struggl": [68, 70], "177": 68, "183": 68, "428": 68, "838": 68, "827": 68, "293": 68, "270": 68, "593": 68, "031": 68, "650": 68, "99": 68, "29": [68, 73], "28": [68, 70, 73], "01": [68, 74], "93": [68, 70], "scatter": [68, 69, 70, 71, 72], "class": [68, 69, 70, 71, 72, 85], "parametersoftplu": [68, 70, 73], "float644": [68, 73], "39101": 68, "lengthscalesparametersoftplu": [68, 70, 73], "float641": [68, 70, 73], "60446": 68, "varianceparametersoftplu": [68, 70, 73], "float640": [68, 70, 73], "02437": 68, "overestim": 68, "middl": [68, 73], "student": 68, "heavier": 68, "affect": [68, 69, 73], "studentt": 68, "float645": 68, "04329": 68, "29404": 68, "05424": 68, "parameterident": [68, 73], "16460e": 68, "parameterfilltriangular": 68, "3110e": 68, "02": 68, "0000e": 68, "arbitrari": [68, 72], "beween": 68, "squish": 68, "simplifi": [68, 69], "bernoulli": 68, "trial": 68, "encapsul": 68, "977": 68, "380": 68, "923": 68, "262": 68, "319": 68, "118": 68, "242": 68, "964": [68, 73], "264": 68, "441": 68, "610": 68, "864": 68, "675": 68, "660": 68, "736": 68, "223": 68, "172": 68, "870": 68, "float6420": 68, "09592": 68, "11493": 68, "04480e": 68, "7751e": 68, "symmetr": 68, "sens": 68, "fsampl": 68, "squeez": [68, 72], "psampl": 68, "c1": 68, "tutori": 68, "multiclass": 68, "sparsiti": 68, "studi": [68, 69], "ve": [68, 69], "training_loss_closur": 68, "70217": 68, "13279": 68, "zparameterident": [68, 70], "29586": 68, "13301": 68, "47033": 68, "initialis": [68, 69, 73], "truli": 68, "huge": 68, "frustrat": 68, "rst": [68, 69], "train_generic_model": 68, "regressiondata": 68, "explain": [69, 71, 73, 85], "deepcopi": 69, "cm": 69, "coolwarm": 69, "primari": [69, 71, 72], "coordin": 69, "develop": [69, 73], "intuit": 69, "behav": 69, "vist": 69, "investig": 69, "plot_kernel_sampl": 69, "set_se": 69, "20220903": 69, "n_sampl": 69, "__class__": 69, "__name__": 69, "set_ylim": 69, "bottom": 69, "set_titl": 69, "plot_kernel_predict": 69, "set_train": [69, 70, 73], "black": [69, 70, 71], "plot_kernel": 69, "samples_ax": 69, "prediction_ax": 69, "cover": 69, "popular": 69, "wide": 69, "nu": 69, "smoother": 69, "frac": 69, "etc": [69, 73], "toward": [69, 71], "infti": 69, "matern12": [69, 71], "matern32": [69, 71], "matern52": 69, "smoothn": 69, "infinit": 69, "se": 69, "radial": 69, "rbf": [69, 70], "togeth": 69, "ideal": 69, "worri": 69, "tailor": 69, "__": 69, "easier": [69, 70], "changepoint": [69, 85], "region": 69, "rapid": 69, "transit": 69, "coupl": 69, "rare": 69, "alon": 69, "stright": 69, "necessarli": 69, "straight": 69, "Or": [69, 71, 73], "pattern": 69, "trend": [69, 73], "polynomi": [69, 71], "19": [69, 73], "great": [69, 73], "henc": 69, "complic": [69, 73], "principl": [69, 73], "topic": [69, 85], "plot_2d_kernel_sampl": 69, "n_grid": [69, 70], "xplot1": [69, 70], "xplot2": [69, 70], "meshgrid": [69, 70], "plot_surfac": 69, "cmap": 69, "plot_2d_kernel_predict": 69, "hide": 69, "50": [69, 70], "plot_2d_kernel": 69, "subplot_kw": 69, "21": [69, 70, 72, 73], "customis": 69, "behavior": 69, "care": [69, 74], "ignor": 69, "23": [69, 73], "prohibit": 70, "tri": 70, "With": [70, 73, 74], "predicit": 70, "nm": 70, "meant": 70, "reus": [70, 73], "iv": 70, "getattr": 70, "zeros_lik": 70, "marker": 70, "float6411": 70, "6466": 70, "37333": 70, "24001": 70, "gain": 70, "ish": 70, "put": 70, "four": 70, "evenli": 70, "inducing_point": 70, "125": 70, "375": 70, "625": 70, "875": 70, "79211": 70, "38665": 70, "24753": 70, "21006": 70, "excel": 70, "blue": 70, "triangl": 70, "irregularli": 70, "enough": [70, 71, 73], "25": [70, 73], "75": 70, "float646": 70, "99571": 70, "09965": 70, "57999": 70, "12846": 70, "82829": 70, "overli": 70, "simplist": 70, "compens": 70, "correctli": 70, "discuss": [70, 73, 85], "70": 70, "53": 70, "81": 70, "78": 70, "36": 70, "83": 70, "09": 70, "71": 70, "55": 70, "66": 70, "87": 70, "63": 70, "65": 70, "37": 70, "90": 70, "58": 70, "61": 70, "98": 70, "85": 70, "27": [70, 73], "64": 70, "77": 70, "73": 70, "08": [70, 73, 74], "54": 70, "84": 70, "62": 70, "60": 70, "31": [70, 73], "34": [70, 73, 74], "45": 70, "39": [70, 73, 74], "51": 70, "76": 70, "46": 70, "44": [70, 73], "26": [70, 73], "plot_2d_model": 70, "ax_mean": 70, "ax_std": 70, "figsiz": 70, "y_std": 70, "pcolor": 70, "red": 70, "randomli": 70, "rng": 70, "default_rng": 70, "1234": 70, "n_induc": 70, "replac": [70, 73], "algoritm": 70, "cluster": 70, "vq": 70, "kmean": 70, "corner": 70, "yet": 70, "robust": 70, "circumst": 70, "discrep": 70, "n_dim": 70, "sample_halton_sequ": 70, "seed": 70, "robustgp": 70, "repositori": 70, "didn": 71, "min_x": 71, "max_x": 71, "300": [71, 73], "hline": 71, "linestyl": 71, "dot": 71, "revert": 71, "area": 71, "plenti": 71, "happili": 71, "extrapol": 71, "extern": [71, 85], "physic": 71, "speak": 71, "wherea": 71, "bad": 71, "mislead": 71, "sinemeanfunct": 71, "sine": 71, "wave": 71, "dive": 72, "get_model": 72, "monitortask": 72, "sub": 72, "monitortaskgroup": [72, 74], "monitoringtask": 72, "whole": 72, "my_callback": 72, "hello": 72, "execute_task": 72, "export": 72, "progress": 72, "modeltotensorboard": 72, "directori": 72, "identi": 72, "logdir": 72, "reload_multifil": 72, "scalartotensorboard": 72, "my_scalar": 72, "5778089200757": 72, "scalar_task": 72, "my_scalar_nam": 72, "imagetotensorboard": 72, "figur": 72, "my_imag": 72, "min": 72, "ypred": 72, "isol": 72, "fig": 72, "my_image_nam": 72, "my_scalar_2": 72, "my_image_2": 72, "fast_task_group": 72, "slow_task_group": 72, "redefin": 72, "had": 72, "hardcod": 72, "panda": 73, "pd": 73, "fundament": 73, "leaf": 73, "node": 73, "tune": 73, "slope": 73, "n_output": 73, "tensordata": 73, "raw": [73, 74], "Being": 73, "obviou": 73, "comfort": 73, "trane": 73, "saniti": 73, "jupyt": 73, "slopeparameterident": 73, "set_default_summary_fmt": 73, "themselv": 73, "__main__": 73, "0x7f7a561198a0": 73, "fn": [73, 74], "programmat": 73, "2x_": 73, "i0": 73, "3x_": 73, "i1": 73, "x_train": 73, "y_train": 73, "next": 73, "y_predict": 73, "squared_error": 73, "reduce_mean": 73, "Be": 73, "plug": 73, "atmospher": 73, "measur": 73, "mauna": 73, "loa": 73, "observatori": 73, "hawaii": 73, "co2_data": 73, "read_csv": 73, "gml": 73, "noaa": 73, "gov": 73, "webdata": 73, "ccgg": 73, "co2": 73, "co2_mm_mlo": 73, "csv": 73, "comment": 73, "xco2": 73, "decim": 73, "date": 73, "yco2": 73, "averag": 73, "plot_co2_model_predict": 73, "idx_plot": 73, "opt_opt": 73, "plot_co2_kernel": 73, "ax1": 73, "ax2": 73, "1950": 73, "2050": 73, "2030": 73, "favourit": 73, "float6499916": 73, "8905": 73, "70003": 73, "long": 73, "zoom": 73, "yearli": 73, "cycl": 73, "float6428013": 73, "0654": 73, "float6437398": 73, "2404": 73, "56": 73, "1032": 73, "69783": 73, "huh": 73, "complet": [73, 85], "simplest": 73, "init": 73, "got": 73, "280_000": 73, "140": 73, "float6469886": 73, "52549e": 73, "whatsev": 73, "possibli": 73, "belief": 73, "long_term_kernel": 73, "lognorm": 73, "to_default_float": 73, "periodic_kernel": 73, "lognormaltru": 73, "83196e": 73, "20823e": 73, "chose": 73, "tabl": [73, 85], "show": [73, 74, 85], "enforc": 73, "sent": 73, "untransform": 73, "unconstrained_vari": 73, "24": 73, "unreadvari": 73, "049787068367863944": 73, "softclip": 73, "200_000": 73, "400_000": 73, "parametersoftclip": 73, "float64280000": 73, "002": 73, "74": 73, "1069": 73, "52477": 73, "9996": 73, "38733": 73, "reflect": 73, "forc": 73, "7168": 73, "36623": 73, "47065": 73, "un": [73, 74], "untrain": 73, "heavi": 73, "hand": 73, "tool": 73, "softer": 73, "subsect": 73, "past": 73, "anew": 73, "solid": 73, "8867": 73, "34501": 73, "2_000": 73, "3103210097041": 73, "980": 73, "4509510531951": 73, "2579084959708": 73, "950": 73, "0708258597233": 73, "400": 73, "937": 73, "6962463974968": 73, "500": 73, "926": 73, "990022623095": 73, "600": 73, "917": 73, "8398442967325": 73, "700": 73, "910": 73, "145361257209": 73, "800": 73, "903": 73, "8061523474757": 73, "900": 73, "898": 73, "6929459701918": 73, "894": 73, "6967963871082": 73, "1100": 73, "891": 73, "5973400283881": 73, "1200": 73, "288987548881": 73, "1300": 73, "887": 73, "5919052952197": 73, "1400": 73, "886": 73, "3380304464888": 73, "1500": 73, "885": 73, "5560963920814": 73, "1600": 73, "884": 73, "6950853830389": 73, "1700": 73, "1195315674989": 73, "1800": 73, "883": 73, "9836126313455": 73, "1900": 73, "1931337940107": 73, "float64280002": 73, "137": 73, "571": 73, "80382": 73, "55318": 73, "99961": 73, "44761": 73, "restor": 74, "techniqu": 74, "savedmodel": 74, "box": 74, "checkpointmanag": 74, "initial_valu": 74, "checkpoints_0": 74, "ckpt": 74, "max_to_keep": 74, "33": 74, "old": 74, "3f": 74, "latest_checkpoint": 74, "330": 74, "checkpoints_1": 74, "Of": 74, "cours": 74, "checkpoints_2": 74, "checkpoint_task": 74, "executecallback": 74, "verifi": 74, "remeb": 74, "compiled_predict_f": 74, "input_signatur": 74, "tensorspec": 74, "compiled_predict_i": 74, "save_dir": 74, "saved_model_0": 74, "home": 74, "jesper": 74, "src": 74, "venv": 74, "max310": 74, "lib": 74, "python3": 74, "site": 74, "trackabl": 74, "autotrack": 74, "has_static_min_event_ndim": 74, "deprec": 74, "remov": 74, "instruct": 74, "min_event_ndim": 74, "info": 74, "asset": 74, "loaded_model": 74, "parameter_dict": 74, "multiple_assign": 74, "model_0": 74, "646614675732739": 74, "3733319087937745": 74, "chain_of_shift_of_softplu": 74, "24001197623265763": 74, "model_1": 74, "params_0": 74, "diagram": 85, "slew": 85, "straightforward": 85, "gpmc": 85, "sgpmc": 85, "solidifi": 85, "summar": 85, "unifi": 85, "extens": 85, "earli": 85, "greatli": 85, "ipynb": 85, "crucial": 85, "background": 85, "underpin": 85, "vgp_note": 85, "sgpr_note": 85, "cglb": 85, "fitcvsvf": 85, "energi": 85, "vfe": 85, "sanity_check": 85, "codebas": 85, "probabilist": 85, "kernel_design": 85, "brownian": 85, "motion": 85, "gp_nn": 85, "mixture_density_network": 85, "complex": 85, "hamiltonian": 85, "ordinal_regress": 85, "deal": 85, "gps_for_big_data": 85, "thousand": 85, "multiclass_classif": 85, "varying_nois": 85, "vari": 85, "expens": 85, "handli": 85, "regim": 85, "coregionalis": 85, "fast_predict": 85, "unsupervis": 85, "reduct": 85, "variational_fourier_featur": 85, "easili": 85, "incorpor": 85, "fourier": 85, "natural_gradi": 85}, "objects": {"": [[21, 0, 0, "-", "gpflow"]], "gpflow": [[21, 1, 1, "", "Module"], [21, 1, 1, "", "Parameter"], [0, 0, 0, "-", "base"], [1, 0, 0, "-", "conditionals"], [3, 0, 0, "-", "config"], [4, 0, 0, "-", "covariances"], [21, 4, 1, "", "default_float"], [21, 4, 1, "", "default_int"], [21, 4, 1, "", "default_jitter"], [5, 0, 0, "-", "expectations"], [18, 0, 0, "-", "experimental"], [20, 0, 0, "-", "functions"], [22, 0, 0, "-", "inducing_variables"], [25, 0, 0, "-", "kernels"], [26, 0, 0, "-", "kullback_leiblers"], [27, 0, 0, "-", "likelihoods"], [29, 0, 0, "-", "logdensities"], [32, 0, 0, "-", "models"], [37, 0, 0, "-", "monitor"], [38, 0, 0, "-", "optimizers"], [40, 0, 0, "-", "posteriors"], [41, 0, 0, "-", "probability_distributions"], [43, 0, 0, "-", "quadrature"], [21, 4, 1, "", "set_trainable"], [44, 0, 0, "-", "type_flags"], [45, 0, 0, "-", "utilities"]], "gpflow.Parameter": [[21, 2, 1, "", "assign"], [21, 2, 1, "", "log_prior_density"], [21, 3, 1, "", "trainable"]], "gpflow.base": [[0, 1, 1, "", "PriorOn"]], "gpflow.conditionals": [[1, 4, 1, "", "base_conditional"], [1, 4, 1, "", "uncertain_conditional"], [2, 0, 0, "-", "util"]], "gpflow.conditionals.conditionals": [[1, 4, 1, "", "_dense_conditional"], [1, 4, 1, "", "_sparse_conditional"]], "gpflow.conditionals.multioutput.conditionals": [[1, 4, 1, "", "coregionalization_conditional"], [1, 4, 1, "", "fallback_independent_latent_conditional"], [1, 4, 1, "", "inducing_point_conditional"], [1, 4, 1, "", "separate_independent_conditional"], [1, 4, 1, "", "shared_independent_conditional"]], "gpflow.conditionals.multioutput.sample_conditionals": [[1, 4, 1, "", "_sample_conditional"]], "gpflow.conditionals.sample_conditionals": [[1, 4, 1, "", "_sample_conditional"]], "gpflow.conditionals.util": [[2, 4, 1, "", "base_conditional_with_lm"], [2, 4, 1, "", "expand_independent_outputs"], [2, 4, 1, "", "fully_correlated_conditional"], [2, 4, 1, "", "fully_correlated_conditional_repeat"], [2, 4, 1, "", "independent_interdomain_conditional"], [2, 4, 1, "", "mix_latent_gp"], [2, 4, 1, "", "rollaxis_left"], [2, 4, 1, "", "rollaxis_right"], [2, 4, 1, "", "sample_mvn"], [2, 4, 1, "", "separate_independent_conditional_implementation"]], "gpflow.config": [[3, 1, 1, "", "Config"], [3, 4, 1, "", "as_context"], [3, 4, 1, "", "config"], [3, 4, 1, "", "default_positive_bijector"], [3, 4, 1, "", "default_positive_minimum"], [3, 4, 1, "", "default_summary_fmt"], [3, 4, 1, "", "positive_bijector_type_map"], [3, 4, 1, "", "set_config"], [3, 4, 1, "", "set_default_float"], [3, 4, 1, "", "set_default_int"], [3, 4, 1, "", "set_default_jitter"], [3, 4, 1, "", "set_default_positive_bijector"], [3, 4, 1, "", "set_default_positive_minimum"], [3, 4, 1, "", "set_default_summary_fmt"]], "gpflow.config.Config": [[3, 5, 1, "", "float"], [3, 5, 1, "", "int"], [3, 5, 1, "", "jitter"], [3, 5, 1, "", "positive_bijector"], [3, 5, 1, "", "positive_minimum"], [3, 5, 1, "", "summary_fmt"]], "gpflow.covariances.kufs": [[4, 4, 1, "", "Kuf_conv_patch"], [4, 4, 1, "", "Kuf_kernel_inducingpoints"], [4, 4, 1, "", "Kuf_sqexp_multiscale"]], "gpflow.covariances.kuus": [[4, 4, 1, "", "Kuu_conv_patch"], [4, 4, 1, "", "Kuu_kernel_inducingpoints"], [4, 4, 1, "", "Kuu_sqexp_multiscale"]], "gpflow.covariances.multioutput.kufs": [[4, 4, 1, "", "Kuf_fallback_separate_linear_coregionalization"], [4, 4, 1, "", "Kuf_fallback_shared_linear_coregionalization"], [4, 4, 1, "", "Kuf_generic"], [4, 4, 1, "", "Kuf_separate_linear_coregionalization"], [4, 4, 1, "", "Kuf_separate_separate"], [4, 4, 1, "", "Kuf_separate_shared"], [4, 4, 1, "", "Kuf_shared_linear_coregionalization"], [4, 4, 1, "", "Kuf_shared_separate"], [4, 4, 1, "", "Kuf_shared_shared"]], "gpflow.covariances.multioutput.kuus": [[4, 4, 1, "", "Kuu_fallbace_separate"], [4, 4, 1, "", "Kuu_fallback_separate_shared"], [4, 4, 1, "", "Kuu_fallback_shared"], [4, 4, 1, "", "Kuu_generic"], [4, 4, 1, "", "Kuu_shared_shared"]], "gpflow.expectations": [[5, 4, 1, "", "expectation"], [5, 4, 1, "", "quadrature_expectation"], [6, 0, 0, "-", "quadratures"]], "gpflow.expectations.quadratures": [[6, 4, 1, "", "get_eval_func"]], "gpflow.experimental": [[14, 0, 0, "-", "check_shapes"], [19, 0, 0, "-", "utils"]], "gpflow.experimental.check_shapes": [[14, 1, 1, "", "DocstringFormat"], [14, 1, 1, "", "ErrorContext"], [14, 1, 1, "", "ShapeChecker"], [14, 1, 1, "", "ShapeCheckingState"], [7, 0, 0, "-", "accessors"], [8, 0, 0, "-", "argument_ref"], [9, 0, 0, "-", "bool_specs"], [14, 4, 1, "", "check_shape"], [14, 4, 1, "", "check_shapes"], [10, 0, 0, "-", "checker_context"], [11, 0, 0, "-", "decorator"], [14, 4, 1, "", "disable_check_shapes"], [12, 0, 0, "-", "error_contexts"], [13, 0, 0, "-", "exceptions"], [14, 4, 1, "", "get_check_shapes"], [14, 4, 1, "", "get_enable_check_shapes"], [14, 4, 1, "", "get_enable_function_call_precompute"], [14, 4, 1, "", "get_rewrite_docstrings"], [14, 4, 1, "", "get_shape"], [14, 4, 1, "", "get_shape_checker"], [14, 4, 1, "", "inherit_check_shapes"], [15, 0, 0, "-", "parser"], [14, 4, 1, "", "register_get_shape"], [14, 4, 1, "", "set_enable_check_shapes"], [14, 4, 1, "", "set_enable_function_call_precompute"], [14, 4, 1, "", "set_rewrite_docstrings"], [16, 0, 0, "-", "shapes"], [17, 0, 0, "-", "specs"]], "gpflow.experimental.check_shapes.DocstringFormat": [[14, 5, 1, "", "NONE"], [14, 5, 1, "", "SPHINX"]], "gpflow.experimental.check_shapes.ErrorContext": [[14, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.ShapeChecker": [[14, 2, 1, "", "add_context"], [14, 2, 1, "", "check_shape"], [14, 2, 1, "", "check_shapes"]], "gpflow.experimental.check_shapes.ShapeCheckingState": [[14, 5, 1, "", "DISABLED"], [14, 5, 1, "", "EAGER_MODE_ONLY"], [14, 5, 1, "", "ENABLED"]], "gpflow.experimental.check_shapes.accessors": [[7, 4, 1, "", "maybe_get_check_shapes"], [7, 4, 1, "", "set_check_shapes"]], "gpflow.experimental.check_shapes.argument_ref": [[8, 1, 1, "", "AllElementsRef"], [8, 1, 1, "", "ArgumentRef"], [8, 1, 1, "", "AttributeArgumentRef"], [8, 1, 1, "", "DelegatingArgumentRef"], [8, 1, 1, "", "IndexArgumentRef"], [8, 1, 1, "", "KeysRef"], [8, 1, 1, "", "RootArgumentRef"], [8, 1, 1, "", "ValuesRef"]], "gpflow.experimental.check_shapes.argument_ref.AllElementsRef": [[8, 2, 1, "", "map_value"]], "gpflow.experimental.check_shapes.argument_ref.ArgumentRef": [[8, 2, 1, "", "get"], [8, 3, 1, "", "is_result"], [8, 3, 1, "", "root_argument_name"]], "gpflow.experimental.check_shapes.argument_ref.AttributeArgumentRef": [[8, 2, 1, "", "map_context"], [8, 2, 1, "", "map_value"]], "gpflow.experimental.check_shapes.argument_ref.DelegatingArgumentRef": [[8, 2, 1, "", "get"], [8, 3, 1, "", "is_result"], [8, 2, 1, "", "map_context"], [8, 2, 1, "", "map_value"], [8, 3, 1, "", "root_argument_name"]], "gpflow.experimental.check_shapes.argument_ref.IndexArgumentRef": [[8, 2, 1, "", "map_context"], [8, 2, 1, "", "map_value"]], "gpflow.experimental.check_shapes.argument_ref.KeysRef": [[8, 2, 1, "", "map_value"]], "gpflow.experimental.check_shapes.argument_ref.RootArgumentRef": [[8, 2, 1, "", "get"], [8, 3, 1, "", "is_result"], [8, 3, 1, "", "root_argument_name"]], "gpflow.experimental.check_shapes.argument_ref.ValuesRef": [[8, 2, 1, "", "map_value"]], "gpflow.experimental.check_shapes.bool_specs": [[9, 1, 1, "", "BoolTest"], [9, 1, 1, "", "ParsedAndBoolSpec"], [9, 1, 1, "", "ParsedArgumentRefBoolSpec"], [9, 1, 1, "", "ParsedBoolSpec"], [9, 1, 1, "", "ParsedNotBoolSpec"], [9, 1, 1, "", "ParsedOrBoolSpec"]], "gpflow.experimental.check_shapes.bool_specs.ParsedAndBoolSpec": [[9, 2, 1, "", "get"]], "gpflow.experimental.check_shapes.bool_specs.ParsedArgumentRefBoolSpec": [[9, 2, 1, "", "get"]], "gpflow.experimental.check_shapes.bool_specs.ParsedBoolSpec": [[9, 2, 1, "", "get"]], "gpflow.experimental.check_shapes.bool_specs.ParsedNotBoolSpec": [[9, 2, 1, "", "get"]], "gpflow.experimental.check_shapes.bool_specs.ParsedOrBoolSpec": [[9, 2, 1, "", "get"]], "gpflow.experimental.check_shapes.checker_context": [[10, 4, 1, "", "set_shape_checker"]], "gpflow.experimental.check_shapes.decorator": [[11, 4, 1, "", "null_check_shapes"]], "gpflow.experimental.check_shapes.error_contexts": [[12, 1, 1, "", "ArgumentContext"], [12, 1, 1, "", "AttributeContext"], [12, 1, 1, "", "ConditionContext"], [12, 1, 1, "", "FunctionCallContext"], [12, 1, 1, "", "FunctionDefinitionContext"], [12, 1, 1, "", "IndexContext"], [12, 1, 1, "", "LarkUnexpectedInputContext"], [12, 1, 1, "", "MappingKeyContext"], [12, 1, 1, "", "MappingValueContext"], [12, 1, 1, "", "MessageBuilder"], [12, 1, 1, "", "MultipleElementBoolContext"], [12, 1, 1, "", "NoteContext"], [12, 1, 1, "", "ObjectTypeContext"], [12, 1, 1, "", "ObjectValueContext"], [12, 1, 1, "", "ParallelContext"], [12, 1, 1, "", "ParserInputContext"], [12, 1, 1, "", "ShapeContext"], [12, 1, 1, "", "StackContext"], [12, 1, 1, "", "TensorSpecContext"], [12, 1, 1, "", "VariableContext"]], "gpflow.experimental.check_shapes.error_contexts.ArgumentContext": [[12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.error_contexts.AttributeContext": [[12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.error_contexts.ConditionContext": [[12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.error_contexts.FunctionCallContext": [[12, 2, 1, "", "precompute"], [12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.error_contexts.FunctionDefinitionContext": [[12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.error_contexts.IndexContext": [[12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.error_contexts.LarkUnexpectedInputContext": [[12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.error_contexts.MappingKeyContext": [[12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.error_contexts.MappingValueContext": [[12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.error_contexts.MessageBuilder": [[12, 2, 1, "", "add_columned_line"], [12, 2, 1, "", "add_line"], [12, 2, 1, "", "build"], [12, 2, 1, "", "indent"]], "gpflow.experimental.check_shapes.error_contexts.MultipleElementBoolContext": [[12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.error_contexts.NoteContext": [[12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.error_contexts.ObjectTypeContext": [[12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.error_contexts.ObjectValueContext": [[12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.error_contexts.ParallelContext": [[12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.error_contexts.ShapeContext": [[12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.error_contexts.StackContext": [[12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.error_contexts.TensorSpecContext": [[12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.error_contexts.VariableContext": [[12, 2, 1, "", "print"]], "gpflow.experimental.check_shapes.exceptions": [[13, 1, 1, "", "ArgumentReferenceError"], [13, 1, 1, "", "CheckShapesError"], [13, 1, 1, "", "DocstringParseError"], [13, 1, 1, "", "NoShapeError"], [13, 1, 1, "", "ShapeMismatchError"], [13, 1, 1, "", "SpecificationParseError"], [13, 1, 1, "", "VariableTypeError"]], "gpflow.experimental.check_shapes.parser": [[15, 4, 1, "", "parse_and_rewrite_docstring"], [15, 4, 1, "", "parse_function_spec"], [15, 4, 1, "", "parse_tensor_spec"]], "gpflow.experimental.check_shapes.shapes": [[16, 4, 1, "", "get_ndarray_shape"], [16, 4, 1, "", "get_scalar_shape"], [16, 4, 1, "", "get_sequence_shape"], [16, 4, 1, "", "get_tensorflow_shape"]], "gpflow.experimental.check_shapes.specs": [[17, 1, 1, "", "ParsedArgumentSpec"], [17, 1, 1, "", "ParsedDimensionSpec"], [17, 1, 1, "", "ParsedFunctionSpec"], [17, 1, 1, "", "ParsedNoteSpec"], [17, 1, 1, "", "ParsedShapeSpec"], [17, 1, 1, "", "ParsedTensorSpec"]], "gpflow.experimental.utils": [[19, 4, 1, "", "experimental"]], "gpflow.functions": [[20, 1, 1, "", "Additive"], [20, 1, 1, "", "Constant"], [20, 1, 1, "", "Function"], [20, 1, 1, "", "Identity"], [20, 1, 1, "", "Linear"], [20, 1, 1, "", "MeanFunction"], [20, 1, 1, "", "Polynomial"], [20, 1, 1, "", "Product"], [20, 1, 1, "", "SwitchedFunction"], [20, 1, 1, "", "SwitchedMeanFunction"], [20, 1, 1, "", "Zero"]], "gpflow.functions.Polynomial": [[20, 2, 1, "", "compute_powers"]], "gpflow.inducing_variables": [[22, 1, 1, "", "FallbackSeparateIndependentInducingVariables"], [22, 1, 1, "", "FallbackSharedIndependentInducingVariables"], [22, 1, 1, "", "InducingPatches"], [22, 1, 1, "", "InducingPoints"], [22, 1, 1, "", "InducingVariables"], [22, 1, 1, "", "MultioutputInducingVariables"], [22, 1, 1, "", "Multiscale"], [22, 1, 1, "", "SeparateIndependentInducingVariables"], [22, 1, 1, "", "SharedIndependentInducingVariables"], [23, 0, 0, "-", "inducing_variables"]], "gpflow.inducing_variables.FallbackSeparateIndependentInducingVariables": [[22, 3, 1, "", "num_inducing"], [22, 3, 1, "", "shape"]], "gpflow.inducing_variables.FallbackSharedIndependentInducingVariables": [[22, 3, 1, "", "num_inducing"], [22, 3, 1, "", "shape"]], "gpflow.inducing_variables.InducingVariables": [[22, 3, 1, "", "num_inducing"], [22, 3, 1, "", "shape"]], "gpflow.inducing_variables.inducing_variables": [[23, 1, 1, "", "InducingPointsBase"], [23, 4, 1, "", "get_scalar_shape"]], "gpflow.inducing_variables.inducing_variables.InducingPointsBase": [[23, 3, 1, "", "num_inducing"], [23, 3, 1, "", "shape"]], "gpflow.kernels": [[25, 1, 1, "", "AnisotropicStationary"], [25, 1, 1, "", "ArcCosine"], [25, 5, 1, "", "Bias"], [25, 1, 1, "", "ChangePoints"], [25, 1, 1, "", "Combination"], [25, 1, 1, "", "Convolutional"], [25, 1, 1, "", "Coregion"], [25, 1, 1, "", "Cosine"], [25, 1, 1, "", "Exponential"], [25, 1, 1, "", "IndependentLatent"], [25, 1, 1, "", "IsotropicStationary"], [25, 1, 1, "", "Kernel"], [25, 1, 1, "", "Linear"], [25, 1, 1, "", "LinearCoregionalization"], [25, 1, 1, "", "Matern12"], [25, 1, 1, "", "Matern32"], [25, 1, 1, "", "Matern52"], [25, 1, 1, "", "MultioutputKernel"], [25, 1, 1, "", "Periodic"], [25, 1, 1, "", "Polynomial"], [25, 1, 1, "", "Product"], [25, 5, 1, "", "RBF"], [25, 1, 1, "", "RationalQuadratic"], [25, 1, 1, "", "SeparateIndependent"], [25, 1, 1, "", "SharedIndependent"], [25, 1, 1, "", "Static"], [25, 1, 1, "", "Stationary"], [25, 1, 1, "", "Sum"], [25, 1, 1, "", "White"], [24, 0, 0, "-", "base"]], "gpflow.kernels.AnisotropicStationary": [[25, 2, 1, "", "scaled_difference_matrix"]], "gpflow.kernels.ArcCosine": [[25, 3, 1, "", "ard"]], "gpflow.kernels.Combination": [[25, 3, 1, "", "on_separate_dimensions"]], "gpflow.kernels.Convolutional": [[25, 2, 1, "", "get_patches"]], "gpflow.kernels.IsotropicStationary": [[25, 2, 1, "", "scaled_squared_euclid_dist"]], "gpflow.kernels.Kernel": [[25, 2, 1, "", "on_separate_dims"], [25, 2, 1, "", "slice"], [25, 2, 1, "", "slice_cov"]], "gpflow.kernels.Linear": [[25, 3, 1, "", "ard"]], "gpflow.kernels.LinearCoregionalization": [[25, 2, 1, "", "K"], [25, 2, 1, "", "K_diag"], [25, 3, 1, "", "latent_kernels"], [25, 3, 1, "", "num_latent_gps"]], "gpflow.kernels.MultioutputKernel": [[25, 2, 1, "", "K"], [25, 2, 1, "", "K_diag"], [25, 3, 1, "", "latent_kernels"], [25, 3, 1, "", "num_latent_gps"]], "gpflow.kernels.SeparateIndependent": [[25, 2, 1, "", "K"], [25, 2, 1, "", "K_diag"], [25, 3, 1, "", "latent_kernels"], [25, 3, 1, "", "num_latent_gps"]], "gpflow.kernels.SharedIndependent": [[25, 2, 1, "", "K"], [25, 2, 1, "", "K_diag"], [25, 3, 1, "", "latent_kernels"], [25, 3, 1, "", "num_latent_gps"]], "gpflow.kernels.Stationary": [[25, 3, 1, "", "ard"]], "gpflow.kernels.base": [[24, 1, 1, "", "ReducingCombination"]], "gpflow.kullback_leiblers": [[26, 4, 1, "", "_"], [26, 4, 1, "", "gauss_kl"]], "gpflow.likelihoods": [[27, 1, 1, "", "Bernoulli"], [27, 1, 1, "", "Beta"], [27, 1, 1, "", "Exponential"], [27, 1, 1, "", "Gamma"], [27, 1, 1, "", "Gaussian"], [27, 1, 1, "", "GaussianMC"], [27, 1, 1, "", "HeteroskedasticTFPConditional"], [27, 1, 1, "", "Likelihood"], [27, 1, 1, "", "MonteCarloLikelihood"], [27, 1, 1, "", "MultiClass"], [27, 1, 1, "", "MultiLatentLikelihood"], [27, 1, 1, "", "MultiLatentTFPConditional"], [27, 1, 1, "", "Ordinal"], [27, 1, 1, "", "Poisson"], [27, 1, 1, "", "QuadratureLikelihood"], [27, 1, 1, "", "RobustMax"], [27, 1, 1, "", "ScalarLikelihood"], [27, 1, 1, "", "Softmax"], [27, 1, 1, "", "StudentT"], [27, 1, 1, "", "SwitchedLikelihood"], [28, 0, 0, "-", "utils"]], "gpflow.likelihoods.Likelihood": [[27, 2, 1, "", "conditional_mean"], [27, 2, 1, "", "conditional_variance"], [27, 2, 1, "", "log_prob"], [27, 2, 1, "", "predict_log_density"], [27, 2, 1, "", "predict_mean_and_var"], [27, 2, 1, "", "variational_expectations"]], "gpflow.likelihoods.utils": [[28, 4, 1, "", "inv_probit"]], "gpflow.logdensities": [[29, 4, 1, "", "bernoulli"], [29, 4, 1, "", "beta"], [29, 4, 1, "", "exponential"], [29, 4, 1, "", "gamma"], [29, 4, 1, "", "gaussian"], [29, 4, 1, "", "laplace"], [29, 4, 1, "", "lognormal"], [29, 4, 1, "", "multivariate_normal"], [29, 4, 1, "", "poisson"], [29, 4, 1, "", "student_t"]], "gpflow.models": [[32, 1, 1, "", "BayesianGPLVM"], [32, 1, 1, "", "BayesianModel"], [32, 1, 1, "", "CGLB"], [32, 1, 1, "", "ExternalDataTrainingLossMixin"], [32, 1, 1, "", "GPLVM"], [32, 1, 1, "", "GPMC"], [32, 1, 1, "", "GPModel"], [32, 1, 1, "", "GPR"], [32, 1, 1, "", "GPRFITC"], [32, 1, 1, "", "InternalDataTrainingLossMixin"], [32, 1, 1, "", "SGPMC"], [32, 1, 1, "", "SGPR"], [32, 1, 1, "", "SVGP"], [32, 1, 1, "", "VGP"], [32, 1, 1, "", "VGPOpperArchambeau"], [30, 0, 0, "-", "cglb"], [31, 0, 0, "-", "gpr"], [32, 4, 1, "", "maximum_log_likelihood_objective"], [33, 0, 0, "-", "sgpr"], [34, 0, 0, "-", "svgp"], [32, 4, 1, "", "training_loss"], [32, 4, 1, "", "training_loss_closure"], [35, 0, 0, "-", "util"], [36, 0, 0, "-", "vgp"]], "gpflow.models.BayesianGPLVM": [[32, 2, 1, "", "elbo"], [32, 2, 1, "", "maximum_log_likelihood_objective"], [32, 2, 1, "", "predict_f"], [32, 2, 1, "", "predict_log_density"]], "gpflow.models.BayesianModel": [[32, 2, 1, "", "log_posterior_density"], [32, 2, 1, "", "log_prior_density"], [32, 2, 1, "", "maximum_log_likelihood_objective"]], "gpflow.models.CGLB": [[32, 2, 1, "", "logdet_term"], [32, 2, 1, "", "predict_f"], [32, 2, 1, "", "predict_log_density"], [32, 2, 1, "", "predict_y"], [32, 2, 1, "", "quad_term"]], "gpflow.models.ExternalDataTrainingLossMixin": [[32, 2, 1, "", "training_loss"], [32, 2, 1, "", "training_loss_closure"]], "gpflow.models.GPMC": [[32, 2, 1, "", "log_likelihood"], [32, 2, 1, "", "log_posterior_density"], [32, 2, 1, "", "maximum_log_likelihood_objective"], [32, 2, 1, "", "predict_f"]], "gpflow.models.GPModel": [[32, 2, 1, "", "calc_num_latent_gps"], [32, 2, 1, "", "calc_num_latent_gps_from_data"], [32, 2, 1, "", "predict_f_samples"], [32, 2, 1, "", "predict_log_density"], [32, 2, 1, "", "predict_y"]], "gpflow.models.GPRFITC": [[32, 2, 1, "", "fitc_log_marginal_likelihood"], [32, 2, 1, "", "maximum_log_likelihood_objective"], [32, 2, 1, "", "predict_f"]], "gpflow.models.InternalDataTrainingLossMixin": [[32, 2, 1, "", "training_loss"], [32, 2, 1, "", "training_loss_closure"]], "gpflow.models.SGPMC": [[32, 2, 1, "", "log_likelihood_lower_bound"], [32, 2, 1, "", "log_posterior_density"], [32, 2, 1, "", "maximum_log_likelihood_objective"], [32, 2, 1, "", "predict_f"]], "gpflow.models.VGPOpperArchambeau": [[32, 2, 1, "", "elbo"], [32, 2, 1, "", "maximum_log_likelihood_objective"], [32, 2, 1, "", "predict_f"]], "gpflow.models.cglb": [[30, 1, 1, "", "NystromPreconditioner"], [30, 4, 1, "", "cglb_conjugate_gradient"]], "gpflow.models.gpr": [[31, 1, 1, "", "GPR_deprecated"], [31, 1, 1, "", "GPR_with_posterior"]], "gpflow.models.gpr.GPR_deprecated": [[31, 2, 1, "", "log_marginal_likelihood"], [31, 2, 1, "", "maximum_log_likelihood_objective"], [31, 2, 1, "", "predict_f"]], "gpflow.models.gpr.GPR_with_posterior": [[31, 2, 1, "", "posterior"], [31, 2, 1, "", "predict_f"]], "gpflow.models.sgpr": [[33, 1, 1, "", "SGPRBase_deprecated"], [33, 1, 1, "", "SGPR_deprecated"], [33, 1, 1, "", "SGPR_with_posterior"]], "gpflow.models.sgpr.SGPRBase_deprecated": [[33, 2, 1, "", "upper_bound"]], "gpflow.models.sgpr.SGPR_deprecated": [[33, 1, 1, "", "CommonTensors"], [33, 2, 1, "", "compute_qu"], [33, 2, 1, "", "elbo"], [33, 2, 1, "", "logdet_term"], [33, 2, 1, "", "maximum_log_likelihood_objective"], [33, 2, 1, "", "predict_f"], [33, 2, 1, "", "quad_term"]], "gpflow.models.sgpr.SGPR_deprecated.CommonTensors": [[33, 5, 1, "", "A"], [33, 5, 1, "", "AAT"], [33, 5, 1, "", "B"], [33, 5, 1, "", "L"], [33, 5, 1, "", "LB"], [33, 5, 1, "", "sigma"], [33, 5, 1, "", "sigma_sq"]], "gpflow.models.sgpr.SGPR_with_posterior": [[33, 2, 1, "", "posterior"], [33, 2, 1, "", "predict_f"]], "gpflow.models.svgp": [[34, 1, 1, "", "SVGP_deprecated"], [34, 1, 1, "", "SVGP_with_posterior"]], "gpflow.models.svgp.SVGP_deprecated": [[34, 2, 1, "", "elbo"], [34, 2, 1, "", "maximum_log_likelihood_objective"]], "gpflow.models.svgp.SVGP_with_posterior": [[34, 2, 1, "", "posterior"], [34, 2, 1, "", "predict_f"]], "gpflow.models.util": [[35, 4, 1, "", "data_input_to_tensor"], [35, 4, 1, "", "inducingpoint_wrapper"]], "gpflow.models.vgp": [[36, 1, 1, "", "VGP_deprecated"], [36, 1, 1, "", "VGP_with_posterior"], [36, 4, 1, "", "update_vgp_data"]], "gpflow.models.vgp.VGP_deprecated": [[36, 2, 1, "", "elbo"], [36, 2, 1, "", "maximum_log_likelihood_objective"]], "gpflow.models.vgp.VGP_with_posterior": [[36, 2, 1, "", "posterior"], [36, 2, 1, "", "predict_f"]], "gpflow.monitor": [[37, 1, 1, "", "ExecuteCallback"], [37, 1, 1, "", "ImageToTensorBoard"], [37, 1, 1, "", "ModelToTensorBoard"], [37, 1, 1, "", "Monitor"], [37, 1, 1, "", "MonitorTask"], [37, 1, 1, "", "MonitorTaskGroup"], [37, 1, 1, "", "ScalarToTensorBoard"], [37, 1, 1, "", "ToTensorBoard"]], "gpflow.monitor.ExecuteCallback": [[37, 2, 1, "", "run"]], "gpflow.monitor.ImageToTensorBoard": [[37, 2, 1, "", "run"]], "gpflow.monitor.ModelToTensorBoard": [[37, 2, 1, "", "run"]], "gpflow.monitor.MonitorTask": [[37, 2, 1, "", "run"]], "gpflow.monitor.ScalarToTensorBoard": [[37, 2, 1, "", "run"]], "gpflow.optimizers": [[38, 1, 1, "", "NaturalGradient"], [38, 1, 1, "", "SamplingHelper"], [38, 1, 1, "", "Scipy"], [38, 1, 1, "", "XiNat"], [38, 1, 1, "", "XiSqrtMeanVar"], [38, 1, 1, "", "XiTransform"], [39, 0, 0, "-", "natgrad"]], "gpflow.optimizers.NaturalGradient": [[38, 2, 1, "", "get_config"], [38, 2, 1, "", "minimize"]], "gpflow.optimizers.SamplingHelper": [[38, 2, 1, "", "convert_to_constrained_values"], [38, 3, 1, "", "current_state"], [38, 3, 1, "", "target_log_prob_fn"]], "gpflow.optimizers.Scipy": [[38, 2, 1, "", "minimize"]], "gpflow.optimizers.XiNat": [[38, 2, 1, "", "meanvarsqrt_to_xi"], [38, 2, 1, "", "naturals_to_xi"], [38, 2, 1, "", "xi_to_meanvarsqrt"]], "gpflow.optimizers.XiSqrtMeanVar": [[38, 2, 1, "", "meanvarsqrt_to_xi"], [38, 2, 1, "", "naturals_to_xi"], [38, 2, 1, "", "xi_to_meanvarsqrt"]], "gpflow.optimizers.XiTransform": [[38, 2, 1, "", "meanvarsqrt_to_xi"], [38, 2, 1, "", "naturals_to_xi"], [38, 2, 1, "", "xi_to_meanvarsqrt"]], "gpflow.optimizers.natgrad": [[39, 4, 1, "", "expectation_to_meanvarsqrt"], [39, 4, 1, "", "expectation_to_natural"], [39, 4, 1, "", "meanvarsqrt_to_expectation"], [39, 4, 1, "", "meanvarsqrt_to_natural"], [39, 4, 1, "", "natural_to_expectation"], [39, 4, 1, "", "natural_to_meanvarsqrt"], [39, 4, 1, "", "swap_dimensions"]], "gpflow.posteriors": [[40, 1, 1, "", "AbstractPosterior"], [40, 1, 1, "", "BasePosterior"], [40, 1, 1, "", "FallbackIndependentLatentPosterior"], [40, 1, 1, "", "FullyCorrelatedPosterior"], [40, 1, 1, "", "GPRPosterior"], [40, 1, 1, "", "IndependentPosterior"], [40, 1, 1, "", "IndependentPosteriorMultiOutput"], [40, 1, 1, "", "IndependentPosteriorSingleOutput"], [40, 1, 1, "", "LinearCoregionalizationPosterior"], [40, 1, 1, "", "PrecomputeCacheType"], [40, 1, 1, "", "PrecomputedValue"], [40, 1, 1, "", "SGPRPosterior"], [40, 1, 1, "", "VGPPosterior"], [40, 4, 1, "", "_get_posterior_base_case"], [40, 4, 1, "", "_get_posterior_fully_correlated_mo"], [40, 4, 1, "", "_get_posterior_independent_mo"], [40, 4, 1, "", "_get_posterior_independentlatent_mo_fallback"], [40, 4, 1, "", "_get_posterior_linearcoregionalization_mo_efficient"], [40, 4, 1, "", "create_posterior"], [40, 4, 1, "", "get_precomputed_value_shape"]], "gpflow.posteriors.AbstractPosterior": [[40, 2, 1, "", "fused_predict_f"], [40, 2, 1, "", "predict_f"], [40, 2, 1, "", "update_cache"]], "gpflow.posteriors.PrecomputedValue": [[40, 5, 1, "", "axis_dynamic"], [40, 5, 1, "", "value"], [40, 2, 1, "", "wrap_alpha_Qinv"]], "gpflow.probability_distributions": [[41, 1, 1, "", "DiagonalGaussian"], [41, 1, 1, "", "Gaussian"], [41, 1, 1, "", "MarkovGaussian"], [41, 1, 1, "", "ProbabilityDistribution"], [41, 4, 1, "", "get_probability_distribution_shape"]], "gpflow.probability_distributions.DiagonalGaussian": [[41, 3, 1, "", "shape"]], "gpflow.probability_distributions.Gaussian": [[41, 3, 1, "", "shape"]], "gpflow.probability_distributions.MarkovGaussian": [[41, 3, 1, "", "shape"]], "gpflow.probability_distributions.ProbabilityDistribution": [[41, 3, 1, "", "shape"]], "gpflow.quadrature": [[43, 1, 1, "", "GaussianQuadrature"], [43, 1, 1, "", "NDiagGHQuadrature"], [42, 0, 0, "-", "gauss_hermite"], [43, 4, 1, "", "hermgauss"], [43, 4, 1, "", "mvhermgauss"], [43, 4, 1, "", "mvnquad"], [43, 4, 1, "", "ndiag_mc"], [43, 4, 1, "", "ndiagquad"]], "gpflow.quadrature.GaussianQuadrature": [[43, 2, 1, "", "logspace"]], "gpflow.quadrature.gauss_hermite": [[42, 4, 1, "", "gh_points_and_weights"], [42, 4, 1, "", "list_to_flat_grid"], [42, 4, 1, "", "ndgh_points_and_weights"], [42, 4, 1, "", "repeat_as_list"], [42, 4, 1, "", "reshape_Z_dZ"]], "gpflow.type_flags": [[44, 4, 1, "", "compute_mypy_flags"]], "gpflow.utilities": [[45, 1, 1, "", "Dispatcher"], [45, 4, 1, "", "add_likelihood_noise_cov"], [45, 4, 1, "", "add_noise_cov"], [45, 4, 1, "", "assert_params_false"], [45, 4, 1, "", "deepcopy"], [45, 4, 1, "", "freeze"], [45, 4, 1, "", "is_variable"], [45, 4, 1, "", "leaf_components"], [45, 4, 1, "", "multiple_assign"], [46, 0, 0, "-", "ops"], [45, 4, 1, "", "parameter_dict"], [47, 0, 0, "-", "parameter_or_function"], [45, 4, 1, "", "positive"], [45, 4, 1, "", "print_summary"], [45, 4, 1, "", "read_values"], [45, 4, 1, "", "reset_cache_bijectors"], [45, 4, 1, "", "select_dict_parameters_with_prior"], [45, 4, 1, "", "tabulate_module_summary"], [45, 4, 1, "", "to_default_float"], [45, 4, 1, "", "to_default_int"], [45, 4, 1, "", "training_loop"], [45, 4, 1, "", "traverse_module"], [45, 4, 1, "", "triangular"], [45, 4, 1, "", "triangular_size"]], "gpflow.utilities.Dispatcher": [[45, 2, 1, "", "dispatch"], [45, 2, 1, "", "dispatch_or_raise"], [45, 2, 1, "", "get_first_occurrence"], [45, 2, 1, "", "register"]], "gpflow.utilities.ops": [[46, 4, 1, "", "broadcasting_elementwise"], [46, 4, 1, "", "difference_matrix"], [46, 4, 1, "", "eye"], [46, 4, 1, "", "leading_transpose"], [46, 4, 1, "", "pca_reduce"], [46, 4, 1, "", "square_distance"]], "gpflow.utilities.parameter_or_function": [[47, 4, 1, "", "evaluate_parameter_or_function"], [47, 4, 1, "", "prepare_parameter_or_function"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"gpflow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51], "base": [0, 24], "class": [0, 3, 8, 9, 12, 13, 14, 17, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 45, 73], "prioron": 0, "condit": [1, 2, 14], "modul": [1, 5, 14, 18, 21, 22, 25, 27, 32, 38, 43, 45, 73], "function": [1, 2, 3, 4, 5, 6, 7, 10, 11, 14, 15, 16, 19, 20, 21, 23, 26, 28, 29, 30, 32, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 71, 75], "base_condit": 1, "sample_condit": 1, "uncertain_condit": 1, "util": [2, 19, 28, 35, 45, 46, 47], "base_conditional_with_lm": 2, "expand_independent_output": 2, "fully_correlated_condit": 2, "fully_correlated_conditional_repeat": 2, "independent_interdomain_condit": 2, "mix_latent_gp": 2, "rollaxis_left": 2, "rollaxis_right": 2, "sample_mvn": 2, "separate_independent_conditional_implement": 2, "config": 3, "as_context": 3, "default_positive_bijector": 3, "default_positive_minimum": 3, "default_summary_fmt": 3, "positive_bijector_type_map": 3, "set_config": 3, "set_default_float": 3, "set_default_int": 3, "set_default_jitt": 3, "set_default_positive_bijector": 3, "set_default_positive_minimum": 3, "set_default_summary_fmt": 3, "covari": [4, 67], "kuf": 4, "kuu": 4, "expect": [5, 6], "quadrature_expect": 5, "quadratur": [6, 42, 43], "get_eval_func": 6, "experiment": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "check_shap": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "accessor": 7, "maybe_get_check_shap": 7, "set_check_shap": 7, "argument_ref": 8, "allelementsref": 8, "argumentref": 8, "attributeargumentref": 8, "delegatingargumentref": 8, "indexargumentref": 8, "keysref": 8, "rootargumentref": 8, "valuesref": 8, "bool_spec": 9, "booltest": 9, "parsedandboolspec": 9, "parsedargumentrefboolspec": 9, "parsedboolspec": 9, "parsednotboolspec": 9, "parsedorboolspec": 9, "checker_context": 10, "set_shape_check": 10, "decor": [11, 14], "null_check_shap": 11, "error_context": 12, "argumentcontext": 12, "attributecontext": 12, "conditioncontext": 12, "functioncallcontext": 12, "functiondefinitioncontext": 12, "indexcontext": 12, "larkunexpectedinputcontext": 12, "mappingkeycontext": 12, "mappingvaluecontext": 12, "messagebuild": 12, "multipleelementboolcontext": 12, "notecontext": 12, "objecttypecontext": 12, "objectvaluecontext": 12, "parallelcontext": 12, "parserinputcontext": 12, "shapecontext": 12, "stackcontext": 12, "tensorspeccontext": 12, "variablecontext": 12, "except": 13, "argumentreferenceerror": 13, "checkshapeserror": 13, "docstringparseerror": 13, "noshapeerror": 13, "shapemismatcherror": 13, "specificationparseerror": 13, "variabletypeerror": 13, "speed": 14, "interact": [14, 71], "tf": 14, "best": 14, "effort": 14, "check": 14, "specif": 14, "argument": 14, "shape": [14, 16], "note": [14, 85], "reus": 14, "inherit": 14, "program": 14, "other": [14, 68, 69], "intermedi": 14, "result": 14, "without": 14, "document": [14, 51], "support": 14, "type": 14, "custom": [14, 71], "docstringformat": 14, "errorcontext": 14, "shapecheck": 14, "shapecheckingst": 14, "disable_check_shap": 14, "get_check_shap": 14, "get_enable_check_shap": 14, "get_enable_function_call_precomput": 14, "get_rewrite_docstr": 14, "get_shap": 14, "get_shape_check": 14, "inherit_check_shap": 14, "register_get_shap": 14, "set_enable_check_shap": 14, "set_enable_function_call_precomput": 14, "set_rewrite_docstr": 14, "parser": 15, "parse_and_rewrite_docstr": 15, "parse_function_spec": 15, "parse_tensor_spec": 15, "get_ndarray_shap": 16, "get_scalar_shap": [16, 23], "get_sequence_shap": 16, "get_tensorflow_shap": 16, "spec": 17, "parsedargumentspec": 17, "parseddimensionspec": 17, "parsedfunctionspec": 17, "parsednotespec": 17, "parsedshapespec": 17, "parsedtensorspec": 17, "addit": [20, 69], "constant": 20, "ident": 20, "linear": [20, 25], "meanfunct": 20, "polynomi": [20, 25], "product": [20, 25], "switchedfunct": 20, "switchedmeanfunct": 20, "zero": 20, "paramet": [21, 69, 73, 74], "default_float": 21, "default_int": 21, "default_jitt": 21, "set_train": 21, "inducing_vari": [22, 23], "fallbackseparateindependentinducingvari": 22, "fallbacksharedindependentinducingvari": 22, "inducingpatch": 22, "inducingpoint": 22, "inducingvari": 22, "multioutputinducingvari": 22, "multiscal": 22, "separateindependentinducingvari": 22, "sharedindependentinducingvari": 22, "inducingpointsbas": 23, "kernel": [24, 25, 69, 71], "reducingcombin": 24, "anisotropicstationari": 25, "arccosin": 25, "bia": 25, "changepoint": [25, 54], "combin": 25, "convolut": [25, 55], "coregion": 25, "cosin": 25, "exponenti": [25, 27, 29], "independentlat": 25, "isotropicstationari": 25, "linearcoregion": 25, "matern12": 25, "matern32": 25, "matern52": 25, "multioutputkernel": 25, "period": [25, 69], "rbf": 25, "rationalquadrat": 25, "separateindepend": 25, "sharedindepend": 25, "static": 25, "stationari": 25, "sum": 25, "white": 25, "kullback_leibl": 26, "gauss_kl": 26, "prior_kl": 26, "likelihood": [27, 28], "creat": 27, "new": 27, "bernoulli": [27, 29], "beta": [27, 29], "gamma": [27, 29], "gaussian": [27, 29, 41, 68], "gaussianmc": 27, "heteroskedastictfpcondit": 27, "montecarlolikelihood": 27, "multiclass": 27, "multilatentlikelihood": 27, "multilatenttfpcondit": 27, "ordin": 27, "poisson": [27, 29], "quadraturelikelihood": 27, "robustmax": 27, "scalarlikelihood": 27, "softmax": 27, "studentt": 27, "switchedlikelihood": 27, "inv_probit": 28, "logdens": 29, "laplac": 29, "lognorm": 29, "multivariate_norm": 29, "student_t": 29, "model": [30, 31, 32, 33, 34, 35, 36, 67, 68, 73, 74, 85], "cglb": [30, 32, 82], "nystromprecondition": 30, "cglb_conjugate_gradi": 30, "gpr": [31, 32], "gpr_deprec": 31, "gpr_with_posterior": 31, "bayesiangplvm": 32, "bayesianmodel": 32, "externaldatatraininglossmixin": 32, "gplvm": [32, 53, 85], "gpmc": 32, "gpmodel": 32, "gprfitc": 32, "internaldatatraininglossmixin": 32, "sgpmc": 32, "sgpr": [32, 33], "svgp": [32, 34], "vgp": [32, 36], "vgpopperarchambeau": 32, "maximum_log_likelihood_object": 32, "training_loss": 32, "training_loss_closur": 32, "sgprbase_deprec": 33, "sgpr_deprec": 33, "sgpr_with_posterior": 33, "svgp_deprec": 34, "svgp_with_posterior": 34, "data_input_to_tensor": 35, "inducingpoint_wrapp": 35, "vgp_deprec": 36, "vgp_with_posterior": 36, "update_vgp_data": 36, "monitor": [37, 72], "executecallback": [37, 72], "imagetotensorboard": 37, "modeltotensorboard": 37, "monitortask": 37, "monitortaskgroup": 37, "scalartotensorboard": 37, "totensorboard": 37, "optim": [38, 39], "naturalgradi": 38, "samplinghelp": 38, "scipi": 38, "xinat": 38, "xisqrtmeanvar": 38, "xitransform": 38, "natgrad": 39, "expectation_to_meanvarsqrt": 39, "expectation_to_natur": 39, "meanvarsqrt_to_expect": 39, "meanvarsqrt_to_natur": 39, "natural_to_expect": 39, "natural_to_meanvarsqrt": 39, "swap_dimens": 39, "posterior": 40, "abstractposterior": 40, "baseposterior": 40, "fallbackindependentlatentposterior": 40, "fullycorrelatedposterior": 40, "gprposterior": 40, "independentposterior": 40, "independentposteriormultioutput": 40, "independentposteriorsingleoutput": 40, "linearcoregionalizationposterior": 40, "precomputecachetyp": 40, "precomputedvalu": 40, "sgprposterior": 40, "vgpposterior": 40, "create_posterior": 40, "get_posterior_class": 40, "get_precomputed_value_shap": 40, "probability_distribut": 41, "diagonalgaussian": 41, "markovgaussian": 41, "probabilitydistribut": 41, "get_probability_distribution_shap": 41, "gauss_hermit": 42, "gh_points_and_weight": 42, "list_to_flat_grid": 42, "ndgh_points_and_weight": 42, "repeat_as_list": 42, "reshape_z_dz": 42, "gaussianquadratur": 43, "ndiagghquadratur": 43, "hermgauss": 43, "mvhermgauss": 43, "mvnquad": 43, "ndiag_mc": 43, "ndiagquad": 43, "type_flag": 44, "compute_mypy_flag": 44, "dispatch": 45, "add_likelihood_noise_cov": 45, "add_noise_cov": 45, "assert_params_fals": 45, "deepcopi": 45, "freez": 45, "is_vari": 45, "leaf_compon": 45, "multiple_assign": 45, "parameter_dict": 45, "posit": 45, "print_summari": 45, "read_valu": 45, "reset_cache_bijector": 45, "select_dict_parameters_with_prior": 45, "tabulate_module_summari": 45, "to_default_float": 45, "to_default_int": 45, "training_loop": 45, "traverse_modul": 45, "triangular": 45, "triangular_s": 45, "op": 46, "broadcasting_elementwis": 46, "difference_matrix": 46, "ey": 46, "leading_transpos": 46, "pca_reduc": 46, "square_dist": 46, "parameter_or_funct": 47, "evaluate_parameter_or_funct": 47, "prepare_parameter_or_funct": 47, "benchmark": 48, "bibliographi": 49, "get": 50, "start": 50, "contact": 51, "cite": 51, "acknowledg": 51, "instal": 52, "pre": 52, "built": 52, "from": 52, "sourc": 52, "version": 52, "fake": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "ipynb": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "coregionalis": 56, "fast_predict": 57, "gps_for_big_data": 58, "heteroskedast": 59, "mcmc": [60, 85], "multiclass_classif": 61, "multioutput": [62, 85], "natural_gradi": 63, "ordinal_regress": 64, "variational_fourier_featur": 65, "varying_nois": 66, "basic": 67, "usag": 67, "import": 67, "meet": 67, "f": 67, "y": 67, "minim": 67, "plot": 67, "margin": 67, "varianc": 67, "v": 67, "full": 67, "what": [67, 69, 73, 85], "": 67, "next": 67, "classif": 68, "data": [68, 69, 70], "distribut": 68, "The": [68, 69, 73], "variat": [68, 85], "gaussion": 68, "process": 68, "non": 68, "regress": [68, 85], "spars": 68, "write": 68, "code": 68, "handl": 68, "both": 68, "intern": 68, "extern": [68, 75], "i": 69, "visualis": 69, "mat\u00e9rn": 69, "famili": 69, "composit": [69, 71], "chang": 69, "point": [69, 70], "some": 69, "simpl": 69, "multipl": 69, "dimension": 69, "multi": [69, 73], "activ": 69, "dimens": 69, "larg": 70, "pick": 70, "initi": [70, 73], "induc": 70, "random": 70, "sampl": 70, "k": 70, "mean": [70, 71, 75], "uncorrel": 70, "advanc": [70, 73, 85], "initialis": 70, "revers": 71, "set": [71, 73], "versu": 71, "compon": 72, "tensorboard": 72, "integr": 72, "Their": 73, "optimis": 73, "inspect": 73, "do": 73, "you": 73, "fail": 73, "fit": 73, "dataset": 73, "co_2": 73, "level": 73, "valu": [73, 74], "prior": 73, "transform": 73, "trainabl": 73, "train": 73, "stage": 73, "kera": 73, "save": 74, "load": 74, "checkpoint": 74, "tensorflow": 74, "saved_model": 74, "copi": 74, "hyper": 74, "between": 74, "gp_nn": 76, "kernel_design": 77, "mixture_density_network": 78, "fitcvsvf": 79, "sgpr_note": 80, "sanity_check": 81, "upper_bound": 83, "vgp_note": 84, "user": 85, "guid": 85, "ar": 85, "implement": 85, "infer": 85, "interdomain": 85, "gp": 85, "theoret": 85, "tailor": 85, "need": 85}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"gpflow.base": [[0, "gpflow-base"]], "Classes": [[0, "classes"], [3, "classes"], [8, "classes"], [9, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [17, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [27, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [40, "classes"], [41, "classes"], [43, "classes"], [45, "classes"]], "gpflow.base.PriorOn": [[0, "gpflow-base-prioron"]], "gpflow.conditionals": [[1, "gpflow-conditionals"]], "Modules": [[1, "modules"], [5, "modules"], [14, "modules"], [18, "modules"], [21, "modules"], [22, "modules"], [25, "modules"], [27, "modules"], [32, "modules"], [38, "modules"], [43, "modules"], [45, "modules"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [6, "functions"], [7, "functions"], [10, "functions"], [11, "functions"], [14, "functions"], [15, "functions"], [16, "functions"], [19, "functions"], [21, "functions"], [23, "functions"], [26, "functions"], [28, "functions"], [29, "functions"], [30, "functions"], [32, "functions"], [35, "functions"], [36, "functions"], [39, "functions"], [40, "functions"], [41, "functions"], [42, "functions"], [43, "functions"], [44, "functions"], [45, "functions"], [46, "functions"], [47, "functions"]], "gpflow.conditionals.base_conditional": [[1, "gpflow-conditionals-base-conditional"]], "gpflow.conditionals.conditional": [[1, "gpflow-conditionals-conditional"]], "gpflow.conditionals.sample_conditional": [[1, "gpflow-conditionals-sample-conditional"]], "gpflow.conditionals.uncertain_conditional": [[1, "gpflow-conditionals-uncertain-conditional"]], "gpflow.conditionals.util": [[2, "gpflow-conditionals-util"]], "gpflow.conditionals.util.base_conditional_with_lm": [[2, "gpflow-conditionals-util-base-conditional-with-lm"]], "gpflow.conditionals.util.expand_independent_outputs": [[2, "gpflow-conditionals-util-expand-independent-outputs"]], "gpflow.conditionals.util.fully_correlated_conditional": [[2, "gpflow-conditionals-util-fully-correlated-conditional"]], "gpflow.conditionals.util.fully_correlated_conditional_repeat": [[2, "gpflow-conditionals-util-fully-correlated-conditional-repeat"]], "gpflow.conditionals.util.independent_interdomain_conditional": [[2, "gpflow-conditionals-util-independent-interdomain-conditional"]], "gpflow.conditionals.util.mix_latent_gp": [[2, "gpflow-conditionals-util-mix-latent-gp"]], "gpflow.conditionals.util.rollaxis_left": [[2, "gpflow-conditionals-util-rollaxis-left"]], "gpflow.conditionals.util.rollaxis_right": [[2, "gpflow-conditionals-util-rollaxis-right"]], "gpflow.conditionals.util.sample_mvn": [[2, "gpflow-conditionals-util-sample-mvn"]], "gpflow.conditionals.util.separate_independent_conditional_implementation": [[2, "gpflow-conditionals-util-separate-independent-conditional-implementation"]], "gpflow.config": [[3, "gpflow-config"]], "gpflow.config.Config": [[3, "gpflow-config-config"]], "gpflow.config.as_context": [[3, "gpflow-config-as-context"]], "gpflow.config.config": [[3, "id1"]], "gpflow.config.default_positive_bijector": [[3, "gpflow-config-default-positive-bijector"]], "gpflow.config.default_positive_minimum": [[3, "gpflow-config-default-positive-minimum"]], "gpflow.config.default_summary_fmt": [[3, "gpflow-config-default-summary-fmt"]], "gpflow.config.positive_bijector_type_map": [[3, "gpflow-config-positive-bijector-type-map"]], "gpflow.config.set_config": [[3, "gpflow-config-set-config"]], "gpflow.config.set_default_float": [[3, "gpflow-config-set-default-float"]], "gpflow.config.set_default_int": [[3, "gpflow-config-set-default-int"]], "gpflow.config.set_default_jitter": [[3, "gpflow-config-set-default-jitter"]], "gpflow.config.set_default_positive_bijector": [[3, "gpflow-config-set-default-positive-bijector"]], "gpflow.config.set_default_positive_minimum": [[3, "gpflow-config-set-default-positive-minimum"]], "gpflow.config.set_default_summary_fmt": [[3, "gpflow-config-set-default-summary-fmt"]], "gpflow.covariances": [[4, "gpflow-covariances"]], "gpflow.covariances.Kuf": [[4, "gpflow-covariances-kuf"]], "gpflow.covariances.Kuu": [[4, "gpflow-covariances-kuu"]], "gpflow.expectations": [[5, "gpflow-expectations"]], "gpflow.expectations.expectation": [[5, "gpflow-expectations-expectation"]], "gpflow.expectations.quadrature_expectation": [[5, "gpflow-expectations-quadrature-expectation"]], "gpflow.expectations.quadratures": [[6, "gpflow-expectations-quadratures"]], "gpflow.expectations.quadratures.get_eval_func": [[6, "gpflow-expectations-quadratures-get-eval-func"]], "gpflow.experimental.check_shapes.accessors": [[7, "gpflow-experimental-check-shapes-accessors"]], "gpflow.experimental.check_shapes.accessors.maybe_get_check_shapes": [[7, "gpflow-experimental-check-shapes-accessors-maybe-get-check-shapes"]], "gpflow.experimental.check_shapes.accessors.set_check_shapes": [[7, "gpflow-experimental-check-shapes-accessors-set-check-shapes"]], "gpflow.experimental.check_shapes.argument_ref": [[8, "gpflow-experimental-check-shapes-argument-ref"]], "gpflow.experimental.check_shapes.argument_ref.AllElementsRef": [[8, "gpflow-experimental-check-shapes-argument-ref-allelementsref"]], "gpflow.experimental.check_shapes.argument_ref.ArgumentRef": [[8, "gpflow-experimental-check-shapes-argument-ref-argumentref"]], "gpflow.experimental.check_shapes.argument_ref.AttributeArgumentRef": [[8, "gpflow-experimental-check-shapes-argument-ref-attributeargumentref"]], "gpflow.experimental.check_shapes.argument_ref.DelegatingArgumentRef": [[8, "gpflow-experimental-check-shapes-argument-ref-delegatingargumentref"]], "gpflow.experimental.check_shapes.argument_ref.IndexArgumentRef": [[8, "gpflow-experimental-check-shapes-argument-ref-indexargumentref"]], "gpflow.experimental.check_shapes.argument_ref.KeysRef": [[8, "gpflow-experimental-check-shapes-argument-ref-keysref"]], "gpflow.experimental.check_shapes.argument_ref.RootArgumentRef": [[8, "gpflow-experimental-check-shapes-argument-ref-rootargumentref"]], "gpflow.experimental.check_shapes.argument_ref.ValuesRef": [[8, "gpflow-experimental-check-shapes-argument-ref-valuesref"]], "gpflow.experimental.check_shapes.bool_specs": [[9, "gpflow-experimental-check-shapes-bool-specs"]], "gpflow.experimental.check_shapes.bool_specs.BoolTest": [[9, "gpflow-experimental-check-shapes-bool-specs-booltest"]], "gpflow.experimental.check_shapes.bool_specs.ParsedAndBoolSpec": [[9, "gpflow-experimental-check-shapes-bool-specs-parsedandboolspec"]], "gpflow.experimental.check_shapes.bool_specs.ParsedArgumentRefBoolSpec": [[9, "gpflow-experimental-check-shapes-bool-specs-parsedargumentrefboolspec"]], "gpflow.experimental.check_shapes.bool_specs.ParsedBoolSpec": [[9, "gpflow-experimental-check-shapes-bool-specs-parsedboolspec"]], "gpflow.experimental.check_shapes.bool_specs.ParsedNotBoolSpec": [[9, "gpflow-experimental-check-shapes-bool-specs-parsednotboolspec"]], "gpflow.experimental.check_shapes.bool_specs.ParsedOrBoolSpec": [[9, "gpflow-experimental-check-shapes-bool-specs-parsedorboolspec"]], "gpflow.experimental.check_shapes.checker_context": [[10, "gpflow-experimental-check-shapes-checker-context"]], "gpflow.experimental.check_shapes.checker_context.set_shape_checker": [[10, "gpflow-experimental-check-shapes-checker-context-set-shape-checker"]], "gpflow.experimental.check_shapes.decorator": [[11, "gpflow-experimental-check-shapes-decorator"]], "gpflow.experimental.check_shapes.decorator.null_check_shapes": [[11, "gpflow-experimental-check-shapes-decorator-null-check-shapes"]], "gpflow.experimental.check_shapes.error_contexts": [[12, "gpflow-experimental-check-shapes-error-contexts"]], "gpflow.experimental.check_shapes.error_contexts.ArgumentContext": [[12, "gpflow-experimental-check-shapes-error-contexts-argumentcontext"]], "gpflow.experimental.check_shapes.error_contexts.AttributeContext": [[12, "gpflow-experimental-check-shapes-error-contexts-attributecontext"]], "gpflow.experimental.check_shapes.error_contexts.ConditionContext": [[12, "gpflow-experimental-check-shapes-error-contexts-conditioncontext"]], "gpflow.experimental.check_shapes.error_contexts.FunctionCallContext": [[12, "gpflow-experimental-check-shapes-error-contexts-functioncallcontext"]], "gpflow.experimental.check_shapes.error_contexts.FunctionDefinitionContext": [[12, "gpflow-experimental-check-shapes-error-contexts-functiondefinitioncontext"]], "gpflow.experimental.check_shapes.error_contexts.IndexContext": [[12, "gpflow-experimental-check-shapes-error-contexts-indexcontext"]], "gpflow.experimental.check_shapes.error_contexts.LarkUnexpectedInputContext": [[12, "gpflow-experimental-check-shapes-error-contexts-larkunexpectedinputcontext"]], "gpflow.experimental.check_shapes.error_contexts.MappingKeyContext": [[12, "gpflow-experimental-check-shapes-error-contexts-mappingkeycontext"]], "gpflow.experimental.check_shapes.error_contexts.MappingValueContext": [[12, "gpflow-experimental-check-shapes-error-contexts-mappingvaluecontext"]], "gpflow.experimental.check_shapes.error_contexts.MessageBuilder": [[12, "gpflow-experimental-check-shapes-error-contexts-messagebuilder"]], "gpflow.experimental.check_shapes.error_contexts.MultipleElementBoolContext": [[12, "gpflow-experimental-check-shapes-error-contexts-multipleelementboolcontext"]], "gpflow.experimental.check_shapes.error_contexts.NoteContext": [[12, "gpflow-experimental-check-shapes-error-contexts-notecontext"]], "gpflow.experimental.check_shapes.error_contexts.ObjectTypeContext": [[12, "gpflow-experimental-check-shapes-error-contexts-objecttypecontext"]], "gpflow.experimental.check_shapes.error_contexts.ObjectValueContext": [[12, "gpflow-experimental-check-shapes-error-contexts-objectvaluecontext"]], "gpflow.experimental.check_shapes.error_contexts.ParallelContext": [[12, "gpflow-experimental-check-shapes-error-contexts-parallelcontext"]], "gpflow.experimental.check_shapes.error_contexts.ParserInputContext": [[12, "gpflow-experimental-check-shapes-error-contexts-parserinputcontext"]], "gpflow.experimental.check_shapes.error_contexts.ShapeContext": [[12, "gpflow-experimental-check-shapes-error-contexts-shapecontext"]], "gpflow.experimental.check_shapes.error_contexts.StackContext": [[12, "gpflow-experimental-check-shapes-error-contexts-stackcontext"]], "gpflow.experimental.check_shapes.error_contexts.TensorSpecContext": [[12, "gpflow-experimental-check-shapes-error-contexts-tensorspeccontext"]], "gpflow.experimental.check_shapes.error_contexts.VariableContext": [[12, "gpflow-experimental-check-shapes-error-contexts-variablecontext"]], "gpflow.experimental.check_shapes.exceptions": [[13, "gpflow-experimental-check-shapes-exceptions"]], "gpflow.experimental.check_shapes.exceptions.ArgumentReferenceError": [[13, "gpflow-experimental-check-shapes-exceptions-argumentreferenceerror"]], "gpflow.experimental.check_shapes.exceptions.CheckShapesError": [[13, "gpflow-experimental-check-shapes-exceptions-checkshapeserror"]], "gpflow.experimental.check_shapes.exceptions.DocstringParseError": [[13, "gpflow-experimental-check-shapes-exceptions-docstringparseerror"]], "gpflow.experimental.check_shapes.exceptions.NoShapeError": [[13, "gpflow-experimental-check-shapes-exceptions-noshapeerror"]], "gpflow.experimental.check_shapes.exceptions.ShapeMismatchError": [[13, "gpflow-experimental-check-shapes-exceptions-shapemismatcherror"]], "gpflow.experimental.check_shapes.exceptions.SpecificationParseError": [[13, "gpflow-experimental-check-shapes-exceptions-specificationparseerror"]], "gpflow.experimental.check_shapes.exceptions.VariableTypeError": [[13, "gpflow-experimental-check-shapes-exceptions-variabletypeerror"]], "gpflow.experimental.check_shapes": [[14, "gpflow-experimental-check-shapes"]], "Speed, and interactions with tf.function": [[14, "speed-and-interactions-with-tf-function"]], "Best-effort checking": [[14, "best-effort-checking"]], "Check specification": [[14, "check-specification"]], "Argument specification": [[14, "argument-specification"]], "Shape specification": [[14, "shape-specification"]], "Condition specification": [[14, "condition-specification"]], "Note specification": [[14, "note-specification"]], "Shape reuse": [[14, "shape-reuse"]], "Class inheritance": [[14, "class-inheritance"]], "Functional programming": [[14, "functional-programming"]], "Other reuse of shapes": [[14, "other-reuse-of-shapes"]], "Checking intermediate results": [[14, "checking-intermediate-results"]], "Checking shapes without a decorator": [[14, "checking-shapes-without-a-decorator"]], "Documenting shapes": [[14, "documenting-shapes"]], "Supported types": [[14, "supported-types"]], "Shapes of custom types": [[14, "shapes-of-custom-types"]], "gpflow.experimental.check_shapes.DocstringFormat": [[14, "gpflow-experimental-check-shapes-docstringformat"]], "gpflow.experimental.check_shapes.ErrorContext": [[14, "gpflow-experimental-check-shapes-errorcontext"]], "gpflow.experimental.check_shapes.ShapeChecker": [[14, "gpflow-experimental-check-shapes-shapechecker"]], "gpflow.experimental.check_shapes.ShapeCheckingState": [[14, "gpflow-experimental-check-shapes-shapecheckingstate"]], "gpflow.experimental.check_shapes.check_shape": [[14, "gpflow-experimental-check-shapes-check-shape"]], "gpflow.experimental.check_shapes.check_shapes": [[14, "gpflow-experimental-check-shapes-check-shapes"]], "gpflow.experimental.check_shapes.disable_check_shapes": [[14, "gpflow-experimental-check-shapes-disable-check-shapes"]], "gpflow.experimental.check_shapes.get_check_shapes": [[14, "gpflow-experimental-check-shapes-get-check-shapes"]], "gpflow.experimental.check_shapes.get_enable_check_shapes": [[14, "gpflow-experimental-check-shapes-get-enable-check-shapes"]], "gpflow.experimental.check_shapes.get_enable_function_call_precompute": [[14, "gpflow-experimental-check-shapes-get-enable-function-call-precompute"]], "gpflow.experimental.check_shapes.get_rewrite_docstrings": [[14, "gpflow-experimental-check-shapes-get-rewrite-docstrings"]], "gpflow.experimental.check_shapes.get_shape": [[14, "gpflow-experimental-check-shapes-get-shape"]], "gpflow.experimental.check_shapes.get_shape_checker": [[14, "gpflow-experimental-check-shapes-get-shape-checker"]], "gpflow.experimental.check_shapes.inherit_check_shapes": [[14, "gpflow-experimental-check-shapes-inherit-check-shapes"]], "gpflow.experimental.check_shapes.register_get_shape": [[14, "gpflow-experimental-check-shapes-register-get-shape"]], "gpflow.experimental.check_shapes.set_enable_check_shapes": [[14, "gpflow-experimental-check-shapes-set-enable-check-shapes"]], "gpflow.experimental.check_shapes.set_enable_function_call_precompute": [[14, "gpflow-experimental-check-shapes-set-enable-function-call-precompute"]], "gpflow.experimental.check_shapes.set_rewrite_docstrings": [[14, "gpflow-experimental-check-shapes-set-rewrite-docstrings"]], "gpflow.experimental.check_shapes.parser": [[15, "gpflow-experimental-check-shapes-parser"]], "gpflow.experimental.check_shapes.parser.parse_and_rewrite_docstring": [[15, "gpflow-experimental-check-shapes-parser-parse-and-rewrite-docstring"]], "gpflow.experimental.check_shapes.parser.parse_function_spec": [[15, "gpflow-experimental-check-shapes-parser-parse-function-spec"]], "gpflow.experimental.check_shapes.parser.parse_tensor_spec": [[15, "gpflow-experimental-check-shapes-parser-parse-tensor-spec"]], "gpflow.experimental.check_shapes.shapes": [[16, "gpflow-experimental-check-shapes-shapes"]], "gpflow.experimental.check_shapes.shapes.get_ndarray_shape": [[16, "gpflow-experimental-check-shapes-shapes-get-ndarray-shape"]], "gpflow.experimental.check_shapes.shapes.get_scalar_shape": [[16, "gpflow-experimental-check-shapes-shapes-get-scalar-shape"]], "gpflow.experimental.check_shapes.shapes.get_sequence_shape": [[16, "gpflow-experimental-check-shapes-shapes-get-sequence-shape"]], "gpflow.experimental.check_shapes.shapes.get_tensorflow_shape": [[16, "gpflow-experimental-check-shapes-shapes-get-tensorflow-shape"]], "gpflow.experimental.check_shapes.specs": [[17, "gpflow-experimental-check-shapes-specs"]], "gpflow.experimental.check_shapes.specs.ParsedArgumentSpec": [[17, "gpflow-experimental-check-shapes-specs-parsedargumentspec"]], "gpflow.experimental.check_shapes.specs.ParsedDimensionSpec": [[17, "gpflow-experimental-check-shapes-specs-parseddimensionspec"]], "gpflow.experimental.check_shapes.specs.ParsedFunctionSpec": [[17, "gpflow-experimental-check-shapes-specs-parsedfunctionspec"]], "gpflow.experimental.check_shapes.specs.ParsedNoteSpec": [[17, "gpflow-experimental-check-shapes-specs-parsednotespec"]], "gpflow.experimental.check_shapes.specs.ParsedShapeSpec": [[17, "gpflow-experimental-check-shapes-specs-parsedshapespec"]], "gpflow.experimental.check_shapes.specs.ParsedTensorSpec": [[17, "gpflow-experimental-check-shapes-specs-parsedtensorspec"]], "gpflow.experimental": [[18, "gpflow-experimental"]], "gpflow.experimental.utils": [[19, "gpflow-experimental-utils"]], "gpflow.experimental.utils.experimental": [[19, "gpflow-experimental-utils-experimental"]], "gpflow.functions": [[20, "gpflow-functions"]], "gpflow.functions.Additive": [[20, "gpflow-functions-additive"]], "gpflow.functions.Constant": [[20, "gpflow-functions-constant"]], "gpflow.functions.Function": [[20, "gpflow-functions-function"]], "gpflow.functions.Identity": [[20, "gpflow-functions-identity"]], "gpflow.functions.Linear": [[20, "gpflow-functions-linear"]], "gpflow.functions.MeanFunction": [[20, "gpflow-functions-meanfunction"]], "gpflow.functions.Polynomial": [[20, "gpflow-functions-polynomial"]], "gpflow.functions.Product": [[20, "gpflow-functions-product"]], "gpflow.functions.SwitchedFunction": [[20, "gpflow-functions-switchedfunction"]], "gpflow.functions.SwitchedMeanFunction": [[20, "gpflow-functions-switchedmeanfunction"]], "gpflow.functions.Zero": [[20, "gpflow-functions-zero"]], "gpflow": [[21, "gpflow"]], "gpflow.Module": [[21, "gpflow-module"]], "gpflow.Parameter": [[21, "gpflow-parameter"]], "gpflow.default_float": [[21, "gpflow-default-float"]], "gpflow.default_int": [[21, "gpflow-default-int"]], "gpflow.default_jitter": [[21, "gpflow-default-jitter"]], "gpflow.set_trainable": [[21, "gpflow-set-trainable"]], "gpflow.inducing_variables": [[22, "gpflow-inducing-variables"]], "gpflow.inducing_variables.FallbackSeparateIndependentInducingVariables": [[22, "gpflow-inducing-variables-fallbackseparateindependentinducingvariables"]], "gpflow.inducing_variables.FallbackSharedIndependentInducingVariables": [[22, "gpflow-inducing-variables-fallbacksharedindependentinducingvariables"]], "gpflow.inducing_variables.InducingPatches": [[22, "gpflow-inducing-variables-inducingpatches"]], "gpflow.inducing_variables.InducingPoints": [[22, "gpflow-inducing-variables-inducingpoints"]], "gpflow.inducing_variables.InducingVariables": [[22, "gpflow-inducing-variables-inducingvariables"]], "gpflow.inducing_variables.MultioutputInducingVariables": [[22, "gpflow-inducing-variables-multioutputinducingvariables"]], "gpflow.inducing_variables.Multiscale": [[22, "gpflow-inducing-variables-multiscale"]], "gpflow.inducing_variables.SeparateIndependentInducingVariables": [[22, "gpflow-inducing-variables-separateindependentinducingvariables"]], "gpflow.inducing_variables.SharedIndependentInducingVariables": [[22, "gpflow-inducing-variables-sharedindependentinducingvariables"]], "gpflow.inducing_variables.inducing_variables": [[23, "gpflow-inducing-variables-inducing-variables"]], "gpflow.inducing_variables.inducing_variables.InducingPointsBase": [[23, "gpflow-inducing-variables-inducing-variables-inducingpointsbase"]], "gpflow.inducing_variables.inducing_variables.get_scalar_shape": [[23, "gpflow-inducing-variables-inducing-variables-get-scalar-shape"]], "gpflow.kernels.base": [[24, "gpflow-kernels-base"]], "gpflow.kernels.base.ReducingCombination": [[24, "gpflow-kernels-base-reducingcombination"]], "gpflow.kernels": [[25, "gpflow-kernels"]], "gpflow.kernels.AnisotropicStationary": [[25, "gpflow-kernels-anisotropicstationary"]], "gpflow.kernels.ArcCosine": [[25, "gpflow-kernels-arccosine"]], "gpflow.kernels.Bias": [[25, "gpflow-kernels-bias"]], "gpflow.kernels.ChangePoints": [[25, "gpflow-kernels-changepoints"]], "gpflow.kernels.Combination": [[25, "gpflow-kernels-combination"]], "gpflow.kernels.Convolutional": [[25, "gpflow-kernels-convolutional"]], "gpflow.kernels.Coregion": [[25, "gpflow-kernels-coregion"]], "gpflow.kernels.Cosine": [[25, "gpflow-kernels-cosine"]], "gpflow.kernels.Exponential": [[25, "gpflow-kernels-exponential"]], "gpflow.kernels.IndependentLatent": [[25, "gpflow-kernels-independentlatent"]], "gpflow.kernels.IsotropicStationary": [[25, "gpflow-kernels-isotropicstationary"]], "gpflow.kernels.Kernel": [[25, "gpflow-kernels-kernel"]], "gpflow.kernels.Linear": [[25, "gpflow-kernels-linear"]], "gpflow.kernels.LinearCoregionalization": [[25, "gpflow-kernels-linearcoregionalization"]], "gpflow.kernels.Matern12": [[25, "gpflow-kernels-matern12"]], "gpflow.kernels.Matern32": [[25, "gpflow-kernels-matern32"]], "gpflow.kernels.Matern52": [[25, "gpflow-kernels-matern52"]], "gpflow.kernels.MultioutputKernel": [[25, "gpflow-kernels-multioutputkernel"]], "gpflow.kernels.Periodic": [[25, "gpflow-kernels-periodic"]], "gpflow.kernels.Polynomial": [[25, "gpflow-kernels-polynomial"]], "gpflow.kernels.Product": [[25, "gpflow-kernels-product"]], "gpflow.kernels.RBF": [[25, "gpflow-kernels-rbf"]], "gpflow.kernels.RationalQuadratic": [[25, "gpflow-kernels-rationalquadratic"]], "gpflow.kernels.SeparateIndependent": [[25, "gpflow-kernels-separateindependent"]], "gpflow.kernels.SharedIndependent": [[25, "gpflow-kernels-sharedindependent"]], "gpflow.kernels.Static": [[25, "gpflow-kernels-static"]], "gpflow.kernels.Stationary": [[25, "gpflow-kernels-stationary"]], "gpflow.kernels.Sum": [[25, "gpflow-kernels-sum"]], "gpflow.kernels.White": [[25, "gpflow-kernels-white"]], "gpflow.kullback_leiblers": [[26, "gpflow-kullback-leiblers"]], "gpflow.kullback_leiblers.gauss_kl": [[26, "gpflow-kullback-leiblers-gauss-kl"]], "gpflow.kullback_leiblers.prior_kl": [[26, "gpflow-kullback-leiblers-prior-kl"]], "gpflow.likelihoods": [[27, "gpflow-likelihoods"]], "Creating new likelihoods": [[27, "creating-new-likelihoods"]], "gpflow.likelihoods.Bernoulli": [[27, "gpflow-likelihoods-bernoulli"]], "gpflow.likelihoods.Beta": [[27, "gpflow-likelihoods-beta"]], "gpflow.likelihoods.Exponential": [[27, "gpflow-likelihoods-exponential"]], "gpflow.likelihoods.Gamma": [[27, "gpflow-likelihoods-gamma"]], "gpflow.likelihoods.Gaussian": [[27, "gpflow-likelihoods-gaussian"]], "gpflow.likelihoods.GaussianMC": [[27, "gpflow-likelihoods-gaussianmc"]], "gpflow.likelihoods.HeteroskedasticTFPConditional": [[27, "gpflow-likelihoods-heteroskedastictfpconditional"]], "gpflow.likelihoods.Likelihood": [[27, "gpflow-likelihoods-likelihood"]], "gpflow.likelihoods.MonteCarloLikelihood": [[27, "gpflow-likelihoods-montecarlolikelihood"]], "gpflow.likelihoods.MultiClass": [[27, "gpflow-likelihoods-multiclass"]], "gpflow.likelihoods.MultiLatentLikelihood": [[27, "gpflow-likelihoods-multilatentlikelihood"]], "gpflow.likelihoods.MultiLatentTFPConditional": [[27, "gpflow-likelihoods-multilatenttfpconditional"]], "gpflow.likelihoods.Ordinal": [[27, "gpflow-likelihoods-ordinal"]], "gpflow.likelihoods.Poisson": [[27, "gpflow-likelihoods-poisson"]], "gpflow.likelihoods.QuadratureLikelihood": [[27, "gpflow-likelihoods-quadraturelikelihood"]], "gpflow.likelihoods.RobustMax": [[27, "gpflow-likelihoods-robustmax"]], "gpflow.likelihoods.ScalarLikelihood": [[27, "gpflow-likelihoods-scalarlikelihood"]], "gpflow.likelihoods.Softmax": [[27, "gpflow-likelihoods-softmax"]], "gpflow.likelihoods.StudentT": [[27, "gpflow-likelihoods-studentt"]], "gpflow.likelihoods.SwitchedLikelihood": [[27, "gpflow-likelihoods-switchedlikelihood"]], "gpflow.likelihoods.utils": [[28, "gpflow-likelihoods-utils"]], "gpflow.likelihoods.utils.inv_probit": [[28, "gpflow-likelihoods-utils-inv-probit"]], "gpflow.logdensities": [[29, "gpflow-logdensities"]], "gpflow.logdensities.bernoulli": [[29, "gpflow-logdensities-bernoulli"]], "gpflow.logdensities.beta": [[29, "gpflow-logdensities-beta"]], "gpflow.logdensities.exponential": [[29, "gpflow-logdensities-exponential"]], "gpflow.logdensities.gamma": [[29, "gpflow-logdensities-gamma"]], "gpflow.logdensities.gaussian": [[29, "gpflow-logdensities-gaussian"]], "gpflow.logdensities.laplace": [[29, "gpflow-logdensities-laplace"]], "gpflow.logdensities.lognormal": [[29, "gpflow-logdensities-lognormal"]], "gpflow.logdensities.multivariate_normal": [[29, "gpflow-logdensities-multivariate-normal"]], "gpflow.logdensities.poisson": [[29, "gpflow-logdensities-poisson"]], "gpflow.logdensities.student_t": [[29, "gpflow-logdensities-student-t"]], "gpflow.models.cglb": [[30, "gpflow-models-cglb"]], "gpflow.models.cglb.NystromPreconditioner": [[30, "gpflow-models-cglb-nystrompreconditioner"]], "gpflow.models.cglb.cglb_conjugate_gradient": [[30, "gpflow-models-cglb-cglb-conjugate-gradient"]], "gpflow.models.gpr": [[31, "gpflow-models-gpr"]], "gpflow.models.gpr.GPR_deprecated": [[31, "gpflow-models-gpr-gpr-deprecated"]], "gpflow.models.gpr.GPR_with_posterior": [[31, "gpflow-models-gpr-gpr-with-posterior"]], "gpflow.models": [[32, "gpflow-models"]], "gpflow.models.BayesianGPLVM": [[32, "gpflow-models-bayesiangplvm"]], "gpflow.models.BayesianModel": [[32, "gpflow-models-bayesianmodel"]], "gpflow.models.CGLB": [[32, "gpflow-models-cglb"]], "gpflow.models.ExternalDataTrainingLossMixin": [[32, "gpflow-models-externaldatatraininglossmixin"]], "gpflow.models.GPLVM": [[32, "gpflow-models-gplvm"]], "gpflow.models.GPMC": [[32, "gpflow-models-gpmc"]], "gpflow.models.GPModel": [[32, "gpflow-models-gpmodel"]], "gpflow.models.GPR": [[32, "gpflow-models-gpr"]], "gpflow.models.GPRFITC": [[32, "gpflow-models-gprfitc"]], "gpflow.models.InternalDataTrainingLossMixin": [[32, "gpflow-models-internaldatatraininglossmixin"]], "gpflow.models.SGPMC": [[32, "gpflow-models-sgpmc"]], "gpflow.models.SGPR": [[32, "gpflow-models-sgpr"]], "gpflow.models.SVGP": [[32, "gpflow-models-svgp"]], "gpflow.models.VGP": [[32, "gpflow-models-vgp"]], "gpflow.models.VGPOpperArchambeau": [[32, "gpflow-models-vgpopperarchambeau"]], "gpflow.models.maximum_log_likelihood_objective": [[32, "gpflow-models-maximum-log-likelihood-objective"]], "gpflow.models.training_loss": [[32, "gpflow-models-training-loss"]], "gpflow.models.training_loss_closure": [[32, "gpflow-models-training-loss-closure"]], "gpflow.models.sgpr": [[33, "gpflow-models-sgpr"]], "gpflow.models.sgpr.SGPRBase_deprecated": [[33, "gpflow-models-sgpr-sgprbase-deprecated"]], "gpflow.models.sgpr.SGPR_deprecated": [[33, "gpflow-models-sgpr-sgpr-deprecated"]], "gpflow.models.sgpr.SGPR_with_posterior": [[33, "gpflow-models-sgpr-sgpr-with-posterior"]], "gpflow.models.svgp": [[34, "gpflow-models-svgp"]], "gpflow.models.svgp.SVGP_deprecated": [[34, "gpflow-models-svgp-svgp-deprecated"]], "gpflow.models.svgp.SVGP_with_posterior": [[34, "gpflow-models-svgp-svgp-with-posterior"]], "gpflow.models.util": [[35, "gpflow-models-util"]], "gpflow.models.util.data_input_to_tensor": [[35, "gpflow-models-util-data-input-to-tensor"]], "gpflow.models.util.inducingpoint_wrapper": [[35, "gpflow-models-util-inducingpoint-wrapper"]], "gpflow.models.vgp": [[36, "gpflow-models-vgp"]], "gpflow.models.vgp.VGP_deprecated": [[36, "gpflow-models-vgp-vgp-deprecated"]], "gpflow.models.vgp.VGP_with_posterior": [[36, "gpflow-models-vgp-vgp-with-posterior"]], "gpflow.models.vgp.update_vgp_data": [[36, "gpflow-models-vgp-update-vgp-data"]], "gpflow.monitor": [[37, "gpflow-monitor"]], "gpflow.monitor.ExecuteCallback": [[37, "gpflow-monitor-executecallback"]], "gpflow.monitor.ImageToTensorBoard": [[37, "gpflow-monitor-imagetotensorboard"]], "gpflow.monitor.ModelToTensorBoard": [[37, "gpflow-monitor-modeltotensorboard"]], "gpflow.monitor.Monitor": [[37, "gpflow-monitor-monitor"]], "gpflow.monitor.MonitorTask": [[37, "gpflow-monitor-monitortask"]], "gpflow.monitor.MonitorTaskGroup": [[37, "gpflow-monitor-monitortaskgroup"]], "gpflow.monitor.ScalarToTensorBoard": [[37, "gpflow-monitor-scalartotensorboard"]], "gpflow.monitor.ToTensorBoard": [[37, "gpflow-monitor-totensorboard"]], "gpflow.optimizers": [[38, "gpflow-optimizers"]], "gpflow.optimizers.NaturalGradient": [[38, "gpflow-optimizers-naturalgradient"]], "gpflow.optimizers.SamplingHelper": [[38, "gpflow-optimizers-samplinghelper"]], "gpflow.optimizers.Scipy": [[38, "gpflow-optimizers-scipy"]], "gpflow.optimizers.XiNat": [[38, "gpflow-optimizers-xinat"]], "gpflow.optimizers.XiSqrtMeanVar": [[38, "gpflow-optimizers-xisqrtmeanvar"]], "gpflow.optimizers.XiTransform": [[38, "gpflow-optimizers-xitransform"]], "gpflow.optimizers.natgrad": [[39, "gpflow-optimizers-natgrad"]], "gpflow.optimizers.natgrad.expectation_to_meanvarsqrt": [[39, "gpflow-optimizers-natgrad-expectation-to-meanvarsqrt"]], "gpflow.optimizers.natgrad.expectation_to_natural": [[39, "gpflow-optimizers-natgrad-expectation-to-natural"]], "gpflow.optimizers.natgrad.meanvarsqrt_to_expectation": [[39, "gpflow-optimizers-natgrad-meanvarsqrt-to-expectation"]], "gpflow.optimizers.natgrad.meanvarsqrt_to_natural": [[39, "gpflow-optimizers-natgrad-meanvarsqrt-to-natural"]], "gpflow.optimizers.natgrad.natural_to_expectation": [[39, "gpflow-optimizers-natgrad-natural-to-expectation"]], "gpflow.optimizers.natgrad.natural_to_meanvarsqrt": [[39, "gpflow-optimizers-natgrad-natural-to-meanvarsqrt"]], "gpflow.optimizers.natgrad.swap_dimensions": [[39, "gpflow-optimizers-natgrad-swap-dimensions"]], "gpflow.posteriors": [[40, "gpflow-posteriors"]], "gpflow.posteriors.AbstractPosterior": [[40, "gpflow-posteriors-abstractposterior"]], "gpflow.posteriors.BasePosterior": [[40, "gpflow-posteriors-baseposterior"]], "gpflow.posteriors.FallbackIndependentLatentPosterior": [[40, "gpflow-posteriors-fallbackindependentlatentposterior"]], "gpflow.posteriors.FullyCorrelatedPosterior": [[40, "gpflow-posteriors-fullycorrelatedposterior"]], "gpflow.posteriors.GPRPosterior": [[40, "gpflow-posteriors-gprposterior"]], "gpflow.posteriors.IndependentPosterior": [[40, "gpflow-posteriors-independentposterior"]], "gpflow.posteriors.IndependentPosteriorMultiOutput": [[40, "gpflow-posteriors-independentposteriormultioutput"]], "gpflow.posteriors.IndependentPosteriorSingleOutput": [[40, "gpflow-posteriors-independentposteriorsingleoutput"]], "gpflow.posteriors.LinearCoregionalizationPosterior": [[40, "gpflow-posteriors-linearcoregionalizationposterior"]], "gpflow.posteriors.PrecomputeCacheType": [[40, "gpflow-posteriors-precomputecachetype"]], "gpflow.posteriors.PrecomputedValue": [[40, "gpflow-posteriors-precomputedvalue"]], "gpflow.posteriors.SGPRPosterior": [[40, "gpflow-posteriors-sgprposterior"]], "gpflow.posteriors.VGPPosterior": [[40, "gpflow-posteriors-vgpposterior"]], "gpflow.posteriors.create_posterior": [[40, "gpflow-posteriors-create-posterior"]], "gpflow.posteriors.get_posterior_class": [[40, "gpflow-posteriors-get-posterior-class"]], "gpflow.posteriors.get_precomputed_value_shape": [[40, "gpflow-posteriors-get-precomputed-value-shape"]], "gpflow.probability_distributions": [[41, "gpflow-probability-distributions"]], "gpflow.probability_distributions.DiagonalGaussian": [[41, "gpflow-probability-distributions-diagonalgaussian"]], "gpflow.probability_distributions.Gaussian": [[41, "gpflow-probability-distributions-gaussian"]], "gpflow.probability_distributions.MarkovGaussian": [[41, "gpflow-probability-distributions-markovgaussian"]], "gpflow.probability_distributions.ProbabilityDistribution": [[41, "gpflow-probability-distributions-probabilitydistribution"]], "gpflow.probability_distributions.get_probability_distribution_shape": [[41, "gpflow-probability-distributions-get-probability-distribution-shape"]], "gpflow.quadrature.gauss_hermite": [[42, "gpflow-quadrature-gauss-hermite"]], "gpflow.quadrature.gauss_hermite.gh_points_and_weights": [[42, "gpflow-quadrature-gauss-hermite-gh-points-and-weights"]], "gpflow.quadrature.gauss_hermite.list_to_flat_grid": [[42, "gpflow-quadrature-gauss-hermite-list-to-flat-grid"]], "gpflow.quadrature.gauss_hermite.ndgh_points_and_weights": [[42, "gpflow-quadrature-gauss-hermite-ndgh-points-and-weights"]], "gpflow.quadrature.gauss_hermite.repeat_as_list": [[42, "gpflow-quadrature-gauss-hermite-repeat-as-list"]], "gpflow.quadrature.gauss_hermite.reshape_Z_dZ": [[42, "gpflow-quadrature-gauss-hermite-reshape-z-dz"]], "gpflow.quadrature": [[43, "gpflow-quadrature"]], "gpflow.quadrature.GaussianQuadrature": [[43, "gpflow-quadrature-gaussianquadrature"]], "gpflow.quadrature.NDiagGHQuadrature": [[43, "gpflow-quadrature-ndiagghquadrature"]], "gpflow.quadrature.hermgauss": [[43, "gpflow-quadrature-hermgauss"]], "gpflow.quadrature.mvhermgauss": [[43, "gpflow-quadrature-mvhermgauss"]], "gpflow.quadrature.mvnquad": [[43, "gpflow-quadrature-mvnquad"]], "gpflow.quadrature.ndiag_mc": [[43, "gpflow-quadrature-ndiag-mc"]], "gpflow.quadrature.ndiagquad": [[43, "gpflow-quadrature-ndiagquad"]], "gpflow.type_flags": [[44, "gpflow-type-flags"]], "gpflow.type_flags.compute_mypy_flags": [[44, "gpflow-type-flags-compute-mypy-flags"]], "gpflow.utilities": [[45, "gpflow-utilities"]], "gpflow.utilities.Dispatcher": [[45, "gpflow-utilities-dispatcher"]], "gpflow.utilities.add_likelihood_noise_cov": [[45, "gpflow-utilities-add-likelihood-noise-cov"]], "gpflow.utilities.add_noise_cov": [[45, "gpflow-utilities-add-noise-cov"]], "gpflow.utilities.assert_params_false": [[45, "gpflow-utilities-assert-params-false"]], "gpflow.utilities.deepcopy": [[45, "gpflow-utilities-deepcopy"]], "gpflow.utilities.freeze": [[45, "gpflow-utilities-freeze"]], "gpflow.utilities.is_variable": [[45, "gpflow-utilities-is-variable"]], "gpflow.utilities.leaf_components": [[45, "gpflow-utilities-leaf-components"]], "gpflow.utilities.multiple_assign": [[45, "gpflow-utilities-multiple-assign"]], "gpflow.utilities.parameter_dict": [[45, "gpflow-utilities-parameter-dict"]], "gpflow.utilities.positive": [[45, "gpflow-utilities-positive"]], "gpflow.utilities.print_summary": [[45, "gpflow-utilities-print-summary"]], "gpflow.utilities.read_values": [[45, "gpflow-utilities-read-values"]], "gpflow.utilities.reset_cache_bijectors": [[45, "gpflow-utilities-reset-cache-bijectors"]], "gpflow.utilities.select_dict_parameters_with_prior": [[45, "gpflow-utilities-select-dict-parameters-with-prior"]], "gpflow.utilities.tabulate_module_summary": [[45, "gpflow-utilities-tabulate-module-summary"]], "gpflow.utilities.to_default_float": [[45, "gpflow-utilities-to-default-float"]], "gpflow.utilities.to_default_int": [[45, "gpflow-utilities-to-default-int"]], "gpflow.utilities.training_loop": [[45, "gpflow-utilities-training-loop"]], "gpflow.utilities.traverse_module": [[45, "gpflow-utilities-traverse-module"]], "gpflow.utilities.triangular": [[45, "gpflow-utilities-triangular"]], "gpflow.utilities.triangular_size": [[45, "gpflow-utilities-triangular-size"]], "gpflow.utilities.ops": [[46, "gpflow-utilities-ops"]], "gpflow.utilities.ops.broadcasting_elementwise": [[46, "gpflow-utilities-ops-broadcasting-elementwise"]], "gpflow.utilities.ops.difference_matrix": [[46, "gpflow-utilities-ops-difference-matrix"]], "gpflow.utilities.ops.eye": [[46, "gpflow-utilities-ops-eye"]], "gpflow.utilities.ops.leading_transpose": [[46, "gpflow-utilities-ops-leading-transpose"]], "gpflow.utilities.ops.pca_reduce": [[46, "gpflow-utilities-ops-pca-reduce"]], "gpflow.utilities.ops.square_distance": [[46, "gpflow-utilities-ops-square-distance"]], "gpflow.utilities.parameter_or_function": [[47, "gpflow-utilities-parameter-or-function"]], "gpflow.utilities.parameter_or_function.evaluate_parameter_or_function": [[47, "gpflow-utilities-parameter-or-function-evaluate-parameter-or-function"]], "gpflow.utilities.parameter_or_function.prepare_parameter_or_function": [[47, "gpflow-utilities-parameter-or-function-prepare-parameter-or-function"]], "Benchmarks": [[48, "benchmarks"]], "Bibliography": [[49, "bibliography"]], "Getting Started": [[50, "getting-started"]], "GPflow": [[51, "gpflow"]], "Documentation": [[51, "documentation"]], "Contact": [[51, "contact"]], "Citing GPflow": [[51, "citing-gpflow"]], "Acknowledgements": [[51, "acknowledgements"]], "Installation": [[52, "installation"]], "Pre-built installation": [[52, "pre-built-installation"]], "Installation from source": [[52, "installation-from-source"]], "Versions": [[52, "versions"]], "Fake GPLVM.ipynb": [[53, "Fake-GPLVM.ipynb"]], "Fake changepoints.ipynb": [[54, "Fake-changepoints.ipynb"]], "Fake convolutional.ipynb": [[55, "Fake-convolutional.ipynb"]], "Fake coregionalisation.ipynb": [[56, "Fake-coregionalisation.ipynb"]], "Fake fast_predictions.ipynb": [[57, "Fake-fast_predictions.ipynb"]], "Fake gps_for_big_data.ipynb": [[58, "Fake-gps_for_big_data.ipynb"]], "Fake heteroskedastic.ipynb": [[59, "Fake-heteroskedastic.ipynb"]], "Fake mcmc.ipynb": [[60, "Fake-mcmc.ipynb"]], "Fake multiclass_classification.ipynb": [[61, "Fake-multiclass_classification.ipynb"]], "Fake multioutput.ipynb": [[62, "Fake-multioutput.ipynb"]], "Fake natural_gradients.ipynb": [[63, "Fake-natural_gradients.ipynb"]], "Fake ordinal_regression.ipynb": [[64, "Fake-ordinal_regression.ipynb"]], "Fake variational_fourier_features.ipynb": [[65, "Fake-variational_fourier_features.ipynb"]], "Fake varying_noise.ipynb": [[66, "Fake-varying_noise.ipynb"]], "Basic Usage": [[67, "Basic-Usage"]], "Imports": [[67, "Imports"]], "Meet f and Y": [[67, "Meet-f-and-Y"]], "Minimal model": [[67, "Minimal-model"]], "Plotting the model": [[67, "Plotting-the-model"]], "Marginal variance vs full covariance": [[67, "Marginal-variance-vs-full-covariance"]], "What\u2019s next?": [[67, "What\u2019s-next?"]], "Classification and other data distributions": [[68, "Classification-and-other-data-distributions"]], "The Variational Gaussion Process": [[68, "The-Variational-Gaussion-Process"]], "Non-gaussian regression": [[68, "Non-gaussian-regression"]], "Classification": [[68, "Classification"]], "The Sparse Variational Gaussian Process": [[68, "The-Sparse-Variational-Gaussian-Process"]], "Writing code that handles both internal and external data models": [[68, "Writing-code-that-handles-both-internal-and-external-data-models"]], "Kernels": [[69, "Kernels"]], "What is a kernel?": [[69, "What-is-a-kernel?"]], "Visualising a kernel": [[69, "Visualising-a-kernel"]], "The Mat\u00e9rn family": [[69, "The-Mat\u00e9rn-family"]], "Kernel parameters": [[69, "Kernel-parameters"]], "Kernel composition": [[69, "Kernel-composition"]], "Periodic": [[69, "Periodic"]], "Change-points": [[69, "Change-points"]], "Some other simple kernels": [[69, "Some-other-simple-kernels"]], "Addition and multiplication": [[69, "Addition-and-multiplication"]], "Multiple-dimensional data": [[69, "Multiple-dimensional-data"]], "Multi-dimensional parameters": [[69, "Multi-dimensional-parameters"]], "Active dimensions": [[69, "Active-dimensions"]], "Large Data": [[70, "Large-Data"]], "Picking initial inducing points": [[70, "Picking-initial-inducing-points"]], "Random data samples": [[70, "Random-data-samples"]], "k-means": [[70, "k-means"]], "Uncorrelated samples": [[70, "Uncorrelated-samples"]], "Advanced initialisation": [[70, "Advanced-initialisation"]], "Mean Functions": [[71, "Mean-Functions"]], "Mean reversion": [[71, "Mean-reversion"]], "Setting a mean function": [[71, "Setting-a-mean-function"]], "Interactions with the kernel": [[71, "Interactions-with-the-kernel"]], "Kernels versus mean functions": [[71, "Kernels-versus-mean-functions"]], "Custom mean functions": [[71, "Custom-mean-functions"]], "Composition": [[71, "Composition"]], "Monitoring": [[72, "Monitoring"]], "Components of monitoring": [[72, "Components-of-monitoring"]], "ExecuteCallback": [[72, "ExecuteCallback"]], "TensorBoard integration": [[72, "TensorBoard-integration"]], "Parameters and Their Optimisation": [[73, "Parameters-and-Their-Optimisation"]], "The Module and Parameter classes": [[73, "The-Module-and-Parameter-classes"]], "Inspecting parameters": [[73, "Inspecting-parameters"]], "Setting parameters": [[73, "Setting-parameters"]], "Optimisation": [[73, "Optimisation"]], "What to do if you model fails to fit": [[73, "What-to-do-if-you-model-fails-to-fit"]], "Dataset: CO_2 levels": [[73, "Dataset:-CO_2-levels"]], "Setting the initial value": [[73, "Setting-the-initial-value"]], "Priors": [[73, "Priors"]], "Transforms": [[73, "Transforms"]], "Trainable parameters": [[73, "Trainable-parameters"]], "Advanced training": [[73, "Advanced-training"]], "Multi-stage training": [[73, "Multi-stage-training"]], "The Keras optimisers": [[73, "The-Keras-optimisers"]], "Saving and Loading Models": [[74, "Saving-and-Loading-Models"]], "Checkpointing": [[74, "Checkpointing"]], "TensorFlow saved_model": [[74, "TensorFlow-saved_model"]], "Copying (hyper)parameter values between models": [[74, "Copying-(hyper)parameter-values-between-models"]], "Fake external-mean-function.ipynb": [[75, "Fake-external-mean-function.ipynb"]], "Fake gp_nn.ipynb": [[76, "Fake-gp_nn.ipynb"]], "Fake kernel_design.ipynb": [[77, "Fake-kernel_design.ipynb"]], "Fake mixture_density_network.ipynb": [[78, "Fake-mixture_density_network.ipynb"]], "Fake FITCvsVFE.ipynb": [[79, "Fake-FITCvsVFE.ipynb"]], "Fake SGPR_notes.ipynb": [[80, "Fake-SGPR_notes.ipynb"]], "Fake Sanity_check.ipynb": [[81, "Fake-Sanity_check.ipynb"]], "Fake cglb.ipynb": [[82, "Fake-cglb.ipynb"]], "Fake upper_bound.ipynb": [[83, "Fake-upper_bound.ipynb"]], "Fake vgp_notes.ipynb": [[84, "Fake-vgp_notes.ipynb"]], "User Guide": [[85, "user-guide"]], "What models are implemented?": [[85, "what-models-are-implemented"]], "Regression": [[85, "regression"]], "MCMC": [[85, "mcmc"]], "Variational inference": [[85, "variational-inference"]], "Interdomain inference and multioutput GPs": [[85, "interdomain-inference-and-multioutput-gps"]], "GPLVM": [[85, "gplvm"]], "Theoretical notes": [[85, "theoretical-notes"]], "Tailored models": [[85, "tailored-models"]], "Advanced needs": [[85, "advanced-needs"]]}, "indexentries": {"prioron (class in gpflow.base)": [[0, "gpflow.base.PriorOn"]], "gpflow.base": [[0, "module-gpflow.base"]], "module": [[0, "module-gpflow.base"], [1, "module-gpflow.conditionals"], [2, "module-gpflow.conditionals.util"], [3, "module-gpflow.config"], [4, "module-gpflow.covariances"], [5, "module-gpflow.expectations"], [6, "module-gpflow.expectations.quadratures"], [7, "module-gpflow.experimental.check_shapes.accessors"], [8, "module-gpflow.experimental.check_shapes.argument_ref"], [9, "module-gpflow.experimental.check_shapes.bool_specs"], [10, "module-gpflow.experimental.check_shapes.checker_context"], [11, "module-gpflow.experimental.check_shapes.decorator"], [12, "module-gpflow.experimental.check_shapes.error_contexts"], [13, "module-gpflow.experimental.check_shapes.exceptions"], [14, "module-gpflow.experimental.check_shapes"], [15, "module-gpflow.experimental.check_shapes.parser"], [16, "module-gpflow.experimental.check_shapes.shapes"], [17, "module-gpflow.experimental.check_shapes.specs"], [18, "module-gpflow.experimental"], [19, "module-gpflow.experimental.utils"], [20, "module-gpflow.functions"], [21, "module-gpflow"], [22, "module-gpflow.inducing_variables"], [23, "module-gpflow.inducing_variables.inducing_variables"], [24, "module-gpflow.kernels.base"], [25, "module-gpflow.kernels"], [26, "module-gpflow.kullback_leiblers"], [27, "module-gpflow.likelihoods"], [28, "module-gpflow.likelihoods.utils"], [29, "module-gpflow.logdensities"], [30, "module-gpflow.models.cglb"], [31, "module-gpflow.models.gpr"], [32, "module-gpflow.models"], [33, "module-gpflow.models.sgpr"], [34, "module-gpflow.models.svgp"], [35, "module-gpflow.models.util"], [36, "module-gpflow.models.vgp"], [37, "module-gpflow.monitor"], [38, "module-gpflow.optimizers"], [39, "module-gpflow.optimizers.natgrad"], [40, "module-gpflow.posteriors"], [41, "module-gpflow.probability_distributions"], [42, "module-gpflow.quadrature.gauss_hermite"], [43, "module-gpflow.quadrature"], [44, "module-gpflow.type_flags"], [45, "module-gpflow.utilities"], [46, "module-gpflow.utilities.ops"], [47, "module-gpflow.utilities.parameter_or_function"]], "_dense_conditional() (in module gpflow.conditionals.conditionals)": [[1, "gpflow.conditionals.conditionals._dense_conditional"]], "_sample_conditional() (in module gpflow.conditionals.multioutput.sample_conditionals)": [[1, "gpflow.conditionals.multioutput.sample_conditionals._sample_conditional"]], "_sample_conditional() (in module gpflow.conditionals.sample_conditionals)": [[1, "gpflow.conditionals.sample_conditionals._sample_conditional"]], "_sparse_conditional() (in module gpflow.conditionals.conditionals)": [[1, "gpflow.conditionals.conditionals._sparse_conditional"]], "base_conditional() (in module gpflow.conditionals)": [[1, "gpflow.conditionals.base_conditional"]], "coregionalization_conditional() (in module gpflow.conditionals.multioutput.conditionals)": [[1, "gpflow.conditionals.multioutput.conditionals.coregionalization_conditional"]], "fallback_independent_latent_conditional() (in module gpflow.conditionals.multioutput.conditionals)": [[1, "gpflow.conditionals.multioutput.conditionals.fallback_independent_latent_conditional"]], "gpflow.conditionals": [[1, "module-gpflow.conditionals"]], "inducing_point_conditional() (in module gpflow.conditionals.multioutput.conditionals)": [[1, "gpflow.conditionals.multioutput.conditionals.inducing_point_conditional"]], "separate_independent_conditional() (in module gpflow.conditionals.multioutput.conditionals)": [[1, "gpflow.conditionals.multioutput.conditionals.separate_independent_conditional"]], "shared_independent_conditional() (in module gpflow.conditionals.multioutput.conditionals)": [[1, "gpflow.conditionals.multioutput.conditionals.shared_independent_conditional"]], "uncertain_conditional() (in module gpflow.conditionals)": [[1, "gpflow.conditionals.uncertain_conditional"]], "base_conditional_with_lm() (in module gpflow.conditionals.util)": [[2, "gpflow.conditionals.util.base_conditional_with_lm"]], "expand_independent_outputs() (in module gpflow.conditionals.util)": [[2, "gpflow.conditionals.util.expand_independent_outputs"]], "fully_correlated_conditional() (in module gpflow.conditionals.util)": [[2, "gpflow.conditionals.util.fully_correlated_conditional"]], "fully_correlated_conditional_repeat() (in module gpflow.conditionals.util)": [[2, "gpflow.conditionals.util.fully_correlated_conditional_repeat"]], "gpflow.conditionals.util": [[2, "module-gpflow.conditionals.util"]], "independent_interdomain_conditional() (in module gpflow.conditionals.util)": [[2, "gpflow.conditionals.util.independent_interdomain_conditional"]], "mix_latent_gp() (in module gpflow.conditionals.util)": [[2, "gpflow.conditionals.util.mix_latent_gp"]], "rollaxis_left() (in module gpflow.conditionals.util)": [[2, "gpflow.conditionals.util.rollaxis_left"]], "rollaxis_right() (in module gpflow.conditionals.util)": [[2, "gpflow.conditionals.util.rollaxis_right"]], "sample_mvn() (in module gpflow.conditionals.util)": [[2, "gpflow.conditionals.util.sample_mvn"]], "separate_independent_conditional_implementation() (in module gpflow.conditionals.util)": [[2, "gpflow.conditionals.util.separate_independent_conditional_implementation"]], "config (class in gpflow.config)": [[3, "gpflow.config.Config"]], "as_context() (in module gpflow.config)": [[3, "gpflow.config.as_context"]], "config() (in module gpflow.config)": [[3, "gpflow.config.config"]], "default_positive_bijector() (in module gpflow.config)": [[3, "gpflow.config.default_positive_bijector"]], "default_positive_minimum() (in module gpflow.config)": [[3, "gpflow.config.default_positive_minimum"]], "default_summary_fmt() (in module gpflow.config)": [[3, "gpflow.config.default_summary_fmt"]], "float (gpflow.config.config attribute)": [[3, "gpflow.config.Config.float"]], "gpflow.config": [[3, "module-gpflow.config"]], "int (gpflow.config.config attribute)": [[3, "gpflow.config.Config.int"]], "jitter (gpflow.config.config attribute)": [[3, "gpflow.config.Config.jitter"]], "positive_bijector (gpflow.config.config attribute)": [[3, "gpflow.config.Config.positive_bijector"]], "positive_bijector_type_map() (in module gpflow.config)": [[3, "gpflow.config.positive_bijector_type_map"]], "positive_minimum (gpflow.config.config attribute)": [[3, "gpflow.config.Config.positive_minimum"]], "set_config() (in module gpflow.config)": [[3, "gpflow.config.set_config"]], "set_default_float() (in module gpflow.config)": [[3, "gpflow.config.set_default_float"]], "set_default_int() (in module gpflow.config)": [[3, "gpflow.config.set_default_int"]], "set_default_jitter() (in module gpflow.config)": [[3, "gpflow.config.set_default_jitter"]], "set_default_positive_bijector() (in module gpflow.config)": [[3, "gpflow.config.set_default_positive_bijector"]], "set_default_positive_minimum() (in module gpflow.config)": [[3, "gpflow.config.set_default_positive_minimum"]], "set_default_summary_fmt() (in module gpflow.config)": [[3, "gpflow.config.set_default_summary_fmt"]], "summary_fmt (gpflow.config.config attribute)": [[3, "gpflow.config.Config.summary_fmt"]], "kuf_conv_patch() (in module gpflow.covariances.kufs)": [[4, "gpflow.covariances.kufs.Kuf_conv_patch"]], "kuf_fallback_separate_linear_coregionalization() (in module gpflow.covariances.multioutput.kufs)": [[4, "gpflow.covariances.multioutput.kufs.Kuf_fallback_separate_linear_coregionalization"]], "kuf_fallback_shared_linear_coregionalization() (in module gpflow.covariances.multioutput.kufs)": [[4, "gpflow.covariances.multioutput.kufs.Kuf_fallback_shared_linear_coregionalization"]], "kuf_generic() (in module gpflow.covariances.multioutput.kufs)": [[4, "gpflow.covariances.multioutput.kufs.Kuf_generic"]], "kuf_kernel_inducingpoints() (in module gpflow.covariances.kufs)": [[4, "gpflow.covariances.kufs.Kuf_kernel_inducingpoints"]], "kuf_separate_linear_coregionalization() (in module gpflow.covariances.multioutput.kufs)": [[4, "gpflow.covariances.multioutput.kufs.Kuf_separate_linear_coregionalization"]], "kuf_separate_separate() (in module gpflow.covariances.multioutput.kufs)": [[4, "gpflow.covariances.multioutput.kufs.Kuf_separate_separate"]], "kuf_separate_shared() (in module gpflow.covariances.multioutput.kufs)": [[4, "gpflow.covariances.multioutput.kufs.Kuf_separate_shared"]], "kuf_shared_linear_coregionalization() (in module gpflow.covariances.multioutput.kufs)": [[4, "gpflow.covariances.multioutput.kufs.Kuf_shared_linear_coregionalization"]], "kuf_shared_separate() (in module gpflow.covariances.multioutput.kufs)": [[4, "gpflow.covariances.multioutput.kufs.Kuf_shared_separate"]], "kuf_shared_shared() (in module gpflow.covariances.multioutput.kufs)": [[4, "gpflow.covariances.multioutput.kufs.Kuf_shared_shared"]], "kuf_sqexp_multiscale() (in module gpflow.covariances.kufs)": [[4, "gpflow.covariances.kufs.Kuf_sqexp_multiscale"]], "kuu_conv_patch() (in module gpflow.covariances.kuus)": [[4, "gpflow.covariances.kuus.Kuu_conv_patch"]], "kuu_fallbace_separate() (in module gpflow.covariances.multioutput.kuus)": [[4, "gpflow.covariances.multioutput.kuus.Kuu_fallbace_separate"]], "kuu_fallback_separate_shared() (in module gpflow.covariances.multioutput.kuus)": [[4, "gpflow.covariances.multioutput.kuus.Kuu_fallback_separate_shared"]], "kuu_fallback_shared() (in module gpflow.covariances.multioutput.kuus)": [[4, "gpflow.covariances.multioutput.kuus.Kuu_fallback_shared"]], "kuu_generic() (in module gpflow.covariances.multioutput.kuus)": [[4, "gpflow.covariances.multioutput.kuus.Kuu_generic"]], "kuu_kernel_inducingpoints() (in module gpflow.covariances.kuus)": [[4, "gpflow.covariances.kuus.Kuu_kernel_inducingpoints"]], "kuu_shared_shared() (in module gpflow.covariances.multioutput.kuus)": [[4, "gpflow.covariances.multioutput.kuus.Kuu_shared_shared"]], "kuu_sqexp_multiscale() (in module gpflow.covariances.kuus)": [[4, "gpflow.covariances.kuus.Kuu_sqexp_multiscale"]], "gpflow.covariances": [[4, "module-gpflow.covariances"]], "expectation() (in module gpflow.expectations)": [[5, "gpflow.expectations.expectation"]], "gpflow.expectations": [[5, "module-gpflow.expectations"]], "quadrature_expectation() (in module gpflow.expectations)": [[5, "gpflow.expectations.quadrature_expectation"]], "get_eval_func() (in module gpflow.expectations.quadratures)": [[6, "gpflow.expectations.quadratures.get_eval_func"]], "gpflow.expectations.quadratures": [[6, "module-gpflow.expectations.quadratures"]], "gpflow.experimental.check_shapes.accessors": [[7, "module-gpflow.experimental.check_shapes.accessors"]], "maybe_get_check_shapes() (in module gpflow.experimental.check_shapes.accessors)": [[7, "gpflow.experimental.check_shapes.accessors.maybe_get_check_shapes"]], "set_check_shapes() (in module gpflow.experimental.check_shapes.accessors)": [[7, "gpflow.experimental.check_shapes.accessors.set_check_shapes"]], "allelementsref (class in gpflow.experimental.check_shapes.argument_ref)": [[8, "gpflow.experimental.check_shapes.argument_ref.AllElementsRef"]], "argumentref (class in gpflow.experimental.check_shapes.argument_ref)": [[8, "gpflow.experimental.check_shapes.argument_ref.ArgumentRef"]], "attributeargumentref (class in gpflow.experimental.check_shapes.argument_ref)": [[8, "gpflow.experimental.check_shapes.argument_ref.AttributeArgumentRef"]], "delegatingargumentref (class in gpflow.experimental.check_shapes.argument_ref)": [[8, "gpflow.experimental.check_shapes.argument_ref.DelegatingArgumentRef"]], "indexargumentref (class in gpflow.experimental.check_shapes.argument_ref)": [[8, "gpflow.experimental.check_shapes.argument_ref.IndexArgumentRef"]], "keysref (class in gpflow.experimental.check_shapes.argument_ref)": [[8, "gpflow.experimental.check_shapes.argument_ref.KeysRef"]], "rootargumentref (class in gpflow.experimental.check_shapes.argument_ref)": [[8, "gpflow.experimental.check_shapes.argument_ref.RootArgumentRef"]], "valuesref (class in gpflow.experimental.check_shapes.argument_ref)": [[8, "gpflow.experimental.check_shapes.argument_ref.ValuesRef"]], "get() (gpflow.experimental.check_shapes.argument_ref.argumentref method)": [[8, "gpflow.experimental.check_shapes.argument_ref.ArgumentRef.get"]], "get() (gpflow.experimental.check_shapes.argument_ref.delegatingargumentref method)": [[8, "gpflow.experimental.check_shapes.argument_ref.DelegatingArgumentRef.get"]], "get() (gpflow.experimental.check_shapes.argument_ref.rootargumentref method)": [[8, "gpflow.experimental.check_shapes.argument_ref.RootArgumentRef.get"]], "gpflow.experimental.check_shapes.argument_ref": [[8, "module-gpflow.experimental.check_shapes.argument_ref"]], "is_result (gpflow.experimental.check_shapes.argument_ref.argumentref property)": [[8, "gpflow.experimental.check_shapes.argument_ref.ArgumentRef.is_result"]], "is_result (gpflow.experimental.check_shapes.argument_ref.delegatingargumentref property)": [[8, "gpflow.experimental.check_shapes.argument_ref.DelegatingArgumentRef.is_result"]], "is_result (gpflow.experimental.check_shapes.argument_ref.rootargumentref property)": [[8, "gpflow.experimental.check_shapes.argument_ref.RootArgumentRef.is_result"]], "map_context() (gpflow.experimental.check_shapes.argument_ref.attributeargumentref method)": [[8, "gpflow.experimental.check_shapes.argument_ref.AttributeArgumentRef.map_context"]], "map_context() (gpflow.experimental.check_shapes.argument_ref.delegatingargumentref method)": [[8, "gpflow.experimental.check_shapes.argument_ref.DelegatingArgumentRef.map_context"]], "map_context() (gpflow.experimental.check_shapes.argument_ref.indexargumentref method)": [[8, "gpflow.experimental.check_shapes.argument_ref.IndexArgumentRef.map_context"]], "map_value() (gpflow.experimental.check_shapes.argument_ref.allelementsref method)": [[8, "gpflow.experimental.check_shapes.argument_ref.AllElementsRef.map_value"]], "map_value() (gpflow.experimental.check_shapes.argument_ref.attributeargumentref method)": [[8, "gpflow.experimental.check_shapes.argument_ref.AttributeArgumentRef.map_value"]], "map_value() (gpflow.experimental.check_shapes.argument_ref.delegatingargumentref method)": [[8, "gpflow.experimental.check_shapes.argument_ref.DelegatingArgumentRef.map_value"]], "map_value() (gpflow.experimental.check_shapes.argument_ref.indexargumentref method)": [[8, "gpflow.experimental.check_shapes.argument_ref.IndexArgumentRef.map_value"]], "map_value() (gpflow.experimental.check_shapes.argument_ref.keysref method)": [[8, "gpflow.experimental.check_shapes.argument_ref.KeysRef.map_value"]], "map_value() (gpflow.experimental.check_shapes.argument_ref.valuesref method)": [[8, "gpflow.experimental.check_shapes.argument_ref.ValuesRef.map_value"]], "root_argument_name (gpflow.experimental.check_shapes.argument_ref.argumentref property)": [[8, "gpflow.experimental.check_shapes.argument_ref.ArgumentRef.root_argument_name"]], "root_argument_name (gpflow.experimental.check_shapes.argument_ref.delegatingargumentref property)": [[8, "gpflow.experimental.check_shapes.argument_ref.DelegatingArgumentRef.root_argument_name"]], "root_argument_name (gpflow.experimental.check_shapes.argument_ref.rootargumentref property)": [[8, "gpflow.experimental.check_shapes.argument_ref.RootArgumentRef.root_argument_name"]], "booltest (class in gpflow.experimental.check_shapes.bool_specs)": [[9, "gpflow.experimental.check_shapes.bool_specs.BoolTest"]], "parsedandboolspec (class in gpflow.experimental.check_shapes.bool_specs)": [[9, "gpflow.experimental.check_shapes.bool_specs.ParsedAndBoolSpec"]], "parsedargumentrefboolspec (class in gpflow.experimental.check_shapes.bool_specs)": [[9, "gpflow.experimental.check_shapes.bool_specs.ParsedArgumentRefBoolSpec"]], "parsedboolspec (class in gpflow.experimental.check_shapes.bool_specs)": [[9, "gpflow.experimental.check_shapes.bool_specs.ParsedBoolSpec"]], "parsednotboolspec (class in gpflow.experimental.check_shapes.bool_specs)": [[9, "gpflow.experimental.check_shapes.bool_specs.ParsedNotBoolSpec"]], "parsedorboolspec (class in gpflow.experimental.check_shapes.bool_specs)": [[9, "gpflow.experimental.check_shapes.bool_specs.ParsedOrBoolSpec"]], "get() (gpflow.experimental.check_shapes.bool_specs.parsedandboolspec method)": [[9, "gpflow.experimental.check_shapes.bool_specs.ParsedAndBoolSpec.get"]], "get() (gpflow.experimental.check_shapes.bool_specs.parsedargumentrefboolspec method)": [[9, "gpflow.experimental.check_shapes.bool_specs.ParsedArgumentRefBoolSpec.get"]], "get() (gpflow.experimental.check_shapes.bool_specs.parsedboolspec method)": [[9, "gpflow.experimental.check_shapes.bool_specs.ParsedBoolSpec.get"]], "get() (gpflow.experimental.check_shapes.bool_specs.parsednotboolspec method)": [[9, "gpflow.experimental.check_shapes.bool_specs.ParsedNotBoolSpec.get"]], "get() (gpflow.experimental.check_shapes.bool_specs.parsedorboolspec method)": [[9, "gpflow.experimental.check_shapes.bool_specs.ParsedOrBoolSpec.get"]], "gpflow.experimental.check_shapes.bool_specs": [[9, "module-gpflow.experimental.check_shapes.bool_specs"]], "gpflow.experimental.check_shapes.checker_context": [[10, "module-gpflow.experimental.check_shapes.checker_context"]], "set_shape_checker() (in module gpflow.experimental.check_shapes.checker_context)": [[10, "gpflow.experimental.check_shapes.checker_context.set_shape_checker"]], "gpflow.experimental.check_shapes.decorator": [[11, "module-gpflow.experimental.check_shapes.decorator"]], "null_check_shapes() (in module gpflow.experimental.check_shapes.decorator)": [[11, "gpflow.experimental.check_shapes.decorator.null_check_shapes"]], "argumentcontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.ArgumentContext"]], "attributecontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.AttributeContext"]], "conditioncontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.ConditionContext"]], "functioncallcontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.FunctionCallContext"]], "functiondefinitioncontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.FunctionDefinitionContext"]], "indexcontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.IndexContext"]], "larkunexpectedinputcontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.LarkUnexpectedInputContext"]], "mappingkeycontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.MappingKeyContext"]], "mappingvaluecontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.MappingValueContext"]], "messagebuilder (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.MessageBuilder"]], "multipleelementboolcontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.MultipleElementBoolContext"]], "notecontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.NoteContext"]], "objecttypecontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.ObjectTypeContext"]], "objectvaluecontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.ObjectValueContext"]], "parallelcontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.ParallelContext"]], "parserinputcontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.ParserInputContext"]], "shapecontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.ShapeContext"]], "stackcontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.StackContext"]], "tensorspeccontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.TensorSpecContext"]], "variablecontext (class in gpflow.experimental.check_shapes.error_contexts)": [[12, "gpflow.experimental.check_shapes.error_contexts.VariableContext"]], "add_columned_line() (gpflow.experimental.check_shapes.error_contexts.messagebuilder method)": [[12, "gpflow.experimental.check_shapes.error_contexts.MessageBuilder.add_columned_line"]], "add_line() (gpflow.experimental.check_shapes.error_contexts.messagebuilder method)": [[12, "gpflow.experimental.check_shapes.error_contexts.MessageBuilder.add_line"]], "build() (gpflow.experimental.check_shapes.error_contexts.messagebuilder method)": [[12, "gpflow.experimental.check_shapes.error_contexts.MessageBuilder.build"]], "gpflow.experimental.check_shapes.error_contexts": [[12, "module-gpflow.experimental.check_shapes.error_contexts"]], "indent() (gpflow.experimental.check_shapes.error_contexts.messagebuilder method)": [[12, "gpflow.experimental.check_shapes.error_contexts.MessageBuilder.indent"]], "precompute() (gpflow.experimental.check_shapes.error_contexts.functioncallcontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.FunctionCallContext.precompute"]], "print() (gpflow.experimental.check_shapes.error_contexts.argumentcontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.ArgumentContext.print"]], "print() (gpflow.experimental.check_shapes.error_contexts.attributecontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.AttributeContext.print"]], "print() (gpflow.experimental.check_shapes.error_contexts.conditioncontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.ConditionContext.print"]], "print() (gpflow.experimental.check_shapes.error_contexts.functioncallcontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.FunctionCallContext.print"]], "print() (gpflow.experimental.check_shapes.error_contexts.functiondefinitioncontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.FunctionDefinitionContext.print"]], "print() (gpflow.experimental.check_shapes.error_contexts.indexcontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.IndexContext.print"]], "print() (gpflow.experimental.check_shapes.error_contexts.larkunexpectedinputcontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.LarkUnexpectedInputContext.print"]], "print() (gpflow.experimental.check_shapes.error_contexts.mappingkeycontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.MappingKeyContext.print"]], "print() (gpflow.experimental.check_shapes.error_contexts.mappingvaluecontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.MappingValueContext.print"]], "print() (gpflow.experimental.check_shapes.error_contexts.multipleelementboolcontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.MultipleElementBoolContext.print"]], "print() (gpflow.experimental.check_shapes.error_contexts.notecontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.NoteContext.print"]], "print() (gpflow.experimental.check_shapes.error_contexts.objecttypecontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.ObjectTypeContext.print"]], "print() (gpflow.experimental.check_shapes.error_contexts.objectvaluecontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.ObjectValueContext.print"]], "print() (gpflow.experimental.check_shapes.error_contexts.parallelcontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.ParallelContext.print"]], "print() (gpflow.experimental.check_shapes.error_contexts.shapecontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.ShapeContext.print"]], "print() (gpflow.experimental.check_shapes.error_contexts.stackcontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.StackContext.print"]], "print() (gpflow.experimental.check_shapes.error_contexts.tensorspeccontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.TensorSpecContext.print"]], "print() (gpflow.experimental.check_shapes.error_contexts.variablecontext method)": [[12, "gpflow.experimental.check_shapes.error_contexts.VariableContext.print"]], "argumentreferenceerror (class in gpflow.experimental.check_shapes.exceptions)": [[13, "gpflow.experimental.check_shapes.exceptions.ArgumentReferenceError"]], "checkshapeserror (class in gpflow.experimental.check_shapes.exceptions)": [[13, "gpflow.experimental.check_shapes.exceptions.CheckShapesError"]], "docstringparseerror (class in gpflow.experimental.check_shapes.exceptions)": [[13, "gpflow.experimental.check_shapes.exceptions.DocstringParseError"]], "noshapeerror (class in gpflow.experimental.check_shapes.exceptions)": [[13, "gpflow.experimental.check_shapes.exceptions.NoShapeError"]], "shapemismatcherror (class in gpflow.experimental.check_shapes.exceptions)": [[13, "gpflow.experimental.check_shapes.exceptions.ShapeMismatchError"]], "specificationparseerror (class in gpflow.experimental.check_shapes.exceptions)": [[13, "gpflow.experimental.check_shapes.exceptions.SpecificationParseError"]], "variabletypeerror (class in gpflow.experimental.check_shapes.exceptions)": [[13, "gpflow.experimental.check_shapes.exceptions.VariableTypeError"]], "gpflow.experimental.check_shapes.exceptions": [[13, "module-gpflow.experimental.check_shapes.exceptions"]], "disabled (gpflow.experimental.check_shapes.shapecheckingstate attribute)": [[14, "gpflow.experimental.check_shapes.ShapeCheckingState.DISABLED"]], "docstringformat (class in gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.DocstringFormat"]], "eager_mode_only (gpflow.experimental.check_shapes.shapecheckingstate attribute)": [[14, "gpflow.experimental.check_shapes.ShapeCheckingState.EAGER_MODE_ONLY"]], "enabled (gpflow.experimental.check_shapes.shapecheckingstate attribute)": [[14, "gpflow.experimental.check_shapes.ShapeCheckingState.ENABLED"]], "errorcontext (class in gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.ErrorContext"]], "none (gpflow.experimental.check_shapes.docstringformat attribute)": [[14, "gpflow.experimental.check_shapes.DocstringFormat.NONE"]], "sphinx (gpflow.experimental.check_shapes.docstringformat attribute)": [[14, "gpflow.experimental.check_shapes.DocstringFormat.SPHINX"]], "shapechecker (class in gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.ShapeChecker"]], "shapecheckingstate (class in gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.ShapeCheckingState"]], "add_context() (gpflow.experimental.check_shapes.shapechecker method)": [[14, "gpflow.experimental.check_shapes.ShapeChecker.add_context"]], "check_shape() (gpflow.experimental.check_shapes.shapechecker method)": [[14, "gpflow.experimental.check_shapes.ShapeChecker.check_shape"]], "check_shape() (in module gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.check_shape"]], "check_shapes() (gpflow.experimental.check_shapes.shapechecker method)": [[14, "gpflow.experimental.check_shapes.ShapeChecker.check_shapes"]], "check_shapes() (in module gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.check_shapes"]], "disable_check_shapes() (in module gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.disable_check_shapes"]], "get_check_shapes() (in module gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.get_check_shapes"]], "get_enable_check_shapes() (in module gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.get_enable_check_shapes"]], "get_enable_function_call_precompute() (in module gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.get_enable_function_call_precompute"]], "get_rewrite_docstrings() (in module gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.get_rewrite_docstrings"]], "get_shape() (in module gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.get_shape"]], "get_shape_checker() (in module gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.get_shape_checker"]], "gpflow.experimental.check_shapes": [[14, "module-gpflow.experimental.check_shapes"]], "inherit_check_shapes() (in module gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.inherit_check_shapes"]], "print() (gpflow.experimental.check_shapes.errorcontext method)": [[14, "gpflow.experimental.check_shapes.ErrorContext.print"]], "register_get_shape() (in module gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.register_get_shape"]], "set_enable_check_shapes() (in module gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.set_enable_check_shapes"]], "set_enable_function_call_precompute() (in module gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.set_enable_function_call_precompute"]], "set_rewrite_docstrings() (in module gpflow.experimental.check_shapes)": [[14, "gpflow.experimental.check_shapes.set_rewrite_docstrings"]], "gpflow.experimental.check_shapes.parser": [[15, "module-gpflow.experimental.check_shapes.parser"]], "parse_and_rewrite_docstring() (in module gpflow.experimental.check_shapes.parser)": [[15, "gpflow.experimental.check_shapes.parser.parse_and_rewrite_docstring"]], "parse_function_spec() (in module gpflow.experimental.check_shapes.parser)": [[15, "gpflow.experimental.check_shapes.parser.parse_function_spec"]], "parse_tensor_spec() (in module gpflow.experimental.check_shapes.parser)": [[15, "gpflow.experimental.check_shapes.parser.parse_tensor_spec"]], "get_ndarray_shape() (in module gpflow.experimental.check_shapes.shapes)": [[16, "gpflow.experimental.check_shapes.shapes.get_ndarray_shape"]], "get_scalar_shape() (in module gpflow.experimental.check_shapes.shapes)": [[16, "gpflow.experimental.check_shapes.shapes.get_scalar_shape"]], "get_sequence_shape() (in module gpflow.experimental.check_shapes.shapes)": [[16, "gpflow.experimental.check_shapes.shapes.get_sequence_shape"]], "get_tensorflow_shape() (in module gpflow.experimental.check_shapes.shapes)": [[16, "gpflow.experimental.check_shapes.shapes.get_tensorflow_shape"]], "gpflow.experimental.check_shapes.shapes": [[16, "module-gpflow.experimental.check_shapes.shapes"]], "parsedargumentspec (class in gpflow.experimental.check_shapes.specs)": [[17, "gpflow.experimental.check_shapes.specs.ParsedArgumentSpec"]], "parseddimensionspec (class in gpflow.experimental.check_shapes.specs)": [[17, "gpflow.experimental.check_shapes.specs.ParsedDimensionSpec"]], "parsedfunctionspec (class in gpflow.experimental.check_shapes.specs)": [[17, "gpflow.experimental.check_shapes.specs.ParsedFunctionSpec"]], "parsednotespec (class in gpflow.experimental.check_shapes.specs)": [[17, "gpflow.experimental.check_shapes.specs.ParsedNoteSpec"]], "parsedshapespec (class in gpflow.experimental.check_shapes.specs)": [[17, "gpflow.experimental.check_shapes.specs.ParsedShapeSpec"]], "parsedtensorspec (class in gpflow.experimental.check_shapes.specs)": [[17, "gpflow.experimental.check_shapes.specs.ParsedTensorSpec"]], "gpflow.experimental.check_shapes.specs": [[17, "module-gpflow.experimental.check_shapes.specs"]], "gpflow.experimental": [[18, "module-gpflow.experimental"]], "experimental() (in module gpflow.experimental.utils)": [[19, "gpflow.experimental.utils.experimental"]], "gpflow.experimental.utils": [[19, "module-gpflow.experimental.utils"]], "additive (class in gpflow.functions)": [[20, "gpflow.functions.Additive"]], "constant (class in gpflow.functions)": [[20, "gpflow.functions.Constant"]], "function (class in gpflow.functions)": [[20, "gpflow.functions.Function"]], "identity (class in gpflow.functions)": [[20, "gpflow.functions.Identity"]], "linear (class in gpflow.functions)": [[20, "gpflow.functions.Linear"]], "meanfunction (class in gpflow.functions)": [[20, "gpflow.functions.MeanFunction"]], "polynomial (class in gpflow.functions)": [[20, "gpflow.functions.Polynomial"]], "product (class in gpflow.functions)": [[20, "gpflow.functions.Product"]], "switchedfunction (class in gpflow.functions)": [[20, "gpflow.functions.SwitchedFunction"]], "switchedmeanfunction (class in gpflow.functions)": [[20, "gpflow.functions.SwitchedMeanFunction"]], "zero (class in gpflow.functions)": [[20, "gpflow.functions.Zero"]], "compute_powers() (gpflow.functions.polynomial static method)": [[20, "gpflow.functions.Polynomial.compute_powers"]], "gpflow.functions": [[20, "module-gpflow.functions"]], "module (class in gpflow)": [[21, "gpflow.Module"]], "parameter (class in gpflow)": [[21, "gpflow.Parameter"]], "assign() (gpflow.parameter method)": [[21, "gpflow.Parameter.assign"]], "default_float() (in module gpflow)": [[21, "gpflow.default_float"]], "default_int() (in module gpflow)": [[21, "gpflow.default_int"]], "default_jitter() (in module gpflow)": [[21, "gpflow.default_jitter"]], "gpflow": [[21, "module-gpflow"]], "log_prior_density() (gpflow.parameter method)": [[21, "gpflow.Parameter.log_prior_density"]], "set_trainable() (in module gpflow)": [[21, "gpflow.set_trainable"]], "trainable (gpflow.parameter property)": [[21, "gpflow.Parameter.trainable"]], "fallbackseparateindependentinducingvariables (class in gpflow.inducing_variables)": [[22, "gpflow.inducing_variables.FallbackSeparateIndependentInducingVariables"]], "fallbacksharedindependentinducingvariables (class in gpflow.inducing_variables)": [[22, "gpflow.inducing_variables.FallbackSharedIndependentInducingVariables"]], "inducingpatches (class in gpflow.inducing_variables)": [[22, "gpflow.inducing_variables.InducingPatches"]], "inducingpoints (class in gpflow.inducing_variables)": [[22, "gpflow.inducing_variables.InducingPoints"]], "inducingvariables (class in gpflow.inducing_variables)": [[22, "gpflow.inducing_variables.InducingVariables"]], "multioutputinducingvariables (class in gpflow.inducing_variables)": [[22, "gpflow.inducing_variables.MultioutputInducingVariables"]], "multiscale (class in gpflow.inducing_variables)": [[22, "gpflow.inducing_variables.Multiscale"]], "separateindependentinducingvariables (class in gpflow.inducing_variables)": [[22, "gpflow.inducing_variables.SeparateIndependentInducingVariables"]], "sharedindependentinducingvariables (class in gpflow.inducing_variables)": [[22, "gpflow.inducing_variables.SharedIndependentInducingVariables"]], "gpflow.inducing_variables": [[22, "module-gpflow.inducing_variables"]], "num_inducing (gpflow.inducing_variables.fallbackseparateindependentinducingvariables property)": [[22, "gpflow.inducing_variables.FallbackSeparateIndependentInducingVariables.num_inducing"]], "num_inducing (gpflow.inducing_variables.fallbacksharedindependentinducingvariables property)": [[22, "gpflow.inducing_variables.FallbackSharedIndependentInducingVariables.num_inducing"]], "num_inducing (gpflow.inducing_variables.inducingvariables property)": [[22, "gpflow.inducing_variables.InducingVariables.num_inducing"]], "shape (gpflow.inducing_variables.fallbackseparateindependentinducingvariables property)": [[22, "gpflow.inducing_variables.FallbackSeparateIndependentInducingVariables.shape"]], "shape (gpflow.inducing_variables.fallbacksharedindependentinducingvariables property)": [[22, "gpflow.inducing_variables.FallbackSharedIndependentInducingVariables.shape"]], "shape (gpflow.inducing_variables.inducingvariables property)": [[22, "gpflow.inducing_variables.InducingVariables.shape"]], "inducingpointsbase (class in gpflow.inducing_variables.inducing_variables)": [[23, "gpflow.inducing_variables.inducing_variables.InducingPointsBase"]], "get_scalar_shape() (in module gpflow.inducing_variables.inducing_variables)": [[23, "gpflow.inducing_variables.inducing_variables.get_scalar_shape"]], "gpflow.inducing_variables.inducing_variables": [[23, "module-gpflow.inducing_variables.inducing_variables"]], "num_inducing (gpflow.inducing_variables.inducing_variables.inducingpointsbase property)": [[23, "gpflow.inducing_variables.inducing_variables.InducingPointsBase.num_inducing"]], "shape (gpflow.inducing_variables.inducing_variables.inducingpointsbase property)": [[23, "gpflow.inducing_variables.inducing_variables.InducingPointsBase.shape"]], "reducingcombination (class in gpflow.kernels.base)": [[24, "gpflow.kernels.base.ReducingCombination"]], "gpflow.kernels.base": [[24, "module-gpflow.kernels.base"]], "anisotropicstationary (class in gpflow.kernels)": [[25, "gpflow.kernels.AnisotropicStationary"]], "arccosine (class in gpflow.kernels)": [[25, "gpflow.kernels.ArcCosine"]], "bias (in module gpflow.kernels)": [[25, "gpflow.kernels.Bias"]], "changepoints (class in gpflow.kernels)": [[25, "gpflow.kernels.ChangePoints"]], "combination (class in gpflow.kernels)": [[25, "gpflow.kernels.Combination"]], "convolutional (class in gpflow.kernels)": [[25, "gpflow.kernels.Convolutional"]], "coregion (class in gpflow.kernels)": [[25, "gpflow.kernels.Coregion"]], "cosine (class in gpflow.kernels)": [[25, "gpflow.kernels.Cosine"]], "exponential (class in gpflow.kernels)": [[25, "gpflow.kernels.Exponential"]], "independentlatent (class in gpflow.kernels)": [[25, "gpflow.kernels.IndependentLatent"]], "isotropicstationary (class in gpflow.kernels)": [[25, "gpflow.kernels.IsotropicStationary"]], "k() (gpflow.kernels.linearcoregionalization method)": [[25, "gpflow.kernels.LinearCoregionalization.K"]], "k() (gpflow.kernels.multioutputkernel method)": [[25, "gpflow.kernels.MultioutputKernel.K"]], "k() (gpflow.kernels.separateindependent method)": [[25, "gpflow.kernels.SeparateIndependent.K"]], "k() (gpflow.kernels.sharedindependent method)": [[25, "gpflow.kernels.SharedIndependent.K"]], "k_diag() (gpflow.kernels.linearcoregionalization method)": [[25, "gpflow.kernels.LinearCoregionalization.K_diag"]], "k_diag() (gpflow.kernels.multioutputkernel method)": [[25, "gpflow.kernels.MultioutputKernel.K_diag"]], "k_diag() (gpflow.kernels.separateindependent method)": [[25, "gpflow.kernels.SeparateIndependent.K_diag"]], "k_diag() (gpflow.kernels.sharedindependent method)": [[25, "gpflow.kernels.SharedIndependent.K_diag"]], "kernel (class in gpflow.kernels)": [[25, "gpflow.kernels.Kernel"]], "linear (class in gpflow.kernels)": [[25, "gpflow.kernels.Linear"]], "linearcoregionalization (class in gpflow.kernels)": [[25, "gpflow.kernels.LinearCoregionalization"]], "matern12 (class in gpflow.kernels)": [[25, "gpflow.kernels.Matern12"]], "matern32 (class in gpflow.kernels)": [[25, "gpflow.kernels.Matern32"]], "matern52 (class in gpflow.kernels)": [[25, "gpflow.kernels.Matern52"]], "multioutputkernel (class in gpflow.kernels)": [[25, "gpflow.kernels.MultioutputKernel"]], "periodic (class in gpflow.kernels)": [[25, "gpflow.kernels.Periodic"]], "polynomial (class in gpflow.kernels)": [[25, "gpflow.kernels.Polynomial"]], "product (class in gpflow.kernels)": [[25, "gpflow.kernels.Product"]], "rbf (in module gpflow.kernels)": [[25, "gpflow.kernels.RBF"]], "rationalquadratic (class in gpflow.kernels)": [[25, "gpflow.kernels.RationalQuadratic"]], "separateindependent (class in gpflow.kernels)": [[25, "gpflow.kernels.SeparateIndependent"]], "sharedindependent (class in gpflow.kernels)": [[25, "gpflow.kernels.SharedIndependent"]], "static (class in gpflow.kernels)": [[25, "gpflow.kernels.Static"]], "stationary (class in gpflow.kernels)": [[25, "gpflow.kernels.Stationary"]], "sum (class in gpflow.kernels)": [[25, "gpflow.kernels.Sum"]], "white (class in gpflow.kernels)": [[25, "gpflow.kernels.White"]], "ard (gpflow.kernels.arccosine property)": [[25, "gpflow.kernels.ArcCosine.ard"]], "ard (gpflow.kernels.linear property)": [[25, "gpflow.kernels.Linear.ard"]], "ard (gpflow.kernels.stationary property)": [[25, "gpflow.kernels.Stationary.ard"]], "get_patches() (gpflow.kernels.convolutional method)": [[25, "gpflow.kernels.Convolutional.get_patches"]], "gpflow.kernels": [[25, "module-gpflow.kernels"]], "latent_kernels (gpflow.kernels.linearcoregionalization property)": [[25, "gpflow.kernels.LinearCoregionalization.latent_kernels"]], "latent_kernels (gpflow.kernels.multioutputkernel property)": [[25, "gpflow.kernels.MultioutputKernel.latent_kernels"]], "latent_kernels (gpflow.kernels.separateindependent property)": [[25, "gpflow.kernels.SeparateIndependent.latent_kernels"]], "latent_kernels (gpflow.kernels.sharedindependent property)": [[25, "gpflow.kernels.SharedIndependent.latent_kernels"]], "num_latent_gps (gpflow.kernels.linearcoregionalization property)": [[25, "gpflow.kernels.LinearCoregionalization.num_latent_gps"]], "num_latent_gps (gpflow.kernels.multioutputkernel property)": [[25, "gpflow.kernels.MultioutputKernel.num_latent_gps"]], "num_latent_gps (gpflow.kernels.separateindependent property)": [[25, "gpflow.kernels.SeparateIndependent.num_latent_gps"]], "num_latent_gps (gpflow.kernels.sharedindependent property)": [[25, "gpflow.kernels.SharedIndependent.num_latent_gps"]], "on_separate_dimensions (gpflow.kernels.combination property)": [[25, "gpflow.kernels.Combination.on_separate_dimensions"]], "on_separate_dims() (gpflow.kernels.kernel method)": [[25, "gpflow.kernels.Kernel.on_separate_dims"]], "scaled_difference_matrix() (gpflow.kernels.anisotropicstationary method)": [[25, "gpflow.kernels.AnisotropicStationary.scaled_difference_matrix"]], "scaled_squared_euclid_dist() (gpflow.kernels.isotropicstationary method)": [[25, "gpflow.kernels.IsotropicStationary.scaled_squared_euclid_dist"]], "slice() (gpflow.kernels.kernel method)": [[25, "gpflow.kernels.Kernel.slice"]], "slice_cov() (gpflow.kernels.kernel method)": [[25, "gpflow.kernels.Kernel.slice_cov"]], "_() (in module gpflow.kullback_leiblers)": [[26, "gpflow.kullback_leiblers._"]], "gauss_kl() (in module gpflow.kullback_leiblers)": [[26, "gpflow.kullback_leiblers.gauss_kl"]], "gpflow.kullback_leiblers": [[26, "module-gpflow.kullback_leiblers"]], "bernoulli (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.Bernoulli"]], "beta (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.Beta"]], "exponential (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.Exponential"]], "gamma (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.Gamma"]], "gaussian (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.Gaussian"]], "gaussianmc (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.GaussianMC"]], "heteroskedastictfpconditional (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.HeteroskedasticTFPConditional"]], "likelihood (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.Likelihood"]], "montecarlolikelihood (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.MonteCarloLikelihood"]], "multiclass (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.MultiClass"]], "multilatentlikelihood (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.MultiLatentLikelihood"]], "multilatenttfpconditional (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.MultiLatentTFPConditional"]], "ordinal (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.Ordinal"]], "poisson (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.Poisson"]], "quadraturelikelihood (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.QuadratureLikelihood"]], "robustmax (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.RobustMax"]], "scalarlikelihood (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.ScalarLikelihood"]], "softmax (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.Softmax"]], "studentt (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.StudentT"]], "switchedlikelihood (class in gpflow.likelihoods)": [[27, "gpflow.likelihoods.SwitchedLikelihood"]], "conditional_mean() (gpflow.likelihoods.likelihood method)": [[27, "gpflow.likelihoods.Likelihood.conditional_mean"]], "conditional_variance() (gpflow.likelihoods.likelihood method)": [[27, "gpflow.likelihoods.Likelihood.conditional_variance"]], "gpflow.likelihoods": [[27, "module-gpflow.likelihoods"]], "log_prob() (gpflow.likelihoods.likelihood method)": [[27, "gpflow.likelihoods.Likelihood.log_prob"]], "predict_log_density() (gpflow.likelihoods.likelihood method)": [[27, "gpflow.likelihoods.Likelihood.predict_log_density"]], "predict_mean_and_var() (gpflow.likelihoods.likelihood method)": [[27, "gpflow.likelihoods.Likelihood.predict_mean_and_var"]], "variational_expectations() (gpflow.likelihoods.likelihood method)": [[27, "gpflow.likelihoods.Likelihood.variational_expectations"]], "gpflow.likelihoods.utils": [[28, "module-gpflow.likelihoods.utils"]], "inv_probit() (in module gpflow.likelihoods.utils)": [[28, "gpflow.likelihoods.utils.inv_probit"]], "bernoulli() (in module gpflow.logdensities)": [[29, "gpflow.logdensities.bernoulli"]], "beta() (in module gpflow.logdensities)": [[29, "gpflow.logdensities.beta"]], "exponential() (in module gpflow.logdensities)": [[29, "gpflow.logdensities.exponential"]], "gamma() (in module gpflow.logdensities)": [[29, "gpflow.logdensities.gamma"]], "gaussian() (in module gpflow.logdensities)": [[29, "gpflow.logdensities.gaussian"]], "gpflow.logdensities": [[29, "module-gpflow.logdensities"]], "laplace() (in module gpflow.logdensities)": [[29, "gpflow.logdensities.laplace"]], "lognormal() (in module gpflow.logdensities)": [[29, "gpflow.logdensities.lognormal"]], "multivariate_normal() (in module gpflow.logdensities)": [[29, "gpflow.logdensities.multivariate_normal"]], "poisson() (in module gpflow.logdensities)": [[29, "gpflow.logdensities.poisson"]], "student_t() (in module gpflow.logdensities)": [[29, "gpflow.logdensities.student_t"]], "nystrompreconditioner (class in gpflow.models.cglb)": [[30, "gpflow.models.cglb.NystromPreconditioner"]], "cglb_conjugate_gradient() (in module gpflow.models.cglb)": [[30, "gpflow.models.cglb.cglb_conjugate_gradient"]], "gpflow.models.cglb": [[30, "module-gpflow.models.cglb"]], "gpr_deprecated (class in gpflow.models.gpr)": [[31, "gpflow.models.gpr.GPR_deprecated"]], "gpr_with_posterior (class in gpflow.models.gpr)": [[31, "gpflow.models.gpr.GPR_with_posterior"]], "gpflow.models.gpr": [[31, "module-gpflow.models.gpr"]], "log_marginal_likelihood() (gpflow.models.gpr.gpr_deprecated method)": [[31, "gpflow.models.gpr.GPR_deprecated.log_marginal_likelihood"]], "maximum_log_likelihood_objective() (gpflow.models.gpr.gpr_deprecated method)": [[31, "gpflow.models.gpr.GPR_deprecated.maximum_log_likelihood_objective"]], "posterior() (gpflow.models.gpr.gpr_with_posterior method)": [[31, "gpflow.models.gpr.GPR_with_posterior.posterior"]], "predict_f() (gpflow.models.gpr.gpr_deprecated method)": [[31, "gpflow.models.gpr.GPR_deprecated.predict_f"]], "predict_f() (gpflow.models.gpr.gpr_with_posterior method)": [[31, "gpflow.models.gpr.GPR_with_posterior.predict_f"]], "bayesiangplvm (class in gpflow.models)": [[32, "gpflow.models.BayesianGPLVM"]], "bayesianmodel (class in gpflow.models)": [[32, "gpflow.models.BayesianModel"]], "cglb (class in gpflow.models)": [[32, "gpflow.models.CGLB"]], "externaldatatraininglossmixin (class in gpflow.models)": [[32, "gpflow.models.ExternalDataTrainingLossMixin"]], "gplvm (class in gpflow.models)": [[32, "gpflow.models.GPLVM"]], "gpmc (class in gpflow.models)": [[32, "gpflow.models.GPMC"]], "gpmodel (class in gpflow.models)": [[32, "gpflow.models.GPModel"]], "gpr (class in gpflow.models)": [[32, "gpflow.models.GPR"]], "gprfitc (class in gpflow.models)": [[32, "gpflow.models.GPRFITC"]], "internaldatatraininglossmixin (class in gpflow.models)": [[32, "gpflow.models.InternalDataTrainingLossMixin"]], "sgpmc (class in gpflow.models)": [[32, "gpflow.models.SGPMC"]], "sgpr (class in gpflow.models)": [[32, "gpflow.models.SGPR"]], "svgp (class in gpflow.models)": [[32, "gpflow.models.SVGP"]], "vgp (class in gpflow.models)": [[32, "gpflow.models.VGP"]], "vgpopperarchambeau (class in gpflow.models)": [[32, "gpflow.models.VGPOpperArchambeau"]], "calc_num_latent_gps() (gpflow.models.gpmodel static method)": [[32, "gpflow.models.GPModel.calc_num_latent_gps"]], "calc_num_latent_gps_from_data() (gpflow.models.gpmodel static method)": [[32, "gpflow.models.GPModel.calc_num_latent_gps_from_data"]], "elbo() (gpflow.models.bayesiangplvm method)": [[32, "gpflow.models.BayesianGPLVM.elbo"]], "elbo() (gpflow.models.vgpopperarchambeau method)": [[32, "gpflow.models.VGPOpperArchambeau.elbo"]], "fitc_log_marginal_likelihood() (gpflow.models.gprfitc method)": [[32, "gpflow.models.GPRFITC.fitc_log_marginal_likelihood"]], "gpflow.models": [[32, "module-gpflow.models"]], "log_likelihood() (gpflow.models.gpmc method)": [[32, "gpflow.models.GPMC.log_likelihood"]], "log_likelihood_lower_bound() (gpflow.models.sgpmc method)": [[32, "gpflow.models.SGPMC.log_likelihood_lower_bound"]], "log_posterior_density() (gpflow.models.bayesianmodel method)": [[32, "gpflow.models.BayesianModel.log_posterior_density"]], "log_posterior_density() (gpflow.models.gpmc method)": [[32, "gpflow.models.GPMC.log_posterior_density"]], "log_posterior_density() (gpflow.models.sgpmc method)": [[32, "gpflow.models.SGPMC.log_posterior_density"]], "log_prior_density() (gpflow.models.bayesianmodel method)": [[32, "gpflow.models.BayesianModel.log_prior_density"]], "logdet_term() (gpflow.models.cglb method)": [[32, "gpflow.models.CGLB.logdet_term"]], "maximum_log_likelihood_objective() (gpflow.models.bayesiangplvm method)": [[32, "gpflow.models.BayesianGPLVM.maximum_log_likelihood_objective"]], "maximum_log_likelihood_objective() (gpflow.models.bayesianmodel method)": [[32, "gpflow.models.BayesianModel.maximum_log_likelihood_objective"]], "maximum_log_likelihood_objective() (gpflow.models.gpmc method)": [[32, "gpflow.models.GPMC.maximum_log_likelihood_objective"]], "maximum_log_likelihood_objective() (gpflow.models.gprfitc method)": [[32, "gpflow.models.GPRFITC.maximum_log_likelihood_objective"]], "maximum_log_likelihood_objective() (gpflow.models.sgpmc method)": [[32, "gpflow.models.SGPMC.maximum_log_likelihood_objective"]], "maximum_log_likelihood_objective() (gpflow.models.vgpopperarchambeau method)": [[32, "gpflow.models.VGPOpperArchambeau.maximum_log_likelihood_objective"]], "maximum_log_likelihood_objective() (in module gpflow.models)": [[32, "gpflow.models.maximum_log_likelihood_objective"]], "predict_f() (gpflow.models.bayesiangplvm method)": [[32, "gpflow.models.BayesianGPLVM.predict_f"]], "predict_f() (gpflow.models.cglb method)": [[32, "gpflow.models.CGLB.predict_f"]], "predict_f() (gpflow.models.gpmc method)": [[32, "gpflow.models.GPMC.predict_f"]], "predict_f() (gpflow.models.gprfitc method)": [[32, "gpflow.models.GPRFITC.predict_f"]], "predict_f() (gpflow.models.sgpmc method)": [[32, "gpflow.models.SGPMC.predict_f"]], "predict_f() (gpflow.models.vgpopperarchambeau method)": [[32, "gpflow.models.VGPOpperArchambeau.predict_f"]], "predict_f_samples() (gpflow.models.gpmodel method)": [[32, "gpflow.models.GPModel.predict_f_samples"]], "predict_log_density() (gpflow.models.bayesiangplvm method)": [[32, "gpflow.models.BayesianGPLVM.predict_log_density"]], "predict_log_density() (gpflow.models.cglb method)": [[32, "gpflow.models.CGLB.predict_log_density"]], "predict_log_density() (gpflow.models.gpmodel method)": [[32, "gpflow.models.GPModel.predict_log_density"]], "predict_y() (gpflow.models.cglb method)": [[32, "gpflow.models.CGLB.predict_y"]], "predict_y() (gpflow.models.gpmodel method)": [[32, "gpflow.models.GPModel.predict_y"]], "quad_term() (gpflow.models.cglb method)": [[32, "gpflow.models.CGLB.quad_term"]], "training_loss() (gpflow.models.externaldatatraininglossmixin method)": [[32, "gpflow.models.ExternalDataTrainingLossMixin.training_loss"]], "training_loss() (gpflow.models.internaldatatraininglossmixin method)": [[32, "gpflow.models.InternalDataTrainingLossMixin.training_loss"]], "training_loss() (in module gpflow.models)": [[32, "gpflow.models.training_loss"]], "training_loss_closure() (gpflow.models.externaldatatraininglossmixin method)": [[32, "gpflow.models.ExternalDataTrainingLossMixin.training_loss_closure"]], "training_loss_closure() (gpflow.models.internaldatatraininglossmixin method)": [[32, "gpflow.models.InternalDataTrainingLossMixin.training_loss_closure"]], "training_loss_closure() (in module gpflow.models)": [[32, "gpflow.models.training_loss_closure"]], "a (gpflow.models.sgpr.sgpr_deprecated.commontensors attribute)": [[33, "gpflow.models.sgpr.SGPR_deprecated.CommonTensors.A"]], "aat (gpflow.models.sgpr.sgpr_deprecated.commontensors attribute)": [[33, "gpflow.models.sgpr.SGPR_deprecated.CommonTensors.AAT"]], "b (gpflow.models.sgpr.sgpr_deprecated.commontensors attribute)": [[33, "gpflow.models.sgpr.SGPR_deprecated.CommonTensors.B"]], "l (gpflow.models.sgpr.sgpr_deprecated.commontensors attribute)": [[33, "gpflow.models.sgpr.SGPR_deprecated.CommonTensors.L"]], "lb (gpflow.models.sgpr.sgpr_deprecated.commontensors attribute)": [[33, "gpflow.models.sgpr.SGPR_deprecated.CommonTensors.LB"]], "sgprbase_deprecated (class in gpflow.models.sgpr)": [[33, "gpflow.models.sgpr.SGPRBase_deprecated"]], "sgpr_deprecated (class in gpflow.models.sgpr)": [[33, "gpflow.models.sgpr.SGPR_deprecated"]], "sgpr_deprecated.commontensors (class in gpflow.models.sgpr)": [[33, "gpflow.models.sgpr.SGPR_deprecated.CommonTensors"]], "sgpr_with_posterior (class in gpflow.models.sgpr)": [[33, "gpflow.models.sgpr.SGPR_with_posterior"]], "compute_qu() (gpflow.models.sgpr.sgpr_deprecated method)": [[33, "gpflow.models.sgpr.SGPR_deprecated.compute_qu"]], "elbo() (gpflow.models.sgpr.sgpr_deprecated method)": [[33, "gpflow.models.sgpr.SGPR_deprecated.elbo"]], "gpflow.models.sgpr": [[33, "module-gpflow.models.sgpr"]], "logdet_term() (gpflow.models.sgpr.sgpr_deprecated method)": [[33, "gpflow.models.sgpr.SGPR_deprecated.logdet_term"]], "maximum_log_likelihood_objective() (gpflow.models.sgpr.sgpr_deprecated method)": [[33, "gpflow.models.sgpr.SGPR_deprecated.maximum_log_likelihood_objective"]], "posterior() (gpflow.models.sgpr.sgpr_with_posterior method)": [[33, "gpflow.models.sgpr.SGPR_with_posterior.posterior"]], "predict_f() (gpflow.models.sgpr.sgpr_deprecated method)": [[33, "gpflow.models.sgpr.SGPR_deprecated.predict_f"]], "predict_f() (gpflow.models.sgpr.sgpr_with_posterior method)": [[33, "gpflow.models.sgpr.SGPR_with_posterior.predict_f"]], "quad_term() (gpflow.models.sgpr.sgpr_deprecated method)": [[33, "gpflow.models.sgpr.SGPR_deprecated.quad_term"]], "sigma (gpflow.models.sgpr.sgpr_deprecated.commontensors attribute)": [[33, "gpflow.models.sgpr.SGPR_deprecated.CommonTensors.sigma"]], "sigma_sq (gpflow.models.sgpr.sgpr_deprecated.commontensors attribute)": [[33, "gpflow.models.sgpr.SGPR_deprecated.CommonTensors.sigma_sq"]], "upper_bound() (gpflow.models.sgpr.sgprbase_deprecated method)": [[33, "gpflow.models.sgpr.SGPRBase_deprecated.upper_bound"]], "svgp_deprecated (class in gpflow.models.svgp)": [[34, "gpflow.models.svgp.SVGP_deprecated"]], "svgp_with_posterior (class in gpflow.models.svgp)": [[34, "gpflow.models.svgp.SVGP_with_posterior"]], "elbo() (gpflow.models.svgp.svgp_deprecated method)": [[34, "gpflow.models.svgp.SVGP_deprecated.elbo"]], "gpflow.models.svgp": [[34, "module-gpflow.models.svgp"]], "maximum_log_likelihood_objective() (gpflow.models.svgp.svgp_deprecated method)": [[34, "gpflow.models.svgp.SVGP_deprecated.maximum_log_likelihood_objective"]], "posterior() (gpflow.models.svgp.svgp_with_posterior method)": [[34, "gpflow.models.svgp.SVGP_with_posterior.posterior"]], "predict_f() (gpflow.models.svgp.svgp_with_posterior method)": [[34, "gpflow.models.svgp.SVGP_with_posterior.predict_f"]], "data_input_to_tensor() (in module gpflow.models.util)": [[35, "gpflow.models.util.data_input_to_tensor"]], "gpflow.models.util": [[35, "module-gpflow.models.util"]], "inducingpoint_wrapper() (in module gpflow.models.util)": [[35, "gpflow.models.util.inducingpoint_wrapper"]], "vgp_deprecated (class in gpflow.models.vgp)": [[36, "gpflow.models.vgp.VGP_deprecated"]], "vgp_with_posterior (class in gpflow.models.vgp)": [[36, "gpflow.models.vgp.VGP_with_posterior"]], "elbo() (gpflow.models.vgp.vgp_deprecated method)": [[36, "gpflow.models.vgp.VGP_deprecated.elbo"]], "gpflow.models.vgp": [[36, "module-gpflow.models.vgp"]], "maximum_log_likelihood_objective() (gpflow.models.vgp.vgp_deprecated method)": [[36, "gpflow.models.vgp.VGP_deprecated.maximum_log_likelihood_objective"]], "posterior() (gpflow.models.vgp.vgp_with_posterior method)": [[36, "gpflow.models.vgp.VGP_with_posterior.posterior"]], "predict_f() (gpflow.models.vgp.vgp_with_posterior method)": [[36, "gpflow.models.vgp.VGP_with_posterior.predict_f"]], "update_vgp_data() (in module gpflow.models.vgp)": [[36, "gpflow.models.vgp.update_vgp_data"]], "executecallback (class in gpflow.monitor)": [[37, "gpflow.monitor.ExecuteCallback"]], "imagetotensorboard (class in gpflow.monitor)": [[37, "gpflow.monitor.ImageToTensorBoard"]], "modeltotensorboard (class in gpflow.monitor)": [[37, "gpflow.monitor.ModelToTensorBoard"]], "monitor (class in gpflow.monitor)": [[37, "gpflow.monitor.Monitor"]], "monitortask (class in gpflow.monitor)": [[37, "gpflow.monitor.MonitorTask"]], "monitortaskgroup (class in gpflow.monitor)": [[37, "gpflow.monitor.MonitorTaskGroup"]], "scalartotensorboard (class in gpflow.monitor)": [[37, "gpflow.monitor.ScalarToTensorBoard"]], "totensorboard (class in gpflow.monitor)": [[37, "gpflow.monitor.ToTensorBoard"]], "gpflow.monitor": [[37, "module-gpflow.monitor"]], "run() (gpflow.monitor.executecallback method)": [[37, "gpflow.monitor.ExecuteCallback.run"]], "run() (gpflow.monitor.imagetotensorboard method)": [[37, "gpflow.monitor.ImageToTensorBoard.run"]], "run() (gpflow.monitor.modeltotensorboard method)": [[37, "gpflow.monitor.ModelToTensorBoard.run"]], "run() (gpflow.monitor.monitortask method)": [[37, "gpflow.monitor.MonitorTask.run"]], "run() (gpflow.monitor.scalartotensorboard method)": [[37, "gpflow.monitor.ScalarToTensorBoard.run"]], "naturalgradient (class in gpflow.optimizers)": [[38, "gpflow.optimizers.NaturalGradient"]], "samplinghelper (class in gpflow.optimizers)": [[38, "gpflow.optimizers.SamplingHelper"]], "scipy (class in gpflow.optimizers)": [[38, "gpflow.optimizers.Scipy"]], "xinat (class in gpflow.optimizers)": [[38, "gpflow.optimizers.XiNat"]], "xisqrtmeanvar (class in gpflow.optimizers)": [[38, "gpflow.optimizers.XiSqrtMeanVar"]], "xitransform (class in gpflow.optimizers)": [[38, "gpflow.optimizers.XiTransform"]], "convert_to_constrained_values() (gpflow.optimizers.samplinghelper method)": [[38, "gpflow.optimizers.SamplingHelper.convert_to_constrained_values"]], "current_state (gpflow.optimizers.samplinghelper property)": [[38, "gpflow.optimizers.SamplingHelper.current_state"]], "get_config() (gpflow.optimizers.naturalgradient method)": [[38, "gpflow.optimizers.NaturalGradient.get_config"]], "gpflow.optimizers": [[38, "module-gpflow.optimizers"]], "meanvarsqrt_to_xi() (gpflow.optimizers.xinat static method)": [[38, "gpflow.optimizers.XiNat.meanvarsqrt_to_xi"]], "meanvarsqrt_to_xi() (gpflow.optimizers.xisqrtmeanvar static method)": [[38, "gpflow.optimizers.XiSqrtMeanVar.meanvarsqrt_to_xi"]], "meanvarsqrt_to_xi() (gpflow.optimizers.xitransform static method)": [[38, "gpflow.optimizers.XiTransform.meanvarsqrt_to_xi"]], "minimize() (gpflow.optimizers.naturalgradient method)": [[38, "gpflow.optimizers.NaturalGradient.minimize"]], "minimize() (gpflow.optimizers.scipy method)": [[38, "gpflow.optimizers.Scipy.minimize"]], "naturals_to_xi() (gpflow.optimizers.xinat static method)": [[38, "gpflow.optimizers.XiNat.naturals_to_xi"]], "naturals_to_xi() (gpflow.optimizers.xisqrtmeanvar static method)": [[38, "gpflow.optimizers.XiSqrtMeanVar.naturals_to_xi"]], "naturals_to_xi() (gpflow.optimizers.xitransform static method)": [[38, "gpflow.optimizers.XiTransform.naturals_to_xi"]], "target_log_prob_fn (gpflow.optimizers.samplinghelper property)": [[38, "gpflow.optimizers.SamplingHelper.target_log_prob_fn"]], "xi_to_meanvarsqrt() (gpflow.optimizers.xinat static method)": [[38, "gpflow.optimizers.XiNat.xi_to_meanvarsqrt"]], "xi_to_meanvarsqrt() (gpflow.optimizers.xisqrtmeanvar static method)": [[38, "gpflow.optimizers.XiSqrtMeanVar.xi_to_meanvarsqrt"]], "xi_to_meanvarsqrt() (gpflow.optimizers.xitransform static method)": [[38, "gpflow.optimizers.XiTransform.xi_to_meanvarsqrt"]], "expectation_to_meanvarsqrt() (in module gpflow.optimizers.natgrad)": [[39, "gpflow.optimizers.natgrad.expectation_to_meanvarsqrt"]], "expectation_to_natural() (in module gpflow.optimizers.natgrad)": [[39, "gpflow.optimizers.natgrad.expectation_to_natural"]], "gpflow.optimizers.natgrad": [[39, "module-gpflow.optimizers.natgrad"]], "meanvarsqrt_to_expectation() (in module gpflow.optimizers.natgrad)": [[39, "gpflow.optimizers.natgrad.meanvarsqrt_to_expectation"]], "meanvarsqrt_to_natural() (in module gpflow.optimizers.natgrad)": [[39, "gpflow.optimizers.natgrad.meanvarsqrt_to_natural"]], "natural_to_expectation() (in module gpflow.optimizers.natgrad)": [[39, "gpflow.optimizers.natgrad.natural_to_expectation"]], "natural_to_meanvarsqrt() (in module gpflow.optimizers.natgrad)": [[39, "gpflow.optimizers.natgrad.natural_to_meanvarsqrt"]], "swap_dimensions() (in module gpflow.optimizers.natgrad)": [[39, "gpflow.optimizers.natgrad.swap_dimensions"]], "abstractposterior (class in gpflow.posteriors)": [[40, "gpflow.posteriors.AbstractPosterior"]], "baseposterior (class in gpflow.posteriors)": [[40, "gpflow.posteriors.BasePosterior"]], "fallbackindependentlatentposterior (class in gpflow.posteriors)": [[40, "gpflow.posteriors.FallbackIndependentLatentPosterior"]], "fullycorrelatedposterior (class in gpflow.posteriors)": [[40, "gpflow.posteriors.FullyCorrelatedPosterior"]], "gprposterior (class in gpflow.posteriors)": [[40, "gpflow.posteriors.GPRPosterior"]], "independentposterior (class in gpflow.posteriors)": [[40, "gpflow.posteriors.IndependentPosterior"]], "independentposteriormultioutput (class in gpflow.posteriors)": [[40, "gpflow.posteriors.IndependentPosteriorMultiOutput"]], "independentposteriorsingleoutput (class in gpflow.posteriors)": [[40, "gpflow.posteriors.IndependentPosteriorSingleOutput"]], "linearcoregionalizationposterior (class in gpflow.posteriors)": [[40, "gpflow.posteriors.LinearCoregionalizationPosterior"]], "precomputecachetype (class in gpflow.posteriors)": [[40, "gpflow.posteriors.PrecomputeCacheType"]], "precomputedvalue (class in gpflow.posteriors)": [[40, "gpflow.posteriors.PrecomputedValue"]], "sgprposterior (class in gpflow.posteriors)": [[40, "gpflow.posteriors.SGPRPosterior"]], "vgpposterior (class in gpflow.posteriors)": [[40, "gpflow.posteriors.VGPPosterior"]], "_get_posterior_base_case() (in module gpflow.posteriors)": [[40, "gpflow.posteriors._get_posterior_base_case"]], "_get_posterior_fully_correlated_mo() (in module gpflow.posteriors)": [[40, "gpflow.posteriors._get_posterior_fully_correlated_mo"]], "_get_posterior_independent_mo() (in module gpflow.posteriors)": [[40, "gpflow.posteriors._get_posterior_independent_mo"]], "_get_posterior_independentlatent_mo_fallback() (in module gpflow.posteriors)": [[40, "gpflow.posteriors._get_posterior_independentlatent_mo_fallback"]], "_get_posterior_linearcoregionalization_mo_efficient() (in module gpflow.posteriors)": [[40, "gpflow.posteriors._get_posterior_linearcoregionalization_mo_efficient"]], "axis_dynamic (gpflow.posteriors.precomputedvalue attribute)": [[40, "gpflow.posteriors.PrecomputedValue.axis_dynamic"]], "create_posterior() (in module gpflow.posteriors)": [[40, "gpflow.posteriors.create_posterior"]], "fused_predict_f() (gpflow.posteriors.abstractposterior method)": [[40, "gpflow.posteriors.AbstractPosterior.fused_predict_f"]], "get_precomputed_value_shape() (in module gpflow.posteriors)": [[40, "gpflow.posteriors.get_precomputed_value_shape"]], "gpflow.posteriors": [[40, "module-gpflow.posteriors"]], "predict_f() (gpflow.posteriors.abstractposterior method)": [[40, "gpflow.posteriors.AbstractPosterior.predict_f"]], "update_cache() (gpflow.posteriors.abstractposterior method)": [[40, "gpflow.posteriors.AbstractPosterior.update_cache"]], "value (gpflow.posteriors.precomputedvalue attribute)": [[40, "gpflow.posteriors.PrecomputedValue.value"]], "wrap_alpha_qinv() (gpflow.posteriors.precomputedvalue static method)": [[40, "gpflow.posteriors.PrecomputedValue.wrap_alpha_Qinv"]], "diagonalgaussian (class in gpflow.probability_distributions)": [[41, "gpflow.probability_distributions.DiagonalGaussian"]], "gaussian (class in gpflow.probability_distributions)": [[41, "gpflow.probability_distributions.Gaussian"]], "markovgaussian (class in gpflow.probability_distributions)": [[41, "gpflow.probability_distributions.MarkovGaussian"]], "probabilitydistribution (class in gpflow.probability_distributions)": [[41, "gpflow.probability_distributions.ProbabilityDistribution"]], "get_probability_distribution_shape() (in module gpflow.probability_distributions)": [[41, "gpflow.probability_distributions.get_probability_distribution_shape"]], "gpflow.probability_distributions": [[41, "module-gpflow.probability_distributions"]], "shape (gpflow.probability_distributions.diagonalgaussian property)": [[41, "gpflow.probability_distributions.DiagonalGaussian.shape"]], "shape (gpflow.probability_distributions.gaussian property)": [[41, "gpflow.probability_distributions.Gaussian.shape"]], "shape (gpflow.probability_distributions.markovgaussian property)": [[41, "gpflow.probability_distributions.MarkovGaussian.shape"]], "shape (gpflow.probability_distributions.probabilitydistribution property)": [[41, "gpflow.probability_distributions.ProbabilityDistribution.shape"]], "gh_points_and_weights() (in module gpflow.quadrature.gauss_hermite)": [[42, "gpflow.quadrature.gauss_hermite.gh_points_and_weights"]], "gpflow.quadrature.gauss_hermite": [[42, "module-gpflow.quadrature.gauss_hermite"]], "list_to_flat_grid() (in module gpflow.quadrature.gauss_hermite)": [[42, "gpflow.quadrature.gauss_hermite.list_to_flat_grid"]], "ndgh_points_and_weights() (in module gpflow.quadrature.gauss_hermite)": [[42, "gpflow.quadrature.gauss_hermite.ndgh_points_and_weights"]], "repeat_as_list() (in module gpflow.quadrature.gauss_hermite)": [[42, "gpflow.quadrature.gauss_hermite.repeat_as_list"]], "reshape_z_dz() (in module gpflow.quadrature.gauss_hermite)": [[42, "gpflow.quadrature.gauss_hermite.reshape_Z_dZ"]], "gaussianquadrature (class in gpflow.quadrature)": [[43, "gpflow.quadrature.GaussianQuadrature"]], "ndiagghquadrature (class in gpflow.quadrature)": [[43, "gpflow.quadrature.NDiagGHQuadrature"]], "gpflow.quadrature": [[43, "module-gpflow.quadrature"]], "hermgauss() (in module gpflow.quadrature)": [[43, "gpflow.quadrature.hermgauss"]], "logspace() (gpflow.quadrature.gaussianquadrature method)": [[43, "gpflow.quadrature.GaussianQuadrature.logspace"]], "mvhermgauss() (in module gpflow.quadrature)": [[43, "gpflow.quadrature.mvhermgauss"]], "mvnquad() (in module gpflow.quadrature)": [[43, "gpflow.quadrature.mvnquad"]], "ndiag_mc() (in module gpflow.quadrature)": [[43, "gpflow.quadrature.ndiag_mc"]], "ndiagquad() (in module gpflow.quadrature)": [[43, "gpflow.quadrature.ndiagquad"]], "compute_mypy_flags() (in module gpflow.type_flags)": [[44, "gpflow.type_flags.compute_mypy_flags"]], "gpflow.type_flags": [[44, "module-gpflow.type_flags"]], "dispatcher (class in gpflow.utilities)": [[45, "gpflow.utilities.Dispatcher"]], "add_likelihood_noise_cov() (in module gpflow.utilities)": [[45, "gpflow.utilities.add_likelihood_noise_cov"]], "add_noise_cov() (in module gpflow.utilities)": [[45, "gpflow.utilities.add_noise_cov"]], "assert_params_false() (in module gpflow.utilities)": [[45, "gpflow.utilities.assert_params_false"]], "deepcopy() (in module gpflow.utilities)": [[45, "gpflow.utilities.deepcopy"]], "dispatch() (gpflow.utilities.dispatcher method)": [[45, "gpflow.utilities.Dispatcher.dispatch"]], "dispatch_or_raise() (gpflow.utilities.dispatcher method)": [[45, "gpflow.utilities.Dispatcher.dispatch_or_raise"]], "freeze() (in module gpflow.utilities)": [[45, "gpflow.utilities.freeze"]], "get_first_occurrence() (gpflow.utilities.dispatcher method)": [[45, "gpflow.utilities.Dispatcher.get_first_occurrence"]], "gpflow.utilities": [[45, "module-gpflow.utilities"]], "is_variable() (in module gpflow.utilities)": [[45, "gpflow.utilities.is_variable"]], "leaf_components() (in module gpflow.utilities)": [[45, "gpflow.utilities.leaf_components"]], "multiple_assign() (in module gpflow.utilities)": [[45, "gpflow.utilities.multiple_assign"]], "parameter_dict() (in module gpflow.utilities)": [[45, "gpflow.utilities.parameter_dict"]], "positive() (in module gpflow.utilities)": [[45, "gpflow.utilities.positive"]], "print_summary() (in module gpflow.utilities)": [[45, "gpflow.utilities.print_summary"]], "read_values() (in module gpflow.utilities)": [[45, "gpflow.utilities.read_values"]], "register() (gpflow.utilities.dispatcher method)": [[45, "gpflow.utilities.Dispatcher.register"]], "reset_cache_bijectors() (in module gpflow.utilities)": [[45, "gpflow.utilities.reset_cache_bijectors"]], "select_dict_parameters_with_prior() (in module gpflow.utilities)": [[45, "gpflow.utilities.select_dict_parameters_with_prior"]], "tabulate_module_summary() (in module gpflow.utilities)": [[45, "gpflow.utilities.tabulate_module_summary"]], "to_default_float() (in module gpflow.utilities)": [[45, "gpflow.utilities.to_default_float"]], "to_default_int() (in module gpflow.utilities)": [[45, "gpflow.utilities.to_default_int"]], "training_loop() (in module gpflow.utilities)": [[45, "gpflow.utilities.training_loop"]], "traverse_module() (in module gpflow.utilities)": [[45, "gpflow.utilities.traverse_module"]], "triangular() (in module gpflow.utilities)": [[45, "gpflow.utilities.triangular"]], "triangular_size() (in module gpflow.utilities)": [[45, "gpflow.utilities.triangular_size"]], "broadcasting_elementwise() (in module gpflow.utilities.ops)": [[46, "gpflow.utilities.ops.broadcasting_elementwise"]], "difference_matrix() (in module gpflow.utilities.ops)": [[46, "gpflow.utilities.ops.difference_matrix"]], "eye() (in module gpflow.utilities.ops)": [[46, "gpflow.utilities.ops.eye"]], "gpflow.utilities.ops": [[46, "module-gpflow.utilities.ops"]], "leading_transpose() (in module gpflow.utilities.ops)": [[46, "gpflow.utilities.ops.leading_transpose"]], "pca_reduce() (in module gpflow.utilities.ops)": [[46, "gpflow.utilities.ops.pca_reduce"]], "square_distance() (in module gpflow.utilities.ops)": [[46, "gpflow.utilities.ops.square_distance"]], "evaluate_parameter_or_function() (in module gpflow.utilities.parameter_or_function)": [[47, "gpflow.utilities.parameter_or_function.evaluate_parameter_or_function"]], "gpflow.utilities.parameter_or_function": [[47, "module-gpflow.utilities.parameter_or_function"]], "prepare_parameter_or_function() (in module gpflow.utilities.parameter_or_function)": [[47, "gpflow.utilities.parameter_or_function.prepare_parameter_or_function"]]}})