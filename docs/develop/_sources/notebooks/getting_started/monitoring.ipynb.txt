{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "9192f73d",
   "metadata": {},
   "source": [
    "# Monitoring\n",
    "\n",
    "GPflow comes with a small framework for monitoring the training of your models. We will introduce this framework in this chapter.\n",
    "\n",
    "Before we dive into monitoring however, let us have the usual imports, and let us create a small helper functions that creates a model we can monitor:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "56715115",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-26T16:56:36.548558Z",
     "iopub.status.busy": "2023-01-26T16:56:36.548307Z",
     "iopub.status.idle": "2023-01-26T16:56:41.966464Z",
     "shell.execute_reply": "2023-01-26T16:56:41.965349Z"
    }
   },
   "outputs": [],
   "source": [
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import tensorflow as tf\n",
    "\n",
    "import gpflow\n",
    "\n",
    "\n",
    "X = np.array(\n",
    "    [\n",
    "        [0.865], [0.666], [0.804], [0.771], [0.147], [0.866], [0.007], [0.026],\n",
    "        [0.171], [0.889], [0.243], [0.028],\n",
    "    ]\n",
    ")\n",
    "Y = np.array(\n",
    "    [\n",
    "        [1.57], [3.48], [3.12], [3.91], [3.07], [1.35], [3.80], [3.82], [3.49],\n",
    "        [1.30], [4.00], [3.82],\n",
    "    ]\n",
    ")\n",
    "\n",
    "\n",
    "def get_model() -> gpflow.models.GPModel:\n",
    "    return gpflow.models.GPR((X, Y), kernel=gpflow.kernels.SquaredExponential())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ebb9019d",
   "metadata": {},
   "source": [
    "## Components of monitoring\n",
    "\n",
    "The most basic component of GPflow monitoring is the [MonitorTask](../../api/gpflow/monitor/index.rst#gpflow-monitor-monitortask). Sub-classes of `MonitorTask` are responsible for actually doing the monitoring work.\n",
    "\n",
    "`MonitorTask`s are grouped into [MonitorTaskGroup](../../api/gpflow/monitor/index.rst#gpflow-monitor-monitortaskgroup)s, according to the frequency with which they are to be executed. So as not to impact training speed too much, `MonitorTask`s are generally not executed for every training iteration. Instead the `MonitorTaskGroup` is configured for how often the task should be executed.\n",
    "\n",
    "Finally `MonitorTaskGroup`s are grouped into one [Monitor](../../api/gpflow/monitor/index.rst#gpflow-monitor-monitor), which is the part that you pass to GPflow."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1fb2d8dc",
   "metadata": {},
   "source": [
    "### ExecuteCallback\n",
    "\n",
    "The [ExecuteCallback](../../api/gpflow/monitor/index.rst#gpflow-monitor-executecallback) class implements `MonitoringTask` and allows you to wrap a simple Python function. Let us run the whole thing in an example:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "31632811",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-26T16:56:41.970013Z",
     "iopub.status.busy": "2023-01-26T16:56:41.969487Z",
     "iopub.status.idle": "2023-01-26T16:56:44.764950Z",
     "shell.execute_reply": "2023-01-26T16:56:44.764030Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n"
     ]
    }
   ],
   "source": [
    "model = get_model()\n",
    "\n",
    "\n",
    "def my_callback() -> None:\n",
    "    print(\"Hello, GPflow monitoring!\")\n",
    "\n",
    "\n",
    "execute_task = gpflow.monitor.ExecuteCallback(my_callback)\n",
    "task_group = gpflow.monitor.MonitorTaskGroup(execute_task, period=3)\n",
    "monitor = gpflow.monitor.Monitor(task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d5585254",
   "metadata": {},
   "source": [
    "## TensorBoard integration\n",
    "\n",
    "The primary value of the GPFlow monitoring framework is however, its integration with [TensorBoard](https://www.tensorflow.org/tensorboard). This gives you an easy way to export the progress of your training.\n",
    "\n",
    "We will first demonstrate [ModelToTensorBoard](../../api/gpflow/monitor/index.rst#gpflow-monitor-modeltotensorboard), which is an easy way to export your entire model:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e04a4aea",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-26T16:56:44.769206Z",
     "iopub.status.busy": "2023-01-26T16:56:44.768740Z",
     "iopub.status.idle": "2023-01-26T16:56:45.235591Z",
     "shell.execute_reply": "2023-01-26T16:56:45.234871Z"
    }
   },
   "outputs": [],
   "source": [
    "model = get_model()\n",
    "log_dir = \"logs/model\"\n",
    "\n",
    "model_task = gpflow.monitor.ModelToTensorBoard(log_dir, model)\n",
    "task_group = gpflow.monitor.MonitorTaskGroup(model_task, period=3)\n",
    "monitor = gpflow.monitor.Monitor(task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6ac23830",
   "metadata": {},
   "source": [
    "Notice how we need to provide TensorBoard with a log directory. Generally TensorBoard reads and writes files from directories, and directories are the primary way you identify your runs. To view the logs you run something like:\n",
    "\n",
    "```bash\n",
    "tensorboard --logdir . --reload_multifile=true\n",
    "```\n",
    "\n",
    "The `--reload_multifile=true` is needed because the GPflow monitoring framework generally outputs multiple files."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e6440aa7",
   "metadata": {},
   "source": [
    "You can use [ScalarToTensorBoard](../../api/gpflow/monitor/index.rst#gpflow-monitor-scalartotensorboard) to write arbitrary values to the logs. You need to provide a callback function that returns a scalar value; either a `float`, or a scalar tensor:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a5c7ac83",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-26T16:56:45.238806Z",
     "iopub.status.busy": "2023-01-26T16:56:45.238473Z",
     "iopub.status.idle": "2023-01-26T16:56:45.267197Z",
     "shell.execute_reply": "2023-01-26T16:56:45.266470Z"
    }
   },
   "outputs": [],
   "source": [
    "model = get_model()\n",
    "\n",
    "\n",
    "def my_scalar() -> tf.Tensor:\n",
    "    return model.training_loss()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04a24e82",
   "metadata": {},
   "source": [
    "Let us test our function first:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "9ed37e03",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-26T16:56:45.270476Z",
     "iopub.status.busy": "2023-01-26T16:56:45.270170Z",
     "iopub.status.idle": "2023-01-26T16:56:45.313472Z",
     "shell.execute_reply": "2023-01-26T16:56:45.312310Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<tf.Tensor: shape=(), dtype=float64, numpy=21.5778089200757>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_scalar()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "372e7b6f",
   "metadata": {},
   "source": [
    "And this is how we use it as a monitor:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9818b324",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-26T16:56:45.316899Z",
     "iopub.status.busy": "2023-01-26T16:56:45.316556Z",
     "iopub.status.idle": "2023-01-26T16:56:45.797810Z",
     "shell.execute_reply": "2023-01-26T16:56:45.796975Z"
    }
   },
   "outputs": [],
   "source": [
    "log_dir = \"logs/scalar\"\n",
    "\n",
    "scalar_task = gpflow.monitor.ScalarToTensorBoard(\n",
    "    log_dir, my_scalar, \"my_scalar_name\"\n",
    ")\n",
    "task_group = gpflow.monitor.MonitorTaskGroup(scalar_task, period=3)\n",
    "monitor = gpflow.monitor.Monitor(task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc813975",
   "metadata": {},
   "source": [
    "And you can use [ImageToTensorBoard](../../api/gpflow/monitor/index.rst#gpflow-monitor-imagetotensorboard) to write arbitrary images to the logs. In this case your callback function needs to take a matplotlib `Figure` and `Axes`, and plot your images to those:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ef6e9e7d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-26T16:56:45.803738Z",
     "iopub.status.busy": "2023-01-26T16:56:45.803267Z",
     "iopub.status.idle": "2023-01-26T16:56:45.837008Z",
     "shell.execute_reply": "2023-01-26T16:56:45.835814Z"
    }
   },
   "outputs": [],
   "source": [
    "model = get_model()\n",
    "\n",
    "\n",
    "def my_image(\n",
    "    figure: matplotlib.figure.Figure, ax: matplotlib.axes.Axes\n",
    ") -> None:\n",
    "    Xnew = np.linspace(X.min() - 0.5, X.max() + 0.5, 100)[:, None]\n",
    "    Ypred = model.predict_f_samples(Xnew, full_cov=True, num_samples=10)\n",
    "    ax.plot(Xnew.flatten(), np.squeeze(Ypred).T, \"C0\", lw=0.5)\n",
    "    ax.scatter(X, Y)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "14b44330",
   "metadata": {},
   "source": [
    "Again, let us test our callback in isolation, before we use it:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "757a3699",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-26T16:56:45.840754Z",
     "iopub.status.busy": "2023-01-26T16:56:45.840361Z",
     "iopub.status.idle": "2023-01-26T16:56:46.143286Z",
     "shell.execute_reply": "2023-01-26T16:56:46.142334Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "my_image(fig, ax)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "42026d4a",
   "metadata": {},
   "source": [
    "And this is how we use the callback:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "1aeb497a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-26T16:56:46.146936Z",
     "iopub.status.busy": "2023-01-26T16:56:46.146458Z",
     "iopub.status.idle": "2023-01-26T16:56:48.276136Z",
     "shell.execute_reply": "2023-01-26T16:56:48.275417Z"
    }
   },
   "outputs": [],
   "source": [
    "log_dir = \"logs/image\"\n",
    "\n",
    "image_task = gpflow.monitor.ImageToTensorBoard(\n",
    "    log_dir, my_image, \"my_image_name\"\n",
    ")\n",
    "task_group = gpflow.monitor.MonitorTaskGroup(image_task, period=3)\n",
    "monitor = gpflow.monitor.Monitor(task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e90698b7",
   "metadata": {},
   "source": [
    "Finally, let us demonstrate what it might look like if you use all these monitor tasks at the same time:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7a916352",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-26T16:56:48.279427Z",
     "iopub.status.busy": "2023-01-26T16:56:48.279096Z",
     "iopub.status.idle": "2023-01-26T16:56:51.066735Z",
     "shell.execute_reply": "2023-01-26T16:56:51.066109Z"
    }
   },
   "outputs": [],
   "source": [
    "log_dir = \"logs/combined\"\n",
    "model = get_model()\n",
    "\n",
    "\n",
    "def my_scalar_2() -> tf.Tensor:\n",
    "    return model.training_loss()\n",
    "\n",
    "\n",
    "def my_image_2(\n",
    "    figure: matplotlib.figure.Figure, ax: matplotlib.axes.Axes\n",
    ") -> None:\n",
    "    Xnew = np.linspace(X.min() - 0.5, X.max() + 0.5, 100)[:, None]\n",
    "    Ypred = model.predict_f_samples(Xnew, full_cov=True, num_samples=10)\n",
    "    ax.plot(Xnew.flatten(), np.squeeze(Ypred).T, \"C0\", lw=0.5)\n",
    "    ax.scatter(X, Y)\n",
    "\n",
    "\n",
    "model_task = gpflow.monitor.ModelToTensorBoard(log_dir, model)\n",
    "scalar_task = gpflow.monitor.ScalarToTensorBoard(\n",
    "    log_dir, my_scalar_2, \"my_scalar_name\"\n",
    ")\n",
    "image_task = gpflow.monitor.ImageToTensorBoard(\n",
    "    log_dir, my_image_2, \"my_image_name\"\n",
    ")\n",
    "\n",
    "fast_task_group = gpflow.monitor.MonitorTaskGroup(\n",
    "    [model_task, scalar_task], period=1\n",
    ")\n",
    "slow_task_group = gpflow.monitor.MonitorTaskGroup(image_task, period=3)\n",
    "\n",
    "monitor = gpflow.monitor.Monitor(fast_task_group, slow_task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3cfe0f89",
   "metadata": {},
   "source": [
    "Here we needed to redefine `my_scalar` and `my_image` because we had hardcoded the model."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c5a93d34",
   "metadata": {},
   "source": [
    "`gpflow.optimizers.Scipy.minimize()` runs an optimizer until convergence.\n",
    "Other optimizers, like `tensorflow.keras.optimizers.Adam()` need `.minimize()` to be called in a loop:\n",
    "\n",
    "opt = tf.keras.optimizers.Adam()\n",
    "\n",
    "\n",
    "@tf.function\n",
    "def optimization_step():\n",
    "    opt.minimize(model.training_loss, model.trainable_variables)\n",
    "\n",
    "\n",
    "for i in range(10):\n",
    "    optimization_step()\n",
    "    monitor(i)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}