{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c71814b0",
   "metadata": {},
   "source": [
    "# Monitoring\n",
    "\n",
    "GPflow comes with a small framework for monitoring the training of your models. We will introduce this framework in this chapter.\n",
    "\n",
    "Before we dive into monitoring however, let us have the usual imports, and let us create a small helper functions that creates a model we can monitor:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "27f94ccc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-24T08:58:09.939671Z",
     "iopub.status.busy": "2022-10-24T08:58:09.939426Z",
     "iopub.status.idle": "2022-10-24T08:58:14.286131Z",
     "shell.execute_reply": "2022-10-24T08:58:14.285490Z"
    }
   },
   "outputs": [],
   "source": [
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import tensorflow as tf\n",
    "\n",
    "import gpflow\n",
    "\n",
    "\n",
    "X = np.array(\n",
    "    [\n",
    "        [0.865], [0.666], [0.804], [0.771], [0.147], [0.866], [0.007], [0.026],\n",
    "        [0.171], [0.889], [0.243], [0.028],\n",
    "    ]\n",
    ")\n",
    "Y = np.array(\n",
    "    [\n",
    "        [1.57], [3.48], [3.12], [3.91], [3.07], [1.35], [3.80], [3.82], [3.49],\n",
    "        [1.30], [4.00], [3.82],\n",
    "    ]\n",
    ")\n",
    "\n",
    "\n",
    "def get_model() -> gpflow.models.GPModel:\n",
    "    return gpflow.models.GPR((X, Y), kernel=gpflow.kernels.SquaredExponential())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca284a22",
   "metadata": {},
   "source": [
    "## Components of monitoring\n",
    "\n",
    "The most basic component of GPflow monitoring is the [MonitorTask](../../api/gpflow/monitor/index.rst#gpflow-monitor-monitortask). Sub-classes of `MonitorTask` are responsible for actually doing the monitoring work.\n",
    "\n",
    "`MonitorTask`s are grouped into [MonitorTaskGroup](../../api/gpflow/monitor/index.rst#gpflow-monitor-monitortaskgroup)s, according to the frequency with which they are to be executed. So as not to impact training speed too much, `MonitorTask`s are generally not executed for every training iteration. Instead the `MonitorTaskGroup` is configured for how often the task should be executed.\n",
    "\n",
    "Finally `MonitorTaskGroup`s are grouped into one [Monitor](../../api/gpflow/monitor/index.rst#gpflow-monitor-monitor), which is the part that you pass to GPflow."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "177a0728",
   "metadata": {},
   "source": [
    "### ExecuteCallback\n",
    "\n",
    "The [ExecuteCallback](../../api/gpflow/monitor/index.rst#gpflow-monitor-executecallback) class implements `MonitoringTask` and allows you to wrap a simple Python function. Let us run the whole thing in an example:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "70fa08a4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-24T08:58:14.289553Z",
     "iopub.status.busy": "2022-10-24T08:58:14.289061Z",
     "iopub.status.idle": "2022-10-24T08:58:16.449126Z",
     "shell.execute_reply": "2022-10-24T08:58:16.448492Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n"
     ]
    }
   ],
   "source": [
    "model = get_model()\n",
    "\n",
    "\n",
    "def my_callback() -> None:\n",
    "    print(\"Hello, GPflow monitoring!\")\n",
    "\n",
    "\n",
    "execute_task = gpflow.monitor.ExecuteCallback(my_callback)\n",
    "task_group = gpflow.monitor.MonitorTaskGroup(execute_task, period=3)\n",
    "monitor = gpflow.monitor.Monitor(task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0711c4e6",
   "metadata": {},
   "source": [
    "## TensorBoard integration\n",
    "\n",
    "The primary value of the GPFlow monitoring framework is however, its integration with [TensorBoard](https://www.tensorflow.org/tensorboard). This gives you an easy way to export the progress of your training.\n",
    "\n",
    "We will first demonstrate [ModelToTensorBoard](../../api/gpflow/monitor/index.rst#gpflow-monitor-modeltotensorboard), which is an easy way to export your entire model:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "cb6850fa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-24T08:58:16.451996Z",
     "iopub.status.busy": "2022-10-24T08:58:16.451682Z",
     "iopub.status.idle": "2022-10-24T08:58:16.833034Z",
     "shell.execute_reply": "2022-10-24T08:58:16.832382Z"
    }
   },
   "outputs": [],
   "source": [
    "model = get_model()\n",
    "log_dir = \"logs/model\"\n",
    "\n",
    "model_task = gpflow.monitor.ModelToTensorBoard(log_dir, model)\n",
    "task_group = gpflow.monitor.MonitorTaskGroup(model_task, period=3)\n",
    "monitor = gpflow.monitor.Monitor(task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "07c88042",
   "metadata": {},
   "source": [
    "Notice how we need to provide TensorBoard with a log directory. Generally TensorBoard reads and writes files from directories, and directories are the primary way you identify your runs. To view the logs you run something like:\n",
    "\n",
    "```bash\n",
    "tensorboard --logdir . --reload_multifile=true\n",
    "```\n",
    "\n",
    "The `--reload_multifile=true` is needed because the GPflow monitoring framework generally outputs multiple files."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c1b03a3",
   "metadata": {},
   "source": [
    "You can use [ScalarToTensorBoard](../../api/gpflow/monitor/index.rst#gpflow-monitor-scalartotensorboard) to write arbitrary values to the logs. You need to provide a callback function that returns a scalar value; either a `float`, or a scalar tensor:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "7d430d9d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-24T08:58:16.837355Z",
     "iopub.status.busy": "2022-10-24T08:58:16.837031Z",
     "iopub.status.idle": "2022-10-24T08:58:16.859015Z",
     "shell.execute_reply": "2022-10-24T08:58:16.858166Z"
    }
   },
   "outputs": [],
   "source": [
    "model = get_model()\n",
    "\n",
    "\n",
    "def my_scalar() -> tf.Tensor:\n",
    "    return model.training_loss()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f419905",
   "metadata": {},
   "source": [
    "Let us test our function first:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d0f5ded5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-24T08:58:16.863138Z",
     "iopub.status.busy": "2022-10-24T08:58:16.862849Z",
     "iopub.status.idle": "2022-10-24T08:58:16.896943Z",
     "shell.execute_reply": "2022-10-24T08:58:16.896214Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<tf.Tensor: shape=(), dtype=float64, numpy=21.5778089200757>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_scalar()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4c6af51",
   "metadata": {},
   "source": [
    "And this is how we use it as a monitor:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ba4f0e89",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-24T08:58:16.953803Z",
     "iopub.status.busy": "2022-10-24T08:58:16.953457Z",
     "iopub.status.idle": "2022-10-24T08:58:17.345653Z",
     "shell.execute_reply": "2022-10-24T08:58:17.344997Z"
    }
   },
   "outputs": [],
   "source": [
    "log_dir = \"logs/scalar\"\n",
    "\n",
    "scalar_task = gpflow.monitor.ScalarToTensorBoard(\n",
    "    log_dir, my_scalar, \"my_scalar_name\"\n",
    ")\n",
    "task_group = gpflow.monitor.MonitorTaskGroup(scalar_task, period=3)\n",
    "monitor = gpflow.monitor.Monitor(task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "749501b8",
   "metadata": {},
   "source": [
    "And you can use [ImageToTensorBoard](../../api/gpflow/monitor/index.rst#gpflow-monitor-imagetotensorboard) to write arbitrary images to the logs. In this case your callback function needs to take a matplotlib `Figure` and `Axes`, and plot your images to those:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6cee02fc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-24T08:58:17.350076Z",
     "iopub.status.busy": "2022-10-24T08:58:17.349768Z",
     "iopub.status.idle": "2022-10-24T08:58:17.372614Z",
     "shell.execute_reply": "2022-10-24T08:58:17.371994Z"
    }
   },
   "outputs": [],
   "source": [
    "model = get_model()\n",
    "\n",
    "\n",
    "def my_image(\n",
    "    figure: matplotlib.figure.Figure, ax: matplotlib.axes.Axes\n",
    ") -> None:\n",
    "    Xnew = np.linspace(X.min() - 0.5, X.max() + 0.5, 100)[:, None]\n",
    "    Ypred = model.predict_f_samples(Xnew, full_cov=True, num_samples=10)\n",
    "    ax.plot(Xnew.flatten(), np.squeeze(Ypred).T, \"C0\", lw=0.5)\n",
    "    ax.scatter(X, Y)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a0b51f68",
   "metadata": {},
   "source": [
    "Again, let us test our callback in isolation, before we use it:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "48f5fe07",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-24T08:58:17.376606Z",
     "iopub.status.busy": "2022-10-24T08:58:17.376304Z",
     "iopub.status.idle": "2022-10-24T08:58:17.653776Z",
     "shell.execute_reply": "2022-10-24T08:58:17.653107Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "my_image(fig, ax)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "046db9a8",
   "metadata": {},
   "source": [
    "And this is how we use the callback:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "36f21d9e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-24T08:58:17.657918Z",
     "iopub.status.busy": "2022-10-24T08:58:17.657573Z",
     "iopub.status.idle": "2022-10-24T08:58:19.263302Z",
     "shell.execute_reply": "2022-10-24T08:58:19.262328Z"
    }
   },
   "outputs": [],
   "source": [
    "log_dir = \"logs/image\"\n",
    "\n",
    "image_task = gpflow.monitor.ImageToTensorBoard(\n",
    "    log_dir, my_image, \"my_image_name\"\n",
    ")\n",
    "task_group = gpflow.monitor.MonitorTaskGroup(image_task, period=3)\n",
    "monitor = gpflow.monitor.Monitor(task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cf796212",
   "metadata": {},
   "source": [
    "Finally, let us demonstrate what it might look like if you use all these monitor tasks at the same time:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f0ef12fd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-24T08:58:19.268330Z",
     "iopub.status.busy": "2022-10-24T08:58:19.267643Z",
     "iopub.status.idle": "2022-10-24T08:58:21.476784Z",
     "shell.execute_reply": "2022-10-24T08:58:21.476124Z"
    }
   },
   "outputs": [],
   "source": [
    "log_dir = \"logs/combined\"\n",
    "model = get_model()\n",
    "\n",
    "\n",
    "def my_scalar_2() -> tf.Tensor:\n",
    "    return model.training_loss()\n",
    "\n",
    "\n",
    "def my_image_2(\n",
    "    figure: matplotlib.figure.Figure, ax: matplotlib.axes.Axes\n",
    ") -> None:\n",
    "    Xnew = np.linspace(X.min() - 0.5, X.max() + 0.5, 100)[:, None]\n",
    "    Ypred = model.predict_f_samples(Xnew, full_cov=True, num_samples=10)\n",
    "    ax.plot(Xnew.flatten(), np.squeeze(Ypred).T, \"C0\", lw=0.5)\n",
    "    ax.scatter(X, Y)\n",
    "\n",
    "\n",
    "model_task = gpflow.monitor.ModelToTensorBoard(log_dir, model)\n",
    "scalar_task = gpflow.monitor.ScalarToTensorBoard(\n",
    "    log_dir, my_scalar_2, \"my_scalar_name\"\n",
    ")\n",
    "image_task = gpflow.monitor.ImageToTensorBoard(\n",
    "    log_dir, my_image_2, \"my_image_name\"\n",
    ")\n",
    "\n",
    "fast_task_group = gpflow.monitor.MonitorTaskGroup(\n",
    "    [model_task, scalar_task], period=1\n",
    ")\n",
    "slow_task_group = gpflow.monitor.MonitorTaskGroup(image_task, period=3)\n",
    "\n",
    "monitor = gpflow.monitor.Monitor(fast_task_group, slow_task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0d128f27",
   "metadata": {},
   "source": [
    "Here we needed to redefine `my_scalar` and `my_image` because we had hardcoded the model."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}