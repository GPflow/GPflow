{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "8b4b067b",
   "metadata": {},
   "source": [
    "# Monitoring\n",
    "\n",
    "GPflow comes with a small framework for monitoring the training of your models. We will introduce this framework in this chapter.\n",
    "\n",
    "Before we dive into monitoring however, let us have the usual imports, and let us create a small helper functions that creates a model we can monitor:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "be6ecc18",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-04T12:34:41.621606Z",
     "iopub.status.busy": "2024-01-04T12:34:41.621067Z",
     "iopub.status.idle": "2024-01-04T12:34:46.673147Z",
     "shell.execute_reply": "2024-01-04T12:34:46.672253Z"
    }
   },
   "outputs": [],
   "source": [
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import tensorflow as tf\n",
    "\n",
    "import gpflow\n",
    "\n",
    "\n",
    "X = np.array(\n",
    "    [\n",
    "        [0.865], [0.666], [0.804], [0.771], [0.147], [0.866], [0.007], [0.026],\n",
    "        [0.171], [0.889], [0.243], [0.028],\n",
    "    ]\n",
    ")\n",
    "Y = np.array(\n",
    "    [\n",
    "        [1.57], [3.48], [3.12], [3.91], [3.07], [1.35], [3.80], [3.82], [3.49],\n",
    "        [1.30], [4.00], [3.82],\n",
    "    ]\n",
    ")\n",
    "\n",
    "\n",
    "def get_model() -> gpflow.models.GPModel:\n",
    "    return gpflow.models.GPR((X, Y), kernel=gpflow.kernels.SquaredExponential())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab6641ab",
   "metadata": {},
   "source": [
    "## Components of monitoring\n",
    "\n",
    "The most basic component of GPflow monitoring is the [MonitorTask](../../api/gpflow/monitor/index.rst#gpflow-monitor-monitortask). Sub-classes of `MonitorTask` are responsible for actually doing the monitoring work.\n",
    "\n",
    "`MonitorTask`s are grouped into [MonitorTaskGroup](../../api/gpflow/monitor/index.rst#gpflow-monitor-monitortaskgroup)s, according to the frequency with which they are to be executed. So as not to impact training speed too much, `MonitorTask`s are generally not executed for every training iteration. Instead the `MonitorTaskGroup` is configured for how often the task should be executed.\n",
    "\n",
    "Finally `MonitorTaskGroup`s are grouped into one [Monitor](../../api/gpflow/monitor/index.rst#gpflow-monitor-monitor), which is the part that you pass to GPflow."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ec7d2684",
   "metadata": {},
   "source": [
    "### ExecuteCallback\n",
    "\n",
    "The [ExecuteCallback](../../api/gpflow/monitor/index.rst#gpflow-monitor-executecallback) class implements `MonitoringTask` and allows you to wrap a simple Python function. Let us run the whole thing in an example:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "7ebdddb7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-04T12:34:46.676965Z",
     "iopub.status.busy": "2024-01-04T12:34:46.676266Z",
     "iopub.status.idle": "2024-01-04T12:34:48.937337Z",
     "shell.execute_reply": "2024-01-04T12:34:48.936786Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n"
     ]
    }
   ],
   "source": [
    "model = get_model()\n",
    "\n",
    "\n",
    "def my_callback() -> None:\n",
    "    print(\"Hello, GPflow monitoring!\")\n",
    "\n",
    "\n",
    "execute_task = gpflow.monitor.ExecuteCallback(my_callback)\n",
    "task_group = gpflow.monitor.MonitorTaskGroup(execute_task, period=3)\n",
    "monitor = gpflow.monitor.Monitor(task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2c5c0cc1",
   "metadata": {},
   "source": [
    "## TensorBoard integration\n",
    "\n",
    "The primary value of the GPFlow monitoring framework is however, its integration with [TensorBoard](https://www.tensorflow.org/tensorboard). This gives you an easy way to export the progress of your training.\n",
    "\n",
    "We will first demonstrate [ModelToTensorBoard](../../api/gpflow/monitor/index.rst#gpflow-monitor-modeltotensorboard), which is an easy way to export your entire model:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "30c66c07",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-04T12:34:48.940212Z",
     "iopub.status.busy": "2024-01-04T12:34:48.939941Z",
     "iopub.status.idle": "2024-01-04T12:34:49.485070Z",
     "shell.execute_reply": "2024-01-04T12:34:49.484446Z"
    }
   },
   "outputs": [],
   "source": [
    "model = get_model()\n",
    "log_dir = \"logs/model\"\n",
    "\n",
    "model_task = gpflow.monitor.ModelToTensorBoard(log_dir, model)\n",
    "task_group = gpflow.monitor.MonitorTaskGroup(model_task, period=3)\n",
    "monitor = gpflow.monitor.Monitor(task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8de080e3",
   "metadata": {},
   "source": [
    "Notice how we need to provide TensorBoard with a log directory. Generally TensorBoard reads and writes files from directories, and directories are the primary way you identify your runs. To view the logs you run something like:\n",
    "\n",
    "```bash\n",
    "tensorboard --logdir . --reload_multifile=true\n",
    "```\n",
    "\n",
    "The `--reload_multifile=true` is needed because the GPflow monitoring framework generally outputs multiple files."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f7adb1bd",
   "metadata": {},
   "source": [
    "You can use [ScalarToTensorBoard](../../api/gpflow/monitor/index.rst#gpflow-monitor-scalartotensorboard) to write arbitrary values to the logs. You need to provide a callback function that returns a scalar value; either a `float`, or a scalar tensor:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6a971847",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-04T12:34:49.488387Z",
     "iopub.status.busy": "2024-01-04T12:34:49.488103Z",
     "iopub.status.idle": "2024-01-04T12:34:49.519768Z",
     "shell.execute_reply": "2024-01-04T12:34:49.519120Z"
    }
   },
   "outputs": [],
   "source": [
    "model = get_model()\n",
    "\n",
    "\n",
    "def my_scalar() -> tf.Tensor:\n",
    "    return model.training_loss()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "442d09a6",
   "metadata": {},
   "source": [
    "Let us test our function first:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "2b8c8705",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-04T12:34:49.522378Z",
     "iopub.status.busy": "2024-01-04T12:34:49.522110Z",
     "iopub.status.idle": "2024-01-04T12:34:49.555616Z",
     "shell.execute_reply": "2024-01-04T12:34:49.554874Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<tf.Tensor: shape=(), dtype=float64, numpy=21.5778089200757>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_scalar()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5ac7a2b5",
   "metadata": {},
   "source": [
    "And this is how we use it as a monitor:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "77fd881b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-04T12:34:49.558761Z",
     "iopub.status.busy": "2024-01-04T12:34:49.558462Z",
     "iopub.status.idle": "2024-01-04T12:34:50.085296Z",
     "shell.execute_reply": "2024-01-04T12:34:50.084560Z"
    }
   },
   "outputs": [],
   "source": [
    "log_dir = \"logs/scalar\"\n",
    "\n",
    "scalar_task = gpflow.monitor.ScalarToTensorBoard(\n",
    "    log_dir, my_scalar, \"my_scalar_name\"\n",
    ")\n",
    "task_group = gpflow.monitor.MonitorTaskGroup(scalar_task, period=3)\n",
    "monitor = gpflow.monitor.Monitor(task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "88a5de32",
   "metadata": {},
   "source": [
    "And you can use [ImageToTensorBoard](../../api/gpflow/monitor/index.rst#gpflow-monitor-imagetotensorboard) to write arbitrary images to the logs. In this case your callback function needs to take a matplotlib `Figure` and `Axes`, and plot your images to those:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "17f37c5e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-04T12:34:50.088345Z",
     "iopub.status.busy": "2024-01-04T12:34:50.088042Z",
     "iopub.status.idle": "2024-01-04T12:34:50.119109Z",
     "shell.execute_reply": "2024-01-04T12:34:50.118518Z"
    }
   },
   "outputs": [],
   "source": [
    "model = get_model()\n",
    "\n",
    "\n",
    "def my_image(\n",
    "    figure: matplotlib.figure.Figure, ax: matplotlib.axes.Axes\n",
    ") -> None:\n",
    "    Xnew = np.linspace(X.min() - 0.5, X.max() + 0.5, 100)[:, None]\n",
    "    Ypred = model.predict_f_samples(Xnew, full_cov=True, num_samples=10)\n",
    "    ax.plot(Xnew.flatten(), np.squeeze(Ypred).T, \"C0\", lw=0.5)\n",
    "    ax.scatter(X, Y)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6f5be2f",
   "metadata": {},
   "source": [
    "Again, let us test our callback in isolation, before we use it:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a96141e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-04T12:34:50.121576Z",
     "iopub.status.busy": "2024-01-04T12:34:50.121312Z",
     "iopub.status.idle": "2024-01-04T12:34:50.342142Z",
     "shell.execute_reply": "2024-01-04T12:34:50.341635Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "my_image(fig, ax)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "54f4d96c",
   "metadata": {},
   "source": [
    "And this is how we use the callback:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "c8e55108",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-04T12:34:50.345783Z",
     "iopub.status.busy": "2024-01-04T12:34:50.345549Z",
     "iopub.status.idle": "2024-01-04T12:34:52.018327Z",
     "shell.execute_reply": "2024-01-04T12:34:52.017727Z"
    }
   },
   "outputs": [],
   "source": [
    "log_dir = \"logs/image\"\n",
    "\n",
    "image_task = gpflow.monitor.ImageToTensorBoard(\n",
    "    log_dir, my_image, \"my_image_name\"\n",
    ")\n",
    "task_group = gpflow.monitor.MonitorTaskGroup(image_task, period=3)\n",
    "monitor = gpflow.monitor.Monitor(task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c1b1e757",
   "metadata": {},
   "source": [
    "Finally, let us demonstrate what it might look like if you use all these monitor tasks at the same time:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "33bb4598",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-04T12:34:52.021311Z",
     "iopub.status.busy": "2024-01-04T12:34:52.020839Z",
     "iopub.status.idle": "2024-01-04T12:34:54.201277Z",
     "shell.execute_reply": "2024-01-04T12:34:54.200695Z"
    }
   },
   "outputs": [],
   "source": [
    "log_dir = \"logs/combined\"\n",
    "model = get_model()\n",
    "\n",
    "\n",
    "def my_scalar_2() -> tf.Tensor:\n",
    "    return model.training_loss()\n",
    "\n",
    "\n",
    "def my_image_2(\n",
    "    figure: matplotlib.figure.Figure, ax: matplotlib.axes.Axes\n",
    ") -> None:\n",
    "    Xnew = np.linspace(X.min() - 0.5, X.max() + 0.5, 100)[:, None]\n",
    "    Ypred = model.predict_f_samples(Xnew, full_cov=True, num_samples=10)\n",
    "    ax.plot(Xnew.flatten(), np.squeeze(Ypred).T, \"C0\", lw=0.5)\n",
    "    ax.scatter(X, Y)\n",
    "\n",
    "\n",
    "model_task = gpflow.monitor.ModelToTensorBoard(log_dir, model)\n",
    "scalar_task = gpflow.monitor.ScalarToTensorBoard(\n",
    "    log_dir, my_scalar_2, \"my_scalar_name\"\n",
    ")\n",
    "image_task = gpflow.monitor.ImageToTensorBoard(\n",
    "    log_dir, my_image_2, \"my_image_name\"\n",
    ")\n",
    "\n",
    "fast_task_group = gpflow.monitor.MonitorTaskGroup(\n",
    "    [model_task, scalar_task], period=1\n",
    ")\n",
    "slow_task_group = gpflow.monitor.MonitorTaskGroup(image_task, period=3)\n",
    "\n",
    "monitor = gpflow.monitor.Monitor(fast_task_group, slow_task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9cd70d15",
   "metadata": {},
   "source": [
    "Here we needed to redefine `my_scalar` and `my_image` because we had hardcoded the model."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d081edf8",
   "metadata": {},
   "source": [
    "`gpflow.optimizers.Scipy.minimize()` runs an optimizer until convergence.\n",
    "Other optimizers, like `tensorflow.keras.optimizers.Adam()` need `.minimize()` to be called in a loop:\n",
    "\n",
    "opt = tf.keras.optimizers.Adam()\n",
    "\n",
    "\n",
    "@tf.function\n",
    "def optimization_step():\n",
    "    opt.minimize(model.training_loss, model.trainable_variables)\n",
    "\n",
    "\n",
    "for i in range(10):\n",
    "    optimization_step()\n",
    "    monitor(i)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}