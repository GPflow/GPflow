{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "3f416140",
   "metadata": {},
   "source": [
    "# Monitoring\n",
    "\n",
    "GPflow comes with a small framework for monitoring the training of your models. We will introduce this framework in this chapter.\n",
    "\n",
    "Before we dive into monitoring however, let us have the usual imports, and let us create a small helper functions that creates a model we can monitor:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c6832594",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-13T17:33:12.953347Z",
     "iopub.status.busy": "2023-01-13T17:33:12.952955Z",
     "iopub.status.idle": "2023-01-13T17:33:16.877541Z",
     "shell.execute_reply": "2023-01-13T17:33:16.876926Z"
    }
   },
   "outputs": [],
   "source": [
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import tensorflow as tf\n",
    "\n",
    "import gpflow\n",
    "\n",
    "\n",
    "X = np.array(\n",
    "    [\n",
    "        [0.865], [0.666], [0.804], [0.771], [0.147], [0.866], [0.007], [0.026],\n",
    "        [0.171], [0.889], [0.243], [0.028],\n",
    "    ]\n",
    ")\n",
    "Y = np.array(\n",
    "    [\n",
    "        [1.57], [3.48], [3.12], [3.91], [3.07], [1.35], [3.80], [3.82], [3.49],\n",
    "        [1.30], [4.00], [3.82],\n",
    "    ]\n",
    ")\n",
    "\n",
    "\n",
    "def get_model() -> gpflow.models.GPModel:\n",
    "    return gpflow.models.GPR((X, Y), kernel=gpflow.kernels.SquaredExponential())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c11c5ddc",
   "metadata": {},
   "source": [
    "## Components of monitoring\n",
    "\n",
    "The most basic component of GPflow monitoring is the [MonitorTask](../../api/gpflow/monitor/index.rst#gpflow-monitor-monitortask). Sub-classes of `MonitorTask` are responsible for actually doing the monitoring work.\n",
    "\n",
    "`MonitorTask`s are grouped into [MonitorTaskGroup](../../api/gpflow/monitor/index.rst#gpflow-monitor-monitortaskgroup)s, according to the frequency with which they are to be executed. So as not to impact training speed too much, `MonitorTask`s are generally not executed for every training iteration. Instead the `MonitorTaskGroup` is configured for how often the task should be executed.\n",
    "\n",
    "Finally `MonitorTaskGroup`s are grouped into one [Monitor](../../api/gpflow/monitor/index.rst#gpflow-monitor-monitor), which is the part that you pass to GPflow."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "09bc15df",
   "metadata": {},
   "source": [
    "### ExecuteCallback\n",
    "\n",
    "The [ExecuteCallback](../../api/gpflow/monitor/index.rst#gpflow-monitor-executecallback) class implements `MonitoringTask` and allows you to wrap a simple Python function. Let us run the whole thing in an example:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "fcd9c39d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-13T17:33:16.880678Z",
     "iopub.status.busy": "2023-01-13T17:33:16.880266Z",
     "iopub.status.idle": "2023-01-13T17:33:18.896740Z",
     "shell.execute_reply": "2023-01-13T17:33:18.896138Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n",
      "Hello, GPflow monitoring!\n"
     ]
    }
   ],
   "source": [
    "model = get_model()\n",
    "\n",
    "\n",
    "def my_callback() -> None:\n",
    "    print(\"Hello, GPflow monitoring!\")\n",
    "\n",
    "\n",
    "execute_task = gpflow.monitor.ExecuteCallback(my_callback)\n",
    "task_group = gpflow.monitor.MonitorTaskGroup(execute_task, period=3)\n",
    "monitor = gpflow.monitor.Monitor(task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f599f57",
   "metadata": {},
   "source": [
    "## TensorBoard integration\n",
    "\n",
    "The primary value of the GPFlow monitoring framework is however, its integration with [TensorBoard](https://www.tensorflow.org/tensorboard). This gives you an easy way to export the progress of your training.\n",
    "\n",
    "We will first demonstrate [ModelToTensorBoard](../../api/gpflow/monitor/index.rst#gpflow-monitor-modeltotensorboard), which is an easy way to export your entire model:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "41a73a13",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-13T17:33:18.899404Z",
     "iopub.status.busy": "2023-01-13T17:33:18.899125Z",
     "iopub.status.idle": "2023-01-13T17:33:19.258047Z",
     "shell.execute_reply": "2023-01-13T17:33:19.257438Z"
    }
   },
   "outputs": [],
   "source": [
    "model = get_model()\n",
    "log_dir = \"logs/model\"\n",
    "\n",
    "model_task = gpflow.monitor.ModelToTensorBoard(log_dir, model)\n",
    "task_group = gpflow.monitor.MonitorTaskGroup(model_task, period=3)\n",
    "monitor = gpflow.monitor.Monitor(task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee9ed3aa",
   "metadata": {},
   "source": [
    "Notice how we need to provide TensorBoard with a log directory. Generally TensorBoard reads and writes files from directories, and directories are the primary way you identify your runs. To view the logs you run something like:\n",
    "\n",
    "```bash\n",
    "tensorboard --logdir . --reload_multifile=true\n",
    "```\n",
    "\n",
    "The `--reload_multifile=true` is needed because the GPflow monitoring framework generally outputs multiple files."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4d3ad0f6",
   "metadata": {},
   "source": [
    "You can use [ScalarToTensorBoard](../../api/gpflow/monitor/index.rst#gpflow-monitor-scalartotensorboard) to write arbitrary values to the logs. You need to provide a callback function that returns a scalar value; either a `float`, or a scalar tensor:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4f93f460",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-13T17:33:19.260991Z",
     "iopub.status.busy": "2023-01-13T17:33:19.260715Z",
     "iopub.status.idle": "2023-01-13T17:33:19.280797Z",
     "shell.execute_reply": "2023-01-13T17:33:19.280053Z"
    }
   },
   "outputs": [],
   "source": [
    "model = get_model()\n",
    "\n",
    "\n",
    "def my_scalar() -> tf.Tensor:\n",
    "    return model.training_loss()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c3139f7",
   "metadata": {},
   "source": [
    "Let us test our function first:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "951df42b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-13T17:33:19.283392Z",
     "iopub.status.busy": "2023-01-13T17:33:19.283150Z",
     "iopub.status.idle": "2023-01-13T17:33:19.312504Z",
     "shell.execute_reply": "2023-01-13T17:33:19.311977Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<tf.Tensor: shape=(), dtype=float64, numpy=21.5778089200757>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_scalar()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cd6f02a5",
   "metadata": {},
   "source": [
    "And this is how we use it as a monitor:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4d1e9ee3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-13T17:33:19.314981Z",
     "iopub.status.busy": "2023-01-13T17:33:19.314737Z",
     "iopub.status.idle": "2023-01-13T17:33:19.679789Z",
     "shell.execute_reply": "2023-01-13T17:33:19.679123Z"
    }
   },
   "outputs": [],
   "source": [
    "log_dir = \"logs/scalar\"\n",
    "\n",
    "scalar_task = gpflow.monitor.ScalarToTensorBoard(\n",
    "    log_dir, my_scalar, \"my_scalar_name\"\n",
    ")\n",
    "task_group = gpflow.monitor.MonitorTaskGroup(scalar_task, period=3)\n",
    "monitor = gpflow.monitor.Monitor(task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eace84a2",
   "metadata": {},
   "source": [
    "And you can use [ImageToTensorBoard](../../api/gpflow/monitor/index.rst#gpflow-monitor-imagetotensorboard) to write arbitrary images to the logs. In this case your callback function needs to take a matplotlib `Figure` and `Axes`, and plot your images to those:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "88e78164",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-13T17:33:19.682748Z",
     "iopub.status.busy": "2023-01-13T17:33:19.682436Z",
     "iopub.status.idle": "2023-01-13T17:33:19.703887Z",
     "shell.execute_reply": "2023-01-13T17:33:19.703273Z"
    }
   },
   "outputs": [],
   "source": [
    "model = get_model()\n",
    "\n",
    "\n",
    "def my_image(\n",
    "    figure: matplotlib.figure.Figure, ax: matplotlib.axes.Axes\n",
    ") -> None:\n",
    "    Xnew = np.linspace(X.min() - 0.5, X.max() + 0.5, 100)[:, None]\n",
    "    Ypred = model.predict_f_samples(Xnew, full_cov=True, num_samples=10)\n",
    "    ax.plot(Xnew.flatten(), np.squeeze(Ypred).T, \"C0\", lw=0.5)\n",
    "    ax.scatter(X, Y)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aba625c0",
   "metadata": {},
   "source": [
    "Again, let us test our callback in isolation, before we use it:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "09559d1c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-13T17:33:19.706908Z",
     "iopub.status.busy": "2023-01-13T17:33:19.706590Z",
     "iopub.status.idle": "2023-01-13T17:33:19.953421Z",
     "shell.execute_reply": "2023-01-13T17:33:19.952799Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "my_image(fig, ax)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d470c843",
   "metadata": {},
   "source": [
    "And this is how we use the callback:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "590f2f20",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-13T17:33:19.956412Z",
     "iopub.status.busy": "2023-01-13T17:33:19.956117Z",
     "iopub.status.idle": "2023-01-13T17:33:21.454039Z",
     "shell.execute_reply": "2023-01-13T17:33:21.453408Z"
    }
   },
   "outputs": [],
   "source": [
    "log_dir = \"logs/image\"\n",
    "\n",
    "image_task = gpflow.monitor.ImageToTensorBoard(\n",
    "    log_dir, my_image, \"my_image_name\"\n",
    ")\n",
    "task_group = gpflow.monitor.MonitorTaskGroup(image_task, period=3)\n",
    "monitor = gpflow.monitor.Monitor(task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe5f376b",
   "metadata": {},
   "source": [
    "Finally, let us demonstrate what it might look like if you use all these monitor tasks at the same time:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7122c100",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-13T17:33:21.457035Z",
     "iopub.status.busy": "2023-01-13T17:33:21.456743Z",
     "iopub.status.idle": "2023-01-13T17:33:23.527815Z",
     "shell.execute_reply": "2023-01-13T17:33:23.527049Z"
    }
   },
   "outputs": [],
   "source": [
    "log_dir = \"logs/combined\"\n",
    "model = get_model()\n",
    "\n",
    "\n",
    "def my_scalar_2() -> tf.Tensor:\n",
    "    return model.training_loss()\n",
    "\n",
    "\n",
    "def my_image_2(\n",
    "    figure: matplotlib.figure.Figure, ax: matplotlib.axes.Axes\n",
    ") -> None:\n",
    "    Xnew = np.linspace(X.min() - 0.5, X.max() + 0.5, 100)[:, None]\n",
    "    Ypred = model.predict_f_samples(Xnew, full_cov=True, num_samples=10)\n",
    "    ax.plot(Xnew.flatten(), np.squeeze(Ypred).T, \"C0\", lw=0.5)\n",
    "    ax.scatter(X, Y)\n",
    "\n",
    "\n",
    "model_task = gpflow.monitor.ModelToTensorBoard(log_dir, model)\n",
    "scalar_task = gpflow.monitor.ScalarToTensorBoard(\n",
    "    log_dir, my_scalar_2, \"my_scalar_name\"\n",
    ")\n",
    "image_task = gpflow.monitor.ImageToTensorBoard(\n",
    "    log_dir, my_image_2, \"my_image_name\"\n",
    ")\n",
    "\n",
    "fast_task_group = gpflow.monitor.MonitorTaskGroup(\n",
    "    [model_task, scalar_task], period=1\n",
    ")\n",
    "slow_task_group = gpflow.monitor.MonitorTaskGroup(image_task, period=3)\n",
    "\n",
    "monitor = gpflow.monitor.Monitor(fast_task_group, slow_task_group)\n",
    "\n",
    "opt = gpflow.optimizers.Scipy()\n",
    "opt.minimize(\n",
    "    model.training_loss, model.trainable_variables, step_callback=monitor\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f688a8ef",
   "metadata": {},
   "source": [
    "Here we needed to redefine `my_scalar` and `my_image` because we had hardcoded the model."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b211df1d",
   "metadata": {},
   "source": [
    "`gpflow.optimizers.Scipy.minimize()` runs an optimizer until convergence.\n",
    "Other optimizers, like `tensorflow.keras.optimizers.Adam()` need `.minimize()` to be called in a loop:\n",
    "\n",
    "opt = tf.keras.optimizers.Adam()\n",
    "\n",
    "\n",
    "@tf.function\n",
    "def optimization_step():\n",
    "    opt.minimize(model.training_loss, model.trainable_variables)\n",
    "\n",
    "\n",
    "for i in range(10):\n",
    "    optimization_step()\n",
    "    monitor(i)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}